{"version":3,"sources":["webpack:///./src/components/PostLayouts.js","webpack:///./src/templates/post/index.js"],"names":["PostLayouts","layoutData","categories","theme","layoutType","fieldGroupName","layouts","post_Components_Contents_ArticleHero","PostHero","post_Components_Contents_Quote","Quote","post_Components_Contents_Columns","CopyColumns","post_Components_Contents_LargePhoto","PhotoBackground","post_Components_Contents_ImageLayouts","PhotoLayout","post_Components_Contents_FiftyFifty","FiftyFifty","post_Components_Contents_1x3Layout","PhotoLayout1X3","post_Components_Contents_TastingNotes","TastingNotes","post_Components_Contents_Spacer","Spacer","default","style","color","ComponentTag","type","filterCategories","cats","nodes","length","filter","cat","name","Post","pageContext","title","components","contents","Layout","themeSelect","map","layout","index","key"],"mappings":"wLA0DeA,EA7CK,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,MACvCC,EAAaH,EAAWI,gBAAkB,4BAc1CC,EAAU,CACdC,qCAAsCC,IACtCC,+BAAgCC,IAChCC,iCAAkCC,IAClCC,oCAAqCC,IACrCC,sCAAuCC,IACvCC,oCAAqCC,IACrCC,mCAAoCC,IACpCC,sCAAuCC,IACvCC,gCAAiCC,IACjCC,QAnBc,kBACd,yBAAKC,MAAO,CAAEC,MAAiB,UAAVxB,EAAoB,QAAU,UAAnD,4DAC4DC,KAuBxDwB,EAAetB,EAAQF,GACzBE,EAAQF,GACRE,EAAO,QAEX,OACE,kBAACsB,EAAD,iBACM3B,EADN,CAEEC,WAAYA,EACZC,MAAOA,EACP0B,KAAM,WC/CNC,EAAmB,SAAA5B,GACvB,IAAM6B,EAAO7B,EAAW8B,MAAMC,OAAS/B,EAAW8B,MAAQ,KAE1D,OAAKD,EAIEA,EAAKG,QACV,SAAAC,GAAG,MAAiB,kBAAbA,EAAIC,MAAyC,aAAbD,EAAIC,QAJpC,MA4BIC,UApBF,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACNC,EAAkCD,EAAlCC,MAAOC,EAA2BF,EAA3BE,WAAYtC,EAAeoC,EAAfpC,WAErBI,EAAUkC,EAAWC,UAAY,GAEvC,OACE,kBAACC,EAAA,EAAD,CAAQvC,MAAOmC,EAAYK,YAAYA,YAAaJ,MAAOA,GACzD,kBAAC,IAAD,CAAKA,MAAOA,GAAS,aACpBjC,EAAQsC,KAAI,SAACC,EAAQC,GAAT,OACX,kBAAC,EAAD,CACEC,IAAKD,EACL7C,WAAY4C,EACZ3C,WAAY4B,EAAiB5B,GAC7BC,MAAOmC,EAAYK,YAAYA","file":"component---src-templates-post-index-js-c9a95de3f7546e7cc7d7.js","sourcesContent":["import React from \"react\"\nimport {\n  PostHero,\n  Quote,\n  CopyColumns,\n  PhotoBackground,\n  PhotoLayout,\n  FiftyFifty,\n  PhotoLayout1X3,\n  TastingNotes,\n  Spacer,\n} from \"src/components\"\n\nconst PostLayouts = ({ layoutData, categories, theme }) => {\n  const layoutType = layoutData.fieldGroupName || \"No field group name found\"\n\n  /**\n   * Default component\n   */\n  const Default = () => (\n    <div style={{ color: theme === \"light\" ? \"black\" : \"white\" }}>\n      In PostLayouts the mapping of this component is missing: {layoutType}\n    </div>\n  )\n\n  /**\n   * Mapping the fieldGroupName(s) to our components\n   */\n  const layouts = {\n    post_Components_Contents_ArticleHero: PostHero,\n    post_Components_Contents_Quote: Quote,\n    post_Components_Contents_Columns: CopyColumns,\n    post_Components_Contents_LargePhoto: PhotoBackground,\n    post_Components_Contents_ImageLayouts: PhotoLayout,\n    post_Components_Contents_FiftyFifty: FiftyFifty,\n    post_Components_Contents_1x3Layout: PhotoLayout1X3,\n    post_Components_Contents_TastingNotes: TastingNotes,\n    post_Components_Contents_Spacer: Spacer,\n    default: Default,\n  }\n\n  /**\n   * If layout type is not existing in our mapping, it shows our Default instead.\n   */\n  const ComponentTag = layouts[layoutType]\n    ? layouts[layoutType]\n    : layouts[\"default\"]\n\n  return (\n    <ComponentTag\n      {...layoutData}\n      categories={categories}\n      theme={theme}\n      type={\"post\"}\n    />\n  )\n}\n\nexport default PostLayouts\n","import React from \"react\"\n\nimport Layout from \"src/components/Layout\"\nimport SEO from \"src/components/seo\"\nimport PostLayouts from \"src/components/PostLayouts\"\n\nconst filterCategories = categories => {\n  const cats = categories.nodes.length ? categories.nodes : null\n\n  if (!cats) {\n    return null\n  }\n\n  return cats.filter(\n    cat => cat.name !== \"Uncategorized\" && cat.name !== \"Featured\"\n  )\n}\n\nconst Post = ({ pageContext }) => {\n  const { title, components, categories } = pageContext\n\n  const layouts = components.contents || []\n\n  return (\n    <Layout theme={pageContext.themeSelect.themeSelect} title={title}>\n      <SEO title={title || \"Untitled\"} />\n      {layouts.map((layout, index) => (\n        <PostLayouts\n          key={index}\n          layoutData={layout}\n          categories={filterCategories(categories)}\n          theme={pageContext.themeSelect.themeSelect}\n        />\n      ))}\n    </Layout>\n  )\n}\n\nexport default Post\n"],"sourceRoot":""}