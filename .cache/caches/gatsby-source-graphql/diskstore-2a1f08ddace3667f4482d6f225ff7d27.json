{"expireTime":9007200843400247000,"key":"gatsby-source-graphql-schema-WPGraphQL-wpgraphql","val":"schema {\n  query: RootQuery\n  mutation: RootMutation\n}\n\n\"\"\"\nAvatars are profile images for users. WordPress by default uses the Gravatar service to host and fetch avatars from.\n\"\"\"\ntype Avatar {\n  \"\"\"\n  URL for the default image or a default type. Accepts &#039;404&#039; (return a\n  404 instead of a default image), &#039;retro&#039; (8bit),\n  &#039;monsterid&#039; (monster), &#039;wavatar&#039; (cartoon face),\n  &#039;indenticon&#039; (the &#039;quilt&#039;), &#039;mystery&#039;,\n  &#039;mm&#039;, or &#039;mysteryman&#039; (The Oyster Man), &#039;blank&#039;\n  (transparent GIF), or &#039;gravatar_default&#039; (the Gravatar logo).\n  \"\"\"\n  default: String\n\n  \"\"\"HTML attributes to insert in the IMG element. Is not sanitized.\"\"\"\n  extraAttr: String\n\n  \"\"\"Whether to always show the default image, never the Gravatar.\"\"\"\n  forceDefault: Boolean\n\n  \"\"\"Whether the avatar was successfully found.\"\"\"\n  foundAvatar: Boolean\n\n  \"\"\"Height of the avatar image.\"\"\"\n  height: Int\n\n  \"\"\"Whether the object is restricted from the current viewer\"\"\"\n  isRestricted: Boolean\n\n  \"\"\"\n  What rating to display avatars up to. Accepts &#039;G&#039;, &#039;PG&#039;,\n  &#039;R&#039;, &#039;X&#039;, and are judged in that order.\n  \"\"\"\n  rating: String\n\n  \"\"\"Type of url scheme to use. Typically HTTP vs. HTTPS.\"\"\"\n  scheme: String\n\n  \"\"\"\n  The size of the avatar in pixels. A value of 96 will match a 96px x 96px gravatar image.\n  \"\"\"\n  size: Int\n\n  \"\"\"URL for the gravatar image source.\"\"\"\n  url: String\n\n  \"\"\"Width of the avatar image.\"\"\"\n  width: Int\n}\n\n\"\"\"\nWhat rating to display avatars up to. Accepts 'G', 'PG', 'R', 'X', and are\njudged in that order. Default is the value of the 'avatar_rating' option\n\"\"\"\nenum AvatarRatingEnum {\n  G\n  PG\n  R\n  X\n}\n\n\"\"\"The category type\"\"\"\ntype Category implements Node & TermNode & UniformResourceIdentifiable {\n  \"\"\"The ancestors of the object\"\"\"\n  ancestors: [Category]\n\n  \"\"\"The id field matches the WP_Post-&gt;ID field.\"\"\"\n  categoryId: Int @deprecated(reason: \"Deprecated in favor of databaseId\")\n\n  \"\"\"Connection between the category type and the category type\"\"\"\n  children(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: CategoryToCategoryConnectionWhereArgs\n  ): CategoryToCategoryConnection\n\n  \"\"\"The number of objects connected to the object\"\"\"\n  count: Int\n\n  \"\"\"Identifies the primary key from the database.\"\"\"\n  databaseId: Int!\n\n  \"\"\"The description of the object\"\"\"\n  description: String\n\n  \"\"\"The globally unique ID for the object\"\"\"\n  id: ID!\n\n  \"\"\"Whether the object is restricted from the current viewer\"\"\"\n  isRestricted: Boolean\n\n  \"\"\"The link to the term\"\"\"\n  link: String\n\n  \"\"\"The human friendly name of the object.\"\"\"\n  name: String\n\n  \"\"\"The parent object\"\"\"\n  parent: Category\n\n  \"\"\"Connection between the category type and the post type\"\"\"\n  posts(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: CategoryToPostConnectionWhereArgs\n  ): CategoryToPostConnection\n\n  \"\"\"An alphanumeric identifier for the object unique to its type.\"\"\"\n  slug: String\n\n  \"\"\"Connection between the category type and the Taxonomy type\"\"\"\n  taxonomy: CategoryToTaxonomyConnection\n\n  \"\"\"The ID of the term group that this term object belongs to\"\"\"\n  termGroupId: Int\n\n  \"\"\"The taxonomy ID that the object is associated with\"\"\"\n  termTaxonomyId: Int\n\n  \"\"\"The unique resource identifier path\"\"\"\n  uri: String!\n}\n\n\"\"\"The Type of Identifier used to fetch a single resource. Default is ID.\"\"\"\nenum CategoryIdType {\n  \"\"\"The Database ID for the node\"\"\"\n  DATABASE_ID\n\n  \"\"\"The hashed Global ID\"\"\"\n  ID\n\n  \"\"\"The name of the node\"\"\"\n  NAME\n\n  \"\"\"Url friendly name of the node\"\"\"\n  SLUG\n\n  \"\"\"The URI for the node\"\"\"\n  URI\n}\n\n\"\"\"Connection between the category type and the category type\"\"\"\ntype CategoryToCategoryConnection {\n  \"\"\"Edges for the CategoryToCategoryConnection connection\"\"\"\n  edges: [CategoryToCategoryConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Category]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype CategoryToCategoryConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Category\n}\n\n\"\"\"Arguments for filtering the CategoryToCategoryConnection connection\"\"\"\ninput CategoryToCategoryConnectionWhereArgs {\n  \"\"\"\n  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.\n  \"\"\"\n  cacheDomain: String\n\n  \"\"\"\n  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.\n  \"\"\"\n  childOf: Int\n\n  \"\"\"\n  True to limit results to terms that have no children. This parameter has no\n  effect on non-hierarchical taxonomies. Default false.\n  \"\"\"\n  childless: Boolean\n\n  \"\"\"\n  Retrieve terms where the description is LIKE the input value. Default empty.\n  \"\"\"\n  descriptionLike: String\n\n  \"\"\"\n  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.\n  \"\"\"\n  exclude: [ID]\n\n  \"\"\"\n  Array of term ids to exclude along with all of their descendant terms. If\n  $include is non-empty, $exclude_tree is ignored. Default empty array.\n  \"\"\"\n  excludeTree: [ID]\n\n  \"\"\"\n  Whether to hide terms not assigned to any posts. Accepts true or false. Default false\n  \"\"\"\n  hideEmpty: Boolean\n\n  \"\"\"\n  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.\n  \"\"\"\n  hierarchical: Boolean\n\n  \"\"\"Array of term ids to include. Default empty array.\"\"\"\n  include: [ID]\n\n  \"\"\"Array of names to return term(s) for. Default empty.\"\"\"\n  name: [String]\n\n  \"\"\"Retrieve terms where the name is LIKE the input value. Default empty.\"\"\"\n  nameLike: String\n\n  \"\"\"\n  Array of object IDs. Results will be limited to terms associated with these objects.\n  \"\"\"\n  objectIds: [ID]\n\n  \"\"\"Field(s) to order terms by. Defaults to 'name'.\"\"\"\n  orderby: TermObjectsConnectionOrderbyEnum\n\n  \"\"\"\n  Whether to pad the quantity of a term's children in the quantity of each term's \"count\" object variable. Default false.\n  \"\"\"\n  padCounts: Boolean\n\n  \"\"\"Parent term ID to retrieve direct-child terms of. Default empty.\"\"\"\n  parent: Int\n\n  \"\"\"\n  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.\n  \"\"\"\n  search: String\n\n  \"\"\"\n  Default false. If true, only the items connected to the source item will be\n  returned. If false, all items will be returned regardless of connection to the source\n  \"\"\"\n  shouldOnlyIncludeConnectedItems: Boolean\n\n  \"\"\"\n  Default false. If true, the connection will be output in a flat list instead\n  of the hierarchical list. So child terms will be output in the same level as\n  the parent terms\n  \"\"\"\n  shouldOutputInFlatList: Boolean\n\n  \"\"\"Array of slugs to return term(s) for. Default empty.\"\"\"\n  slug: [String]\n\n  \"\"\"Array of term taxonomy IDs, to match when querying terms.\"\"\"\n  termTaxonomId: [ID]\n\n  \"\"\"Whether to prime meta caches for matched terms. Default true.\"\"\"\n  updateTermMetaCache: Boolean\n}\n\n\"\"\"Connection between the category type and the post type\"\"\"\ntype CategoryToPostConnection {\n  \"\"\"Edges for the CategoryToPostConnection connection\"\"\"\n  edges: [CategoryToPostConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Post]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype CategoryToPostConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Post\n}\n\n\"\"\"Arguments for filtering the CategoryToPostConnection connection\"\"\"\ninput CategoryToPostConnectionWhereArgs {\n  \"\"\"\n  The user that's connected as the author of the object. Use the userId for the author object.\n  \"\"\"\n  author: Int\n\n  \"\"\"Find objects connected to author(s) in the array of author's userIds\"\"\"\n  authorIn: [ID]\n\n  \"\"\"Find objects connected to the author by the author's nicename\"\"\"\n  authorName: String\n\n  \"\"\"\n  Find objects NOT connected to author(s) in the array of author's userIds\n  \"\"\"\n  authorNotIn: [ID]\n\n  \"\"\"Category ID\"\"\"\n  categoryId: Int\n\n  \"\"\"\n  Array of category IDs, used to display objects from one category OR another\n  \"\"\"\n  categoryIn: [ID]\n\n  \"\"\"Use Category Slug\"\"\"\n  categoryName: String\n\n  \"\"\"\n  Array of category IDs, used to display objects from one category OR another\n  \"\"\"\n  categoryNotIn: [ID]\n\n  \"\"\"Filter the connection based on dates\"\"\"\n  dateQuery: DateQueryInput\n\n  \"\"\"\n  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords\n  \"\"\"\n  hasPassword: Boolean\n\n  \"\"\"Specific ID of the object\"\"\"\n  id: Int\n\n  \"\"\"Array of IDs for the objects to retrieve\"\"\"\n  in: [ID]\n\n  \"\"\"Get objects with a specific mimeType property\"\"\"\n  mimeType: MimeTypeEnum\n\n  \"\"\"Slug / post_name of the object\"\"\"\n  name: String\n\n  \"\"\"Specify objects to retrieve. Use slugs\"\"\"\n  nameIn: [String]\n\n  \"\"\"\n  Specify IDs NOT to retrieve. If this is used in the same query as \"in\", it will be ignored\n  \"\"\"\n  notIn: [ID]\n\n  \"\"\"What paramater to use to order the objects by.\"\"\"\n  orderby: [PostObjectsConnectionOrderbyInput]\n\n  \"\"\"Use ID to return only children. Use 0 to return only top-level items\"\"\"\n  parent: String\n\n  \"\"\"Specify objects whose parent is in an array\"\"\"\n  parentIn: [ID]\n\n  \"\"\"Specify posts whose parent is not in an array\"\"\"\n  parentNotIn: [ID]\n\n  \"\"\"Show posts with a specific password.\"\"\"\n  password: String\n\n  \"\"\"Show Posts based on a keyword search\"\"\"\n  search: String\n  stati: [PostStatusEnum]\n  status: PostStatusEnum\n\n  \"\"\"Tag Slug\"\"\"\n  tag: String\n\n  \"\"\"Use Tag ID\"\"\"\n  tagId: String\n\n  \"\"\"Array of tag IDs, used to display objects from one tag OR another\"\"\"\n  tagIn: [ID]\n\n  \"\"\"Array of tag IDs, used to display objects from one tag OR another\"\"\"\n  tagNotIn: [ID]\n\n  \"\"\"Array of tag slugs, used to display objects from one tag OR another\"\"\"\n  tagSlugAnd: [String]\n\n  \"\"\"Array of tag slugs, used to exclude objects in specified tags\"\"\"\n  tagSlugIn: [String]\n\n  \"\"\"Title of the object\"\"\"\n  title: String\n}\n\n\"\"\"Connection between the category type and the Taxonomy type\"\"\"\ntype CategoryToTaxonomyConnection {\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  node: Taxonomy\n}\n\n\"\"\"A Comment object\"\"\"\ntype Comment implements Node {\n  \"\"\"\n  User agent used to post the comment. This field is equivalent to\n  WP_Comment-&gt;comment_agent and the value matching the\n  &quot;comment_agent&quot; column in SQL.\n  \"\"\"\n  agent: String\n\n  \"\"\"\n  The approval status of the comment. This field is equivalent to\n  WP_Comment-&gt;comment_approved and the value matching the\n  &quot;comment_approved&quot; column in SQL.\n  \"\"\"\n  approved: Boolean\n\n  \"\"\"The author of the comment\"\"\"\n  author: CommentAuthorUnion\n\n  \"\"\"\n  IP address for the author. This field is equivalent to\n  WP_Comment-&gt;comment_author_IP and the value matching the\n  &quot;comment_author_IP&quot; column in SQL.\n  \"\"\"\n  authorIp: String\n\n  \"\"\"Connection between the Comment type and the Comment type\"\"\"\n  children(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: CommentToCommentConnectionWhereArgs\n  ): CommentToCommentConnection\n\n  \"\"\"ID for the comment, unique among comments.\"\"\"\n  commentId: Int\n\n  \"\"\"The object the comment was added to\"\"\"\n  commentedOn: PostObjectUnion\n\n  \"\"\"\n  Content of the comment. This field is equivalent to\n  WP_Comment-&gt;comment_content and the value matching the\n  &quot;comment_content&quot; column in SQL.\n  \"\"\"\n  content(\n    \"\"\"Format of the field output\"\"\"\n    format: PostObjectFieldFormatEnum\n  ): String\n\n  \"\"\"\n  Date the comment was posted in local time. This field is equivalent to\n  WP_Comment-&gt;date and the value matching the &quot;date&quot; column in SQL.\n  \"\"\"\n  date: String\n\n  \"\"\"\n  Date the comment was posted in GMT. This field is equivalent to\n  WP_Comment-&gt;date_gmt and the value matching the &quot;date_gmt&quot; column in SQL.\n  \"\"\"\n  dateGmt: String\n\n  \"\"\"The globally unique identifier for the comment object\"\"\"\n  id: ID!\n\n  \"\"\"Whether the object is restricted from the current viewer\"\"\"\n  isRestricted: Boolean\n\n  \"\"\"\n  Karma value for the comment. This field is equivalent to\n  WP_Comment-&gt;comment_karma and the value matching the\n  &quot;comment_karma&quot; column in SQL.\n  \"\"\"\n  karma: Int\n\n  \"\"\"\n  Parent comment of current comment. This field is equivalent to the WP_Comment\n  instance matching the WP_Comment-&gt;comment_parent ID.\n  \"\"\"\n  parent: Comment\n\n  \"\"\"\n  Type of comment. This field is equivalent to WP_Comment-&gt;comment_type and\n  the value matching the &quot;comment_type&quot; column in SQL.\n  \"\"\"\n  type: String\n}\n\n\"\"\"A Comment Author object\"\"\"\ntype CommentAuthor implements Node {\n  \"\"\"The email for the comment author\"\"\"\n  email: String\n\n  \"\"\"The globally unique identifier for the comment author object\"\"\"\n  id: ID!\n\n  \"\"\"Whether the object is restricted from the current viewer\"\"\"\n  isRestricted: Boolean\n\n  \"\"\"The name for the comment author.\"\"\"\n  name: String\n\n  \"\"\"The url the comment author.\"\"\"\n  url: String\n}\n\nunion CommentAuthorUnion = User | CommentAuthor\n\n\"\"\"Options for ordering the connection\"\"\"\nenum CommentsConnectionOrderbyEnum {\n  COMMENT_AGENT\n  COMMENT_APPROVED\n  COMMENT_AUTHOR\n  COMMENT_AUTHOR_EMAIL\n  COMMENT_AUTHOR_IP\n  COMMENT_AUTHOR_URL\n  COMMENT_CONTENT\n  COMMENT_DATE\n  COMMENT_DATE_GMT\n  COMMENT_ID\n  COMMENT_IN\n  COMMENT_KARMA\n  COMMENT_PARENT\n  COMMENT_POST_ID\n  COMMENT_TYPE\n  USER_ID\n}\n\n\"\"\"Connection between the Comment type and the Comment type\"\"\"\ntype CommentToCommentConnection {\n  \"\"\"Edges for the CommentToCommentConnection connection\"\"\"\n  edges: [CommentToCommentConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Comment]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype CommentToCommentConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Comment\n}\n\n\"\"\"Arguments for filtering the CommentToCommentConnection connection\"\"\"\ninput CommentToCommentConnectionWhereArgs {\n  \"\"\"Comment author email address.\"\"\"\n  authorEmail: String\n\n  \"\"\"Array of author IDs to include comments for.\"\"\"\n  authorIn: [ID]\n\n  \"\"\"Array of author IDs to exclude comments for.\"\"\"\n  authorNotIn: [ID]\n\n  \"\"\"Comment author URL.\"\"\"\n  authorUrl: String\n\n  \"\"\"Array of comment IDs to include.\"\"\"\n  commentIn: [ID]\n\n  \"\"\"\n  Array of IDs of users whose unapproved comments will be returned by the\n  \t\t\t\t\t\t\tquery regardless of status.\n  \"\"\"\n  commentNotIn: [ID]\n\n  \"\"\"Include comments of a given type.\"\"\"\n  commentType: String\n\n  \"\"\"Include comments from a given array of comment types.\"\"\"\n  commentTypeIn: [String]\n\n  \"\"\"Exclude comments from a given array of comment types.\"\"\"\n  commentTypeNotIn: String\n\n  \"\"\"Content object author ID to limit results by.\"\"\"\n  contentAuthor: [ID]\n\n  \"\"\"Array of author IDs to retrieve comments for.\"\"\"\n  contentAuthorIn: [ID]\n\n  \"\"\"Array of author IDs *not* to retrieve comments for.\"\"\"\n  contentAuthorNotIn: [ID]\n\n  \"\"\"\n  Limit results to those affiliated with a given content object\n  \t\t\t\t\t\t\tID.\n  \"\"\"\n  contentId: ID\n\n  \"\"\"\n  Array of content object IDs to include affiliated comments\n  \t\t\t\t\t\t\tfor.\n  \"\"\"\n  contentIdIn: [ID]\n\n  \"\"\"\n  Array of content object IDs to exclude affiliated comments\n  \t\t\t\t\t\t\tfor.\n  \"\"\"\n  contentIdNotIn: [ID]\n\n  \"\"\"Content object name to retrieve affiliated comments for.\"\"\"\n  contentName: String\n\n  \"\"\"Content Object parent ID to retrieve affiliated comments for.\"\"\"\n  contentParent: Int\n\n  \"\"\"\n  Array of content object statuses to retrieve affiliated comments for.\n  \t\t\t\t\t\t\tPass 'any' to match any value.\n  \"\"\"\n  contentStatus: [PostStatusEnum]\n\n  \"\"\"\n  Content object type or array of types to retrieve affiliated comments for. Pass 'any' to match any value.\n  \"\"\"\n  contentType: [ContentTypeEnum]\n\n  \"\"\"\n  Array of IDs or email addresses of users whose unapproved comments will be\n  returned by the query regardless of $status. Default empty\n  \"\"\"\n  includeUnapproved: [ID]\n\n  \"\"\"Karma score to retrieve matching comments for.\"\"\"\n  karma: Int\n\n  \"\"\"The cardinality of the order of the connection\"\"\"\n  order: OrderEnum\n\n  \"\"\"Field to order the comments by.\"\"\"\n  orderby: CommentsConnectionOrderbyEnum\n\n  \"\"\"Parent ID of comment to retrieve children of.\"\"\"\n  parent: Int\n\n  \"\"\"Array of parent IDs of comments to retrieve children for.\"\"\"\n  parentIn: [ID]\n\n  \"\"\"\n  Array of parent IDs of comments *not* to retrieve children\n  \t\t\t\t\t\t\tfor.\n  \"\"\"\n  parentNotIn: [ID]\n\n  \"\"\"Search term(s) to retrieve matching comments for.\"\"\"\n  search: String\n\n  \"\"\"Comment status to limit results by.\"\"\"\n  status: String\n\n  \"\"\"Include comments for a specific user ID.\"\"\"\n  userId: ID\n}\n\n\"\"\"Nodes used to manage content\"\"\"\ninterface ContentNode {\n  \"\"\"The ID of the object in the database.\"\"\"\n  databaseId: Int!\n\n  \"\"\"Post publishing date.\"\"\"\n  date: String\n\n  \"\"\"The publishing date set in GMT.\"\"\"\n  dateGmt: String\n\n  \"\"\"The desired slug of the post\"\"\"\n  desiredSlug: String\n\n  \"\"\"The user that most recently edited the object\"\"\"\n  editLast: User\n\n  \"\"\"\n  If a user has edited the object within the past 15 seconds, this will return\n  the user and the time they last edited. Null if the edit lock doesn't exist or\n  is greater than 15 seconds\n  \"\"\"\n  editLock: EditLock\n\n  \"\"\"The RSS enclosure for the object\"\"\"\n  enclosure: String\n\n  \"\"\"\n  The global unique identifier for this post. This currently matches the value\n  stored in WP_Post->guid and the guid column in the \"post_objects\" database table.\n  \"\"\"\n  guid: String\n\n  \"\"\"The globally unique identifier of the node.\"\"\"\n  id: ID!\n\n  \"\"\"Whether the object is restricted from the current viewer\"\"\"\n  isRestricted: Boolean\n\n  \"\"\"The permalink of the post\"\"\"\n  link: String\n\n  \"\"\"\n  The local modified time for a post. If a post was recently updated the\n  modified field will change to match the corresponding time.\n  \"\"\"\n  modified: String\n\n  \"\"\"\n  The GMT modified time for a post. If a post was recently updated the modified\n  field will change to match the corresponding time in GMT.\n  \"\"\"\n  modifiedGmt: String\n\n  \"\"\"\n  The uri slug for the post. This is equivalent to the WP_Post->post_name field\n  and the post_name column in the database for the \"post_objects\" table.\n  \"\"\"\n  slug: String\n\n  \"\"\"The current status of the object\"\"\"\n  status: String\n\n  \"\"\"URI path for the resource\"\"\"\n  uri: String!\n}\n\n\"\"\"The Type of Identifier used to fetch a single resource. Default is ID.\"\"\"\nenum ContentNodeIdTypeEnum {\n  \"\"\"Identify a resource by the Database ID.\"\"\"\n  DATABASE_ID\n\n  \"\"\"Identify a resource by the (hashed) Global ID.\"\"\"\n  ID\n\n  \"\"\"Identify a resource by the URI.\"\"\"\n  URI\n}\n\nunion ContentRevisionUnion = Post | Page\n\n\"\"\"The template assigned to a node of content\"\"\"\ninterface ContentTemplate {\n  \"\"\"The name of the template\"\"\"\n  templateName: String\n}\n\nunion ContentTemplateUnion = DefaultTemplate | CoverTemplateTemplate | FullWidthTemplateTemplate\n\n\"\"\"An Post Type object\"\"\"\ntype ContentType implements Node {\n  \"\"\"Whether this content type should can be exported.\"\"\"\n  canExport: Boolean\n\n  \"\"\"List of Taxonomies connected to the Post Type\"\"\"\n  connectedTaxonomies(\n    \"\"\"Select which taxonomies to limit the results to\"\"\"\n    taxonomies: [TaxonomyEnum]\n  ): [Taxonomy]\n\n  \"\"\"A list of Taxonomies associated with the post type\"\"\"\n  connectedTaxonomyNames(\n    \"\"\"Select which taxonomies to limit the results to\"\"\"\n    taxonomies: [TaxonomyEnum]\n  ): [String]\n\n  \"\"\"\n  Whether delete this type of content when the author of it is deleted from the system.\n  \"\"\"\n  deleteWithUser: Boolean\n\n  \"\"\"Description of the content type.\"\"\"\n  description: String\n\n  \"\"\"\n  Whether to exclude posts with this post type from front end search results.\n  \"\"\"\n  excludeFromSearch: Boolean\n\n  \"\"\"The plural name of the post type within the GraphQL Schema.\"\"\"\n  graphqlPluralName: String\n\n  \"\"\"The singular name of the post type within the GraphQL Schema.\"\"\"\n  graphqlSingleName: String\n\n  \"\"\"\n  Whether this content type should have archives. Content archives are generated by type and by date.\n  \"\"\"\n  hasArchive: Boolean\n\n  \"\"\"Whether the post type is hierarchical, for example pages.\"\"\"\n  hierarchical: Boolean\n\n  \"\"\"The globally unique identifier of the post-type object.\"\"\"\n  id: ID!\n\n  \"\"\"Whether the object is restricted from the current viewer\"\"\"\n  isRestricted: Boolean\n\n  \"\"\"Display name of the content type.\"\"\"\n  label: String\n\n  \"\"\"Details about the post type labels.\"\"\"\n  labels: PostTypeLabelDetails\n\n  \"\"\"The name of the icon file to display as a menu icon.\"\"\"\n  menuIcon: String\n\n  \"\"\"\n  The position of this post type in the menu. Only applies if show_in_menu is true.\n  \"\"\"\n  menuPosition: Int\n\n  \"\"\"\n  The internal name of the post type. This should not be used for display purposes.\n  \"\"\"\n  name: String\n\n  \"\"\"\n  Whether a post type is intended for use publicly either via the admin\n  interface or by front-end users. While the default settings of\n  exclude_from_search, publicly_queryable, show_ui, and show_in_nav_menus are\n  inherited from public, each does not rely on this relationship and controls a\n  very specific intention.\n  \"\"\"\n  public: Boolean\n\n  \"\"\"\n  Whether queries can be performed on the front end for the post type as part of parse_request().\n  \"\"\"\n  publiclyQueryable: Boolean\n\n  \"\"\"\n  Name of content type to diplay in REST API &quot;wp/v2&quot; namespace.\n  \"\"\"\n  restBase: String\n\n  \"\"\"The REST Controller class assigned to handling this content type.\"\"\"\n  restControllerClass: String\n\n  \"\"\"Makes this post type available via the admin bar.\"\"\"\n  showInAdminBar: Boolean\n\n  \"\"\"Whether to add the post type to the GraphQL Schema.\"\"\"\n  showInGraphql: Boolean\n\n  \"\"\"\n  Where to show the post type in the admin menu. To work, $show_ui must be true.\n  If true, the post type is shown in its own top level menu. If false, no menu\n  is shown. If a string of an existing top level menu (eg. &quot;tools.php&quot;\n  or &quot;edit.php?post_type=page&quot;), the post type will be placed as a\n  sub-menu of that.\n  \"\"\"\n  showInMenu: Boolean\n\n  \"\"\"Makes this post type available for selection in navigation menus.\"\"\"\n  showInNavMenus: Boolean\n\n  \"\"\"\n  Whether to add the post type route in the REST API &quot;wp/v2&quot; namespace.\n  \"\"\"\n  showInRest: Boolean\n\n  \"\"\"\n  Whether to generate and allow a UI for managing this post type in the admin.\n  \"\"\"\n  showUi: Boolean\n}\n\n\"\"\"Allowed Content Types\"\"\"\nenum ContentTypeEnum {\n  \"\"\"The Type of Content object\"\"\"\n  ATTACHMENT\n\n  \"\"\"The Type of Content object\"\"\"\n  PAGE\n\n  \"\"\"The Type of Content object\"\"\"\n  POST\n}\n\n\"\"\"\nThe Type of Identifier used to fetch a single Content Type node. To be used along with the \"id\" field. Default is \"ID\".\n\"\"\"\nenum ContentTypeIdTypeEnum {\n  \"\"\"The globally unique ID\"\"\"\n  ID\n\n  \"\"\"The name of the content type.\"\"\"\n  NAME\n}\n\n\"\"\"The template assigned to the node\"\"\"\ntype CoverTemplateTemplate implements ContentTemplate {\n  \"\"\"The name of the template\"\"\"\n  templateName: String\n}\n\n\"\"\"Input for the createCategory mutation\"\"\"\ninput CreateCategoryInput {\n  \"\"\"The slug that the category will be an alias of\"\"\"\n  aliasOf: String\n  clientMutationId: String!\n\n  \"\"\"The description of the category object\"\"\"\n  description: String\n\n  \"\"\"The name of the category object to mutate\"\"\"\n  name: String!\n\n  \"\"\"The ID of the category that should be set as the parent\"\"\"\n  parentId: ID\n\n  \"\"\"\n  If this argument exists then the slug will be checked to see if it is not an\n  existing valid term. If that check succeeds (it is not a valid term), then it\n  is added and the term id is given. If it fails, then a check is made to\n  whether the taxonomy is hierarchical and the parent argument is not empty. If\n  the second check succeeds, the term will be inserted and the term id will be\n  given. If the slug argument is empty, then it will be calculated from the term name.\n  \"\"\"\n  slug: String\n}\n\n\"\"\"The payload for the createCategory mutation\"\"\"\ntype CreateCategoryPayload {\n  \"\"\"The created category\"\"\"\n  category: Category\n  clientMutationId: String!\n}\n\n\"\"\"Input for the createComment mutation\"\"\"\ninput CreateCommentInput {\n  \"\"\"User agent used to post the comment.\"\"\"\n  agent: String\n\n  \"\"\"The approval status of the comment.\"\"\"\n  approved: String\n\n  \"\"\"The name of the comment's author.\"\"\"\n  author: String\n\n  \"\"\"The email of the comment's author.\"\"\"\n  authorEmail: String\n\n  \"\"\"IP address for the comment's author.\"\"\"\n  authorIp: String\n\n  \"\"\"The url of the comment's author.\"\"\"\n  authorUrl: String\n  clientMutationId: String!\n\n  \"\"\"The ID of the post object the comment belongs to.\"\"\"\n  commentOn: Int\n\n  \"\"\"Content of the comment.\"\"\"\n  content: String\n\n  \"\"\"\n  The date of the object. Preferable to enter as year/month/day ( e.g.\n  01/31/2017 ) as it will rearrange date as fit if it is not specified.\n  Incomplete dates may have unintended results for example, \"2017\" as the input\n  will use current date with timestamp 20:17 \n  \"\"\"\n  date: String\n\n  \"\"\"Parent comment of current comment.\"\"\"\n  parent: ID\n\n  \"\"\"Type of comment.\"\"\"\n  type: String\n\n  \"\"\"The userID of the comment's author.\"\"\"\n  userId: Int\n}\n\n\"\"\"The payload for the createComment mutation\"\"\"\ntype CreateCommentPayload {\n  clientMutationId: String!\n\n  \"\"\"The comment that was created\"\"\"\n  comment: Comment\n\n  \"\"\"\n  Whether the mutation succeeded. If the comment is not approved, the server\n  will not return the comment to a non authenticated user, but a success message\n  can be returned if the create succeeded, and the client can optimistically add\n  the comment to the client cache\n  \"\"\"\n  success: Boolean\n}\n\n\"\"\"Input for the createMediaItem mutation\"\"\"\ninput CreateMediaItemInput {\n  \"\"\"Alternative text to display when mediaItem is not displayed\"\"\"\n  altText: String\n\n  \"\"\"The userId to assign as the author of the mediaItem\"\"\"\n  authorId: ID\n\n  \"\"\"The caption for the mediaItem\"\"\"\n  caption: String\n  clientMutationId: String!\n\n  \"\"\"The comment status for the mediaItem\"\"\"\n  commentStatus: String\n\n  \"\"\"The date of the mediaItem\"\"\"\n  date: String\n\n  \"\"\"The date (in GMT zone) of the mediaItem\"\"\"\n  dateGmt: String\n\n  \"\"\"Description of the mediaItem\"\"\"\n  description: String\n\n  \"\"\"The file name of the mediaItem\"\"\"\n  filePath: String\n\n  \"\"\"The file type of the mediaItem\"\"\"\n  fileType: MimeTypeEnum\n\n  \"\"\"The WordPress post ID or the graphQL postId of the parent object\"\"\"\n  parentId: ID\n\n  \"\"\"The ping status for the mediaItem\"\"\"\n  pingStatus: String\n\n  \"\"\"The slug of the mediaItem\"\"\"\n  slug: String\n\n  \"\"\"The status of the mediaItem\"\"\"\n  status: MediaItemStatusEnum\n\n  \"\"\"The title of the mediaItem\"\"\"\n  title: String\n}\n\n\"\"\"The payload for the createMediaItem mutation\"\"\"\ntype CreateMediaItemPayload {\n  clientMutationId: String!\n  mediaItem: MediaItem\n}\n\n\"\"\"Input for the createPage mutation\"\"\"\ninput CreatePageInput {\n  \"\"\"The userId to assign as the author of the object\"\"\"\n  authorId: ID\n  clientMutationId: String!\n\n  \"\"\"The comment status for the object\"\"\"\n  commentStatus: String\n\n  \"\"\"The content of the object\"\"\"\n  content: String\n\n  \"\"\"\n  The date of the object. Preferable to enter as year/month/day (e.g.\n  01/31/2017) as it will rearrange date as fit if it is not specified.\n  Incomplete dates may have unintended results for example, \"2017\" as the input\n  will use current date with timestamp 20:17 \n  \"\"\"\n  date: String\n\n  \"\"\"\n  A field used for ordering posts. This is typically used with nav menu items or\n  for special ordering of hierarchical content types.\n  \"\"\"\n  menuOrder: Int\n\n  \"\"\"The ID of the parent object\"\"\"\n  parentId: ID\n\n  \"\"\"The password used to protect the content of the object\"\"\"\n  password: String\n\n  \"\"\"The slug of the object\"\"\"\n  slug: String\n\n  \"\"\"The status of the object\"\"\"\n  status: PostStatusEnum\n\n  \"\"\"The title of the object\"\"\"\n  title: String\n}\n\n\"\"\"The payload for the createPage mutation\"\"\"\ntype CreatePagePayload {\n  clientMutationId: String!\n  page: Page\n}\n\n\"\"\"Input for the createPostFormat mutation\"\"\"\ninput CreatePostFormatInput {\n  \"\"\"The slug that the post_format will be an alias of\"\"\"\n  aliasOf: String\n  clientMutationId: String!\n\n  \"\"\"The description of the post_format object\"\"\"\n  description: String\n\n  \"\"\"The name of the post_format object to mutate\"\"\"\n  name: String!\n\n  \"\"\"\n  If this argument exists then the slug will be checked to see if it is not an\n  existing valid term. If that check succeeds (it is not a valid term), then it\n  is added and the term id is given. If it fails, then a check is made to\n  whether the taxonomy is hierarchical and the parent argument is not empty. If\n  the second check succeeds, the term will be inserted and the term id will be\n  given. If the slug argument is empty, then it will be calculated from the term name.\n  \"\"\"\n  slug: String\n}\n\n\"\"\"The payload for the createPostFormat mutation\"\"\"\ntype CreatePostFormatPayload {\n  clientMutationId: String!\n\n  \"\"\"The created post_format\"\"\"\n  postFormat: PostFormat\n}\n\n\"\"\"Input for the createPost mutation\"\"\"\ninput CreatePostInput {\n  \"\"\"The userId to assign as the author of the object\"\"\"\n  authorId: ID\n\n  \"\"\"Set connections between the post and categories\"\"\"\n  categories: PostCategoriesInput\n  clientMutationId: String!\n\n  \"\"\"The comment status for the object\"\"\"\n  commentStatus: String\n\n  \"\"\"The content of the object\"\"\"\n  content: String\n\n  \"\"\"\n  The date of the object. Preferable to enter as year/month/day (e.g.\n  01/31/2017) as it will rearrange date as fit if it is not specified.\n  Incomplete dates may have unintended results for example, \"2017\" as the input\n  will use current date with timestamp 20:17 \n  \"\"\"\n  date: String\n\n  \"\"\"The excerpt of the object\"\"\"\n  excerpt: String\n\n  \"\"\"\n  A field used for ordering posts. This is typically used with nav menu items or\n  for special ordering of hierarchical content types.\n  \"\"\"\n  menuOrder: Int\n\n  \"\"\"The password used to protect the content of the object\"\"\"\n  password: String\n\n  \"\"\"The ping status for the object\"\"\"\n  pingStatus: String\n\n  \"\"\"URLs that have been pinged.\"\"\"\n  pinged: [String]\n\n  \"\"\"Set connections between the post and postFormats\"\"\"\n  postFormats: PostPostFormatsInput\n\n  \"\"\"The slug of the object\"\"\"\n  slug: String\n\n  \"\"\"The status of the object\"\"\"\n  status: PostStatusEnum\n\n  \"\"\"Set connections between the post and tags\"\"\"\n  tags: PostTagsInput\n\n  \"\"\"The title of the object\"\"\"\n  title: String\n\n  \"\"\"URLs queued to be pinged.\"\"\"\n  toPing: [String]\n}\n\n\"\"\"The payload for the createPost mutation\"\"\"\ntype CreatePostPayload {\n  clientMutationId: String!\n  post: Post\n}\n\n\"\"\"Input for the createTag mutation\"\"\"\ninput CreateTagInput {\n  \"\"\"The slug that the post_tag will be an alias of\"\"\"\n  aliasOf: String\n  clientMutationId: String!\n\n  \"\"\"The description of the post_tag object\"\"\"\n  description: String\n\n  \"\"\"The name of the post_tag object to mutate\"\"\"\n  name: String!\n\n  \"\"\"\n  If this argument exists then the slug will be checked to see if it is not an\n  existing valid term. If that check succeeds (it is not a valid term), then it\n  is added and the term id is given. If it fails, then a check is made to\n  whether the taxonomy is hierarchical and the parent argument is not empty. If\n  the second check succeeds, the term will be inserted and the term id will be\n  given. If the slug argument is empty, then it will be calculated from the term name.\n  \"\"\"\n  slug: String\n}\n\n\"\"\"The payload for the createTag mutation\"\"\"\ntype CreateTagPayload {\n  clientMutationId: String!\n\n  \"\"\"The created post_tag\"\"\"\n  tag: Tag\n}\n\n\"\"\"Input for the createUser mutation\"\"\"\ninput CreateUserInput {\n  \"\"\"User's AOL IM account.\"\"\"\n  aim: String\n  clientMutationId: String!\n\n  \"\"\"A string containing content about the user.\"\"\"\n  description: String\n\n  \"\"\"\n  A string that will be shown on the site. Defaults to user's username. It is\n  likely that you will want to change this, for both appearance and security\n  through obscurity (that is if you dont use and delete the default admin user).\n  \"\"\"\n  displayName: String\n\n  \"\"\"A string containing the user's email address.\"\"\"\n  email: String\n\n  \"\"\"\tThe user's first name.\"\"\"\n  firstName: String\n\n  \"\"\"User's Jabber account.\"\"\"\n  jabber: String\n\n  \"\"\"The user's last name.\"\"\"\n  lastName: String\n\n  \"\"\"User's locale.\"\"\"\n  locale: String\n\n  \"\"\"\n  A string that contains a URL-friendly name for the user. The default is the user's username.\n  \"\"\"\n  nicename: String\n\n  \"\"\"The user's nickname, defaults to the user's username.\"\"\"\n  nickname: String\n\n  \"\"\"A string that contains the plain text password for the user.\"\"\"\n  password: String\n\n  \"\"\"The date the user registered. Format is Y-m-d H:i:s.\"\"\"\n  registered: String\n\n  \"\"\"\n  A string for whether to enable the rich editor or not. False if not empty.\n  \"\"\"\n  richEditing: String\n\n  \"\"\"An array of roles to be assigned to the user.\"\"\"\n  roles: [String]\n\n  \"\"\"A string that contains the user's username for logging in.\"\"\"\n  username: String!\n\n  \"\"\"A string containing the user's URL for the user's web site.\"\"\"\n  websiteUrl: String\n\n  \"\"\"User's Yahoo IM account.\"\"\"\n  yim: String\n}\n\n\"\"\"The payload for the createUser mutation\"\"\"\ntype CreateUserPayload {\n  clientMutationId: String!\n  user: User\n}\n\n\"\"\"Date values\"\"\"\ninput DateInput {\n  \"\"\"Day of the month (from 1 to 31)\"\"\"\n  day: Int\n\n  \"\"\"Month number (from 1 to 12)\"\"\"\n  month: Int\n\n  \"\"\"4 digit year (e.g. 2017)\"\"\"\n  year: Int\n}\n\n\"\"\"Filter the connection based on input\"\"\"\ninput DateQueryInput {\n  \"\"\"Nodes should be returned after this date\"\"\"\n  after: DateInput\n\n  \"\"\"Nodes should be returned before this date\"\"\"\n  before: DateInput\n\n  \"\"\"Column to query against\"\"\"\n  column: PostObjectsConnectionDateColumnEnum\n\n  \"\"\"For after/before, whether exact value should be matched or not\"\"\"\n  compare: String\n\n  \"\"\"Day of the month (from 1 to 31)\"\"\"\n  day: Int\n\n  \"\"\"Hour (from 0 to 23)\"\"\"\n  hour: Int\n\n  \"\"\"For after/before, whether exact value should be matched or not\"\"\"\n  inclusive: Boolean\n\n  \"\"\"Minute (from 0 to 59)\"\"\"\n  minute: Int\n\n  \"\"\"Month number (from 1 to 12)\"\"\"\n  month: Int\n\n  \"\"\"OR or AND, how the sub-arrays should be compared\"\"\"\n  relation: RelationEnum\n\n  \"\"\"Second (0 to 59)\"\"\"\n  second: Int\n\n  \"\"\"Week of the year (from 0 to 53)\"\"\"\n  week: Int\n\n  \"\"\"4 digit year (e.g. 2017)\"\"\"\n  year: Int\n}\n\n\"\"\"The template assigned to the node\"\"\"\ntype DefaultTemplate implements ContentTemplate {\n  \"\"\"The name of the template\"\"\"\n  templateName: String\n}\n\n\"\"\"Input for the deleteCategory mutation\"\"\"\ninput DeleteCategoryInput {\n  clientMutationId: String!\n\n  \"\"\"The ID of the category to delete\"\"\"\n  id: ID!\n}\n\n\"\"\"The payload for the deleteCategory mutation\"\"\"\ntype DeleteCategoryPayload {\n  \"\"\"The deteted term object\"\"\"\n  category: Category\n  clientMutationId: String!\n\n  \"\"\"The ID of the deleted object\"\"\"\n  deletedId: ID\n}\n\n\"\"\"Input for the deleteComment mutation\"\"\"\ninput DeleteCommentInput {\n  clientMutationId: String!\n\n  \"\"\"\n  Whether the comment should be force deleted instead of being moved to the trash\n  \"\"\"\n  forceDelete: Boolean\n\n  \"\"\"The deleted comment ID\"\"\"\n  id: ID!\n}\n\n\"\"\"The payload for the deleteComment mutation\"\"\"\ntype DeleteCommentPayload {\n  clientMutationId: String!\n\n  \"\"\"The deleted comment object\"\"\"\n  comment: Comment\n\n  \"\"\"The deleted comment ID\"\"\"\n  deletedId: ID\n}\n\n\"\"\"Input for the deleteMediaItem mutation\"\"\"\ninput DeleteMediaItemInput {\n  clientMutationId: String!\n\n  \"\"\"\n  Whether the mediaItem should be force deleted instead of being moved to the trash\n  \"\"\"\n  forceDelete: Boolean\n\n  \"\"\"The ID of the mediaItem to delete\"\"\"\n  id: ID!\n}\n\n\"\"\"The payload for the deleteMediaItem mutation\"\"\"\ntype DeleteMediaItemPayload {\n  clientMutationId: String!\n\n  \"\"\"The ID of the deleted mediaItem\"\"\"\n  deletedId: ID\n\n  \"\"\"The mediaItem before it was deleted\"\"\"\n  mediaItem: MediaItem\n}\n\n\"\"\"Input for the deletePage mutation\"\"\"\ninput DeletePageInput {\n  clientMutationId: String!\n\n  \"\"\"\n  Whether the object should be force deleted instead of being moved to the trash\n  \"\"\"\n  forceDelete: Boolean\n\n  \"\"\"The ID of the page to delete\"\"\"\n  id: ID!\n}\n\n\"\"\"The payload for the deletePage mutation\"\"\"\ntype DeletePagePayload {\n  clientMutationId: String!\n\n  \"\"\"The ID of the deleted object\"\"\"\n  deletedId: ID\n\n  \"\"\"The object before it was deleted\"\"\"\n  page: Page\n}\n\n\"\"\"Input for the deletePostFormat mutation\"\"\"\ninput DeletePostFormatInput {\n  clientMutationId: String!\n\n  \"\"\"The ID of the postFormat to delete\"\"\"\n  id: ID!\n}\n\n\"\"\"The payload for the deletePostFormat mutation\"\"\"\ntype DeletePostFormatPayload {\n  clientMutationId: String!\n\n  \"\"\"The ID of the deleted object\"\"\"\n  deletedId: ID\n\n  \"\"\"The deteted term object\"\"\"\n  postFormat: PostFormat\n}\n\n\"\"\"Input for the deletePost mutation\"\"\"\ninput DeletePostInput {\n  clientMutationId: String!\n\n  \"\"\"\n  Whether the object should be force deleted instead of being moved to the trash\n  \"\"\"\n  forceDelete: Boolean\n\n  \"\"\"The ID of the post to delete\"\"\"\n  id: ID!\n}\n\n\"\"\"The payload for the deletePost mutation\"\"\"\ntype DeletePostPayload {\n  clientMutationId: String!\n\n  \"\"\"The ID of the deleted object\"\"\"\n  deletedId: ID\n\n  \"\"\"The object before it was deleted\"\"\"\n  post: Post\n}\n\n\"\"\"Input for the deleteTag mutation\"\"\"\ninput DeleteTagInput {\n  clientMutationId: String!\n\n  \"\"\"The ID of the tag to delete\"\"\"\n  id: ID!\n}\n\n\"\"\"The payload for the deleteTag mutation\"\"\"\ntype DeleteTagPayload {\n  clientMutationId: String!\n\n  \"\"\"The ID of the deleted object\"\"\"\n  deletedId: ID\n\n  \"\"\"The deteted term object\"\"\"\n  tag: Tag\n}\n\n\"\"\"Input for the deleteUser mutation\"\"\"\ninput DeleteUserInput {\n  clientMutationId: String!\n\n  \"\"\"The ID of the user you want to delete\"\"\"\n  id: ID!\n\n  \"\"\"Reassign posts and links to new User ID.\"\"\"\n  reassignId: ID\n}\n\n\"\"\"The payload for the deleteUser mutation\"\"\"\ntype DeleteUserPayload {\n  clientMutationId: String!\n\n  \"\"\"The ID of the user that you just deleted\"\"\"\n  deletedId: ID\n\n  \"\"\"The deleted user object\"\"\"\n  user: User\n}\n\n\"\"\"The discussion setting type\"\"\"\ntype DiscussionSettings {\n  \"\"\"Allow people to submit comments on new posts.\"\"\"\n  defaultCommentStatus: String\n\n  \"\"\"\n  Allow link notifications from other blogs (pingbacks and trackbacks) on new articles.\n  \"\"\"\n  defaultPingStatus: String\n}\n\n\"\"\"Info on whether the object is locked by another user editing it\"\"\"\ntype EditLock {\n  \"\"\"The time when the object was last edited\"\"\"\n  editTime: String\n\n  \"\"\"The user that most recently edited the object\"\"\"\n  user: User\n}\n\n\"\"\"The template assigned to the node\"\"\"\ntype FullWidthTemplateTemplate implements ContentTemplate {\n  \"\"\"The name of the template\"\"\"\n  templateName: String\n}\n\n\"\"\"The general setting type\"\"\"\ntype GeneralSettings {\n  \"\"\"A date format for all date strings.\"\"\"\n  dateFormat: String\n\n  \"\"\"Site tagline.\"\"\"\n  description: String\n\n  \"\"\"This address is used for admin purposes, like new user notification.\"\"\"\n  email: String\n\n  \"\"\"WordPress locale code.\"\"\"\n  language: String\n\n  \"\"\"A day number of the week that the week should start on.\"\"\"\n  startOfWeek: Int\n\n  \"\"\"A time format for all time strings.\"\"\"\n  timeFormat: String\n\n  \"\"\"A city in the same timezone as you.\"\"\"\n  timezone: String\n\n  \"\"\"Site title.\"\"\"\n  title: String\n\n  \"\"\"Site URL.\"\"\"\n  url: String\n}\n\n\"\"\"Content node with hierarchical (parent/child) relationships\"\"\"\ninterface HierarchicalContentNode {\n  \"\"\"The parent of the object. The parent object can be of various types\"\"\"\n  parent: PostObjectUnion\n\n  \"\"\"Database id of the parent object\"\"\"\n  parentDatabaseId: Int\n\n  \"\"\"The globally unique identifier of the parent object.\"\"\"\n  parentId: ID\n}\n\n\"\"\"File details for a Media Item\"\"\"\ntype MediaDetails {\n  \"\"\"The height of the mediaItem\"\"\"\n  file: String\n\n  \"\"\"The height of the mediaItem\"\"\"\n  height: Int\n  meta: MediaItemMeta\n\n  \"\"\"The available sizes of the mediaItem\"\"\"\n  sizes: [MediaSize]\n\n  \"\"\"The width of the mediaItem\"\"\"\n  width: Int\n}\n\n\"\"\"The mediaItem type\"\"\"\ntype MediaItem implements Node & ContentNode & UniformResourceIdentifiable & NodeWithTitle & NodeWithAuthor & NodeWithComments & HierarchicalContentNode {\n  \"\"\"Alternative text to display when resource is not displayed\"\"\"\n  altText: String\n\n  \"\"\"\n  The author field will return a queryable User type matching the post&#039;s author.\n  \"\"\"\n  author: User\n\n  \"\"\"The caption for the resource\"\"\"\n  caption(\n    \"\"\"Format of the field output\"\"\"\n    format: PostObjectFieldFormatEnum\n  ): String\n\n  \"\"\"\n  The number of comments. Even though WPGraphQL denotes this field as an\n  integer, in WordPress this field should be saved as a numeric string for compatibility.\n  \"\"\"\n  commentCount: Int\n\n  \"\"\"Whether the comments are open or closed for this particular post.\"\"\"\n  commentStatus: String\n\n  \"\"\"Connection between the mediaItem type and the Comment type\"\"\"\n  comments(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: MediaItemToCommentConnectionWhereArgs\n  ): MediaItemToCommentConnection\n\n  \"\"\"Connection between the mediaItem type and the ContentType type\"\"\"\n  contentType: MediaItemToContentTypeConnection\n\n  \"\"\"The ID of the object in the database.\"\"\"\n  databaseId: Int!\n\n  \"\"\"Post publishing date.\"\"\"\n  date: String\n\n  \"\"\"The publishing date set in GMT.\"\"\"\n  dateGmt: String\n\n  \"\"\"Description of the image (stored as post_content)\"\"\"\n  description(\n    \"\"\"Format of the field output\"\"\"\n    format: PostObjectFieldFormatEnum\n  ): String\n\n  \"\"\"The desired slug of the post\"\"\"\n  desiredSlug: String\n\n  \"\"\"The user that most recently edited the object\"\"\"\n  editLast: User\n\n  \"\"\"\n  If a user has edited the object within the past 15 seconds, this will return\n  the user and the time they last edited. Null if the edit lock doesn&#039;t\n  exist or is greater than 15 seconds\n  \"\"\"\n  editLock: EditLock\n\n  \"\"\"The RSS enclosure for the object\"\"\"\n  enclosure: String\n\n  \"\"\"\n  The global unique identifier for this post. This currently matches the value\n  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;\n  database table.\n  \"\"\"\n  guid: String\n\n  \"\"\"The globally unique identifier of the attachment object.\"\"\"\n  id: ID!\n\n  \"\"\"Whether the object is restricted from the current viewer\"\"\"\n  isRestricted: Boolean\n\n  \"\"\"The permalink of the post\"\"\"\n  link: String\n\n  \"\"\"Details about the mediaItem\"\"\"\n  mediaDetails: MediaDetails\n\n  \"\"\"The id field matches the WP_Post-&gt;ID field.\"\"\"\n  mediaItemId: Int! @deprecated(reason: \"Deprecated in favor of the databaseId field\")\n\n  \"\"\"Url of the mediaItem\"\"\"\n  mediaItemUrl: String\n\n  \"\"\"Type of resource\"\"\"\n  mediaType: String\n\n  \"\"\"The mime type of the mediaItem\"\"\"\n  mimeType: String\n\n  \"\"\"\n  The local modified time for a post. If a post was recently updated the\n  modified field will change to match the corresponding time.\n  \"\"\"\n  modified: String\n\n  \"\"\"\n  The GMT modified time for a post. If a post was recently updated the modified\n  field will change to match the corresponding time in GMT.\n  \"\"\"\n  modifiedGmt: String\n\n  \"\"\"The parent of the object. The parent object can be of various types\"\"\"\n  parent: PostObjectUnion\n\n  \"\"\"Database id of the parent object\"\"\"\n  parentDatabaseId: Int\n\n  \"\"\"The globally unique identifier of the parent object.\"\"\"\n  parentId: ID\n\n  \"\"\"The sizes attribute value for an image.\"\"\"\n  sizes(\n    \"\"\"Size of the MediaItem to calculate sizes with\"\"\"\n    size: MediaItemSizeEnum\n  ): String\n\n  \"\"\"\n  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name\n  field and the post_name column in the database for the\n  &quot;post_objects&quot; table.\n  \"\"\"\n  slug: String\n\n  \"\"\"Url of the mediaItem\"\"\"\n  sourceUrl(\n    \"\"\"Size of the MediaItem to return\"\"\"\n    size: MediaItemSizeEnum\n  ): String\n\n  \"\"\"\n  The srcset attribute specifies the URL of the image to use in different\n  situations. It is a comma separated string of urls and their widths.\n  \"\"\"\n  srcSet(\n    \"\"\"Size of the MediaItem to calculate srcSet with\"\"\"\n    size: MediaItemSizeEnum\n  ): String\n\n  \"\"\"The current status of the object\"\"\"\n  status: String\n\n  \"\"\"The template assigned to the node\"\"\"\n  template: ContentTemplateUnion\n\n  \"\"\"\n  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.\n  \"\"\"\n  title(\n    \"\"\"Format of the field output\"\"\"\n    format: PostObjectFieldFormatEnum\n  ): String\n\n  \"\"\"URI path for the resource\"\"\"\n  uri: String!\n}\n\n\"\"\"The Type of Identifier used to fetch a single resource. Default is ID.\"\"\"\nenum MediaItemIdType {\n  \"\"\"Identify a resource by the Database ID.\"\"\"\n  DATABASE_ID\n\n  \"\"\"Identify a resource by the (hashed) Global ID.\"\"\"\n  ID\n\n  \"\"\"Identify a resource by the URI.\"\"\"\n  URI\n\n  \"\"\"\n  Identify a resource by the slug. Available to non-hierarchcial Types where the slug is a unique identifier.\n  \"\"\"\n  SLUG\n\n  \"\"\"Identify a media item by its source url\"\"\"\n  SOURCE_URL\n}\n\n\"\"\"Meta connected to a MediaItem\"\"\"\ntype MediaItemMeta {\n  aperture: Float\n  camera: String\n  caption: String\n  copyright: String\n  createdTimestamp: Int\n  credit: String\n  focalLength: Int\n  iso: Int\n  keywords: [String]\n  orientation: String\n  shutterSpeed: Float\n  title: String\n}\n\n\"\"\"The size of the media item object.\"\"\"\nenum MediaItemSizeEnum {\n  \"\"\"MediaItem with the large size\"\"\"\n  LARGE\n\n  \"\"\"MediaItem with the medium size\"\"\"\n  MEDIUM\n\n  \"\"\"MediaItem with the medium_large size\"\"\"\n  MEDIUM_LARGE\n\n  \"\"\"MediaItem with the post-thumbnail size\"\"\"\n  POST_THUMBNAIL\n\n  \"\"\"MediaItem with the thumbnail size\"\"\"\n  THUMBNAIL\n\n  \"\"\"MediaItem with the twentytwenty-fullscreen size\"\"\"\n  TWENTYTWENTY_FULLSCREEN\n\n  \"\"\"MediaItem with the 1536x1536 size\"\"\"\n  _1536X1536\n\n  \"\"\"MediaItem with the 2048x2048 size\"\"\"\n  _2048X2048\n}\n\n\"\"\"The status of the media item object.\"\"\"\nenum MediaItemStatusEnum {\n  \"\"\"Objects with the auto-draft status\"\"\"\n  AUTO_DRAFT\n\n  \"\"\"Objects with the inherit status\"\"\"\n  INHERIT\n\n  \"\"\"Objects with the private status\"\"\"\n  PRIVATE\n\n  \"\"\"Objects with the trash status\"\"\"\n  TRASH\n}\n\n\"\"\"Connection between the mediaItem type and the Comment type\"\"\"\ntype MediaItemToCommentConnection {\n  \"\"\"Edges for the MediaItemToCommentConnection connection\"\"\"\n  edges: [MediaItemToCommentConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Comment]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype MediaItemToCommentConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Comment\n}\n\n\"\"\"Arguments for filtering the MediaItemToCommentConnection connection\"\"\"\ninput MediaItemToCommentConnectionWhereArgs {\n  \"\"\"Comment author email address.\"\"\"\n  authorEmail: String\n\n  \"\"\"Array of author IDs to include comments for.\"\"\"\n  authorIn: [ID]\n\n  \"\"\"Array of author IDs to exclude comments for.\"\"\"\n  authorNotIn: [ID]\n\n  \"\"\"Comment author URL.\"\"\"\n  authorUrl: String\n\n  \"\"\"Array of comment IDs to include.\"\"\"\n  commentIn: [ID]\n\n  \"\"\"\n  Array of IDs of users whose unapproved comments will be returned by the\n  \t\t\t\t\t\t\tquery regardless of status.\n  \"\"\"\n  commentNotIn: [ID]\n\n  \"\"\"Include comments of a given type.\"\"\"\n  commentType: String\n\n  \"\"\"Include comments from a given array of comment types.\"\"\"\n  commentTypeIn: [String]\n\n  \"\"\"Exclude comments from a given array of comment types.\"\"\"\n  commentTypeNotIn: String\n\n  \"\"\"Content object author ID to limit results by.\"\"\"\n  contentAuthor: [ID]\n\n  \"\"\"Array of author IDs to retrieve comments for.\"\"\"\n  contentAuthorIn: [ID]\n\n  \"\"\"Array of author IDs *not* to retrieve comments for.\"\"\"\n  contentAuthorNotIn: [ID]\n\n  \"\"\"\n  Limit results to those affiliated with a given content object\n  \t\t\t\t\t\t\tID.\n  \"\"\"\n  contentId: ID\n\n  \"\"\"\n  Array of content object IDs to include affiliated comments\n  \t\t\t\t\t\t\tfor.\n  \"\"\"\n  contentIdIn: [ID]\n\n  \"\"\"\n  Array of content object IDs to exclude affiliated comments\n  \t\t\t\t\t\t\tfor.\n  \"\"\"\n  contentIdNotIn: [ID]\n\n  \"\"\"Content object name to retrieve affiliated comments for.\"\"\"\n  contentName: String\n\n  \"\"\"Content Object parent ID to retrieve affiliated comments for.\"\"\"\n  contentParent: Int\n\n  \"\"\"\n  Array of content object statuses to retrieve affiliated comments for.\n  \t\t\t\t\t\t\tPass 'any' to match any value.\n  \"\"\"\n  contentStatus: [PostStatusEnum]\n\n  \"\"\"\n  Content object type or array of types to retrieve affiliated comments for. Pass 'any' to match any value.\n  \"\"\"\n  contentType: [ContentTypeEnum]\n\n  \"\"\"\n  Array of IDs or email addresses of users whose unapproved comments will be\n  returned by the query regardless of $status. Default empty\n  \"\"\"\n  includeUnapproved: [ID]\n\n  \"\"\"Karma score to retrieve matching comments for.\"\"\"\n  karma: Int\n\n  \"\"\"The cardinality of the order of the connection\"\"\"\n  order: OrderEnum\n\n  \"\"\"Field to order the comments by.\"\"\"\n  orderby: CommentsConnectionOrderbyEnum\n\n  \"\"\"Parent ID of comment to retrieve children of.\"\"\"\n  parent: Int\n\n  \"\"\"Array of parent IDs of comments to retrieve children for.\"\"\"\n  parentIn: [ID]\n\n  \"\"\"\n  Array of parent IDs of comments *not* to retrieve children\n  \t\t\t\t\t\t\tfor.\n  \"\"\"\n  parentNotIn: [ID]\n\n  \"\"\"Search term(s) to retrieve matching comments for.\"\"\"\n  search: String\n\n  \"\"\"Comment status to limit results by.\"\"\"\n  status: String\n\n  \"\"\"Include comments for a specific user ID.\"\"\"\n  userId: ID\n}\n\n\"\"\"Connection between the mediaItem type and the ContentType type\"\"\"\ntype MediaItemToContentTypeConnection {\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  node: ContentType\n}\n\n\"\"\"Details of an available size for a media item\"\"\"\ntype MediaSize {\n  \"\"\"The file of the for the referenced size\"\"\"\n  file: String\n\n  \"\"\"The height of the for the referenced size\"\"\"\n  height: String\n\n  \"\"\"The mime type of the resource\"\"\"\n  mimeType: String\n\n  \"\"\"The referenced size name\"\"\"\n  name: String\n\n  \"\"\"The url of the for the referenced size\"\"\"\n  sourceUrl: String\n\n  \"\"\"The width of the for the referenced size\"\"\"\n  width: String\n}\n\n\"\"\"\nMenus are the containers for navigation items. Menus can be assigned to menu\nlocations, which are typically registered by the active theme.\n\"\"\"\ntype Menu implements Node {\n  \"\"\"The number of items in the menu\"\"\"\n  count: Int\n\n  \"\"\"The globally unique identifier of the nav menu object.\"\"\"\n  id: ID!\n\n  \"\"\"Whether the object is restricted from the current viewer\"\"\"\n  isRestricted: Boolean\n\n  \"\"\"WP ID of the nav menu.\"\"\"\n  menuId: Int\n\n  \"\"\"Connection between the Menu type and the MenuItem type\"\"\"\n  menuItems(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: MenuToMenuItemConnectionWhereArgs\n  ): MenuToMenuItemConnection\n\n  \"\"\"Display name of the menu. Equivalent to WP_Term-&gt;name.\"\"\"\n  name: String\n\n  \"\"\"The url friendly name of the menu. Equivalent to WP_Term-&gt;slug\"\"\"\n  slug: String\n}\n\n\"\"\"\nNavigation menu items are the individual items assigned to a menu. These are rendered as the links in a navigation menu.\n\"\"\"\ntype MenuItem implements Node {\n  \"\"\"Connection between the MenuItem type and the MenuItem type\"\"\"\n  childItems(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: MenuItemToMenuItemConnectionWhereArgs\n  ): MenuItemToMenuItemConnection\n\n  \"\"\"The object connected to this menu item.\"\"\"\n  connectedObject: MenuItemObjectUnion\n\n  \"\"\"Class attribute for the menu item link\"\"\"\n  cssClasses: [String]\n\n  \"\"\"Description of the menu item.\"\"\"\n  description: String\n\n  \"\"\"The globally unique identifier of the nav menu item object.\"\"\"\n  id: ID!\n\n  \"\"\"Whether the object is restricted from the current viewer\"\"\"\n  isRestricted: Boolean\n\n  \"\"\"Label or title of the menu item.\"\"\"\n  label: String\n\n  \"\"\"Link relationship (XFN) of the menu item.\"\"\"\n  linkRelationship: String\n\n  \"\"\"WP ID of the menu item.\"\"\"\n  menuItemId: Int\n\n  \"\"\"Target attribute for the menu item link.\"\"\"\n  target: String\n\n  \"\"\"Title attribute for the menu item link\"\"\"\n  title: String\n\n  \"\"\"URL or destination of the menu item.\"\"\"\n  url: String\n}\n\nunion MenuItemObjectUnion = Post | Page | Category | Tag | MenuItem\n\n\"\"\"Connection between the MenuItem type and the MenuItem type\"\"\"\ntype MenuItemToMenuItemConnection {\n  \"\"\"Edges for the MenuItemToMenuItemConnection connection\"\"\"\n  edges: [MenuItemToMenuItemConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [MenuItem]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype MenuItemToMenuItemConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: MenuItem\n}\n\n\"\"\"Arguments for filtering the MenuItemToMenuItemConnection connection\"\"\"\ninput MenuItemToMenuItemConnectionWhereArgs {\n  \"\"\"The ID of the object\"\"\"\n  id: Int\n\n  \"\"\"The menu location for the menu being queried\"\"\"\n  location: MenuLocationEnum\n}\n\n\"\"\"Registered menu locations\"\"\"\nenum MenuLocationEnum {\n  EXPANDED\n  FOOTER\n  MOBILE\n  PRIMARY\n  SOCIAL\n}\n\n\"\"\"Connection between the Menu type and the MenuItem type\"\"\"\ntype MenuToMenuItemConnection {\n  \"\"\"Edges for the MenuToMenuItemConnection connection\"\"\"\n  edges: [MenuToMenuItemConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [MenuItem]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype MenuToMenuItemConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: MenuItem\n}\n\n\"\"\"Arguments for filtering the MenuToMenuItemConnection connection\"\"\"\ninput MenuToMenuItemConnectionWhereArgs {\n  \"\"\"The ID of the object\"\"\"\n  id: Int\n\n  \"\"\"The menu location for the menu being queried\"\"\"\n  location: MenuLocationEnum\n}\n\n\"\"\"The MimeType of the object\"\"\"\nenum MimeTypeEnum {\n  APPLICATION_JAVA\n  APPLICATION_MSWORD\n  APPLICATION_OCTET_STREAM\n  APPLICATION_ONENOTE\n  APPLICATION_OXPS\n  APPLICATION_PDF\n  APPLICATION_RAR\n  APPLICATION_RTF\n  APPLICATION_TTAF_XML\n  APPLICATION_VND_APPLE_KEYNOTE\n  APPLICATION_VND_APPLE_NUMBERS\n  APPLICATION_VND_APPLE_PAGES\n  APPLICATION_VND_MS_ACCESS\n  APPLICATION_VND_MS_EXCEL\n  APPLICATION_VND_MS_EXCEL_ADDIN_MACROENABLED_12\n  APPLICATION_VND_MS_EXCEL_SHEET_BINARY_MACROENABLED_12\n  APPLICATION_VND_MS_EXCEL_SHEET_MACROENABLED_12\n  APPLICATION_VND_MS_EXCEL_TEMPLATE_MACROENABLED_12\n  APPLICATION_VND_MS_POWERPOINT\n  APPLICATION_VND_MS_POWERPOINT_ADDIN_MACROENABLED_12\n  APPLICATION_VND_MS_POWERPOINT_PRESENTATION_MACROENABLED_12\n  APPLICATION_VND_MS_POWERPOINT_SLIDESHOW_MACROENABLED_12\n  APPLICATION_VND_MS_POWERPOINT_SLIDE_MACROENABLED_12\n  APPLICATION_VND_MS_POWERPOINT_TEMPLATE_MACROENABLED_12\n  APPLICATION_VND_MS_PROJECT\n  APPLICATION_VND_MS_WORD_DOCUMENT_MACROENABLED_12\n  APPLICATION_VND_MS_WORD_TEMPLATE_MACROENABLED_12\n  APPLICATION_VND_MS_WRITE\n  APPLICATION_VND_MS_XPSDOCUMENT\n  APPLICATION_VND_OASIS_OPENDOCUMENT_CHART\n  APPLICATION_VND_OASIS_OPENDOCUMENT_DATABASE\n  APPLICATION_VND_OASIS_OPENDOCUMENT_FORMULA\n  APPLICATION_VND_OASIS_OPENDOCUMENT_GRAPHICS\n  APPLICATION_VND_OASIS_OPENDOCUMENT_PRESENTATION\n  APPLICATION_VND_OASIS_OPENDOCUMENT_SPREADSHEET\n  APPLICATION_VND_OASIS_OPENDOCUMENT_TEXT\n  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_PRESENTATION\n  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDE\n  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDESHOW\n  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_TEMPLATE\n  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_SHEET\n  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_TEMPLATE\n  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_DOCUMENT\n  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_TEMPLATE\n  APPLICATION_WORDPERFECT\n  APPLICATION_X_7Z_COMPRESSED\n  APPLICATION_X_GZIP\n  APPLICATION_X_TAR\n  APPLICATION_ZIP\n  AUDIO_AAC\n  AUDIO_FLAC\n  AUDIO_MIDI\n  AUDIO_MPEG\n  AUDIO_OGG\n  AUDIO_WAV\n  AUDIO_X_MATROSKA\n  AUDIO_X_MS_WAX\n  AUDIO_X_MS_WMA\n  AUDIO_X_REALAUDIO\n  IMAGE_BMP\n  IMAGE_GIF\n  IMAGE_JPEG\n  IMAGE_PNG\n  IMAGE_TIFF\n  IMAGE_X_ICON\n  TEXT_CALENDAR\n  TEXT_CSS\n  TEXT_CSV\n  TEXT_PLAIN\n  TEXT_RICHTEXT\n  TEXT_TAB_SEPARATED_VALUES\n  TEXT_VTT\n  VIDEO_3GPP\n  VIDEO_3GPP2\n  VIDEO_AVI\n  VIDEO_DIVX\n  VIDEO_MP4\n  VIDEO_MPEG\n  VIDEO_OGG\n  VIDEO_QUICKTIME\n  VIDEO_WEBM\n  VIDEO_X_FLV\n  VIDEO_X_MATROSKA\n  VIDEO_X_MS_ASF\n  VIDEO_X_MS_WM\n  VIDEO_X_MS_WMV\n  VIDEO_X_MS_WMX\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The globally unique ID for the object\"\"\"\n  id: ID!\n}\n\n\"\"\"A node that can have an author assigned to it\"\"\"\ninterface NodeWithAuthor {\n  \"\"\"\n  The author field will return a queryable User type matching the post's author.\n  \"\"\"\n  author: User\n}\n\n\"\"\"A node that can have comments associated with it\"\"\"\ninterface NodeWithComments {\n  \"\"\"\n  The number of comments. Even though WPGraphQL denotes this field as an\n  integer, in WordPress this field should be saved as a numeric string for compatibility.\n  \"\"\"\n  commentCount: Int\n\n  \"\"\"Whether the comments are open or closed for this particular post.\"\"\"\n  commentStatus: String\n}\n\n\"\"\"A node that supports the content editor\"\"\"\ninterface NodeWithContentEditor {\n  \"\"\"The content of the post.\"\"\"\n  content(\n    \"\"\"Format of the field output\"\"\"\n    format: PostObjectFieldFormatEnum\n  ): String\n}\n\n\"\"\"A node that can have an excerpt\"\"\"\ninterface NodeWithExcerpt {\n  \"\"\"The excerpt of the post.\"\"\"\n  excerpt(\n    \"\"\"Format of the field output\"\"\"\n    format: PostObjectFieldFormatEnum\n  ): String\n}\n\n\"\"\"A node that can have a featured image set\"\"\"\ninterface NodeWithFeaturedImage {\n  \"\"\"The featured image for the object\"\"\"\n  featuredImage: MediaItem\n}\n\n\"\"\"A node that can have page attributes\"\"\"\ninterface NodeWithPageAttributes {\n  \"\"\"\n  A field used for ordering posts. This is typically used with nav menu items or\n  for special ordering of hierarchical content types.\n  \"\"\"\n  menuOrder: Int\n}\n\n\"\"\"A node that can have revisions\"\"\"\ninterface NodeWithRevisions {\n  \"\"\"True if the node is a revision of another node\"\"\"\n  isRevision: Boolean\n\n  \"\"\"\n  If the current node is a revision, this field exposes the node this is a\n  revision of. Returns null if the node is not a revision of another node.\n  \"\"\"\n  revisionOf: PostObjectUnion\n}\n\n\"\"\"A node that NodeWith a title\"\"\"\ninterface NodeWithTitle {\n  \"\"\"\n  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.\n  \"\"\"\n  title(\n    \"\"\"Format of the field output\"\"\"\n    format: PostObjectFieldFormatEnum\n  ): String\n}\n\n\"\"\"A node that can have trackbacks and pingbacks\"\"\"\ninterface NodeWithTrackbacks {\n  \"\"\"Whether the pings are open or closed for this particular post.\"\"\"\n  pingStatus: String\n\n  \"\"\"URLs that have been pinged.\"\"\"\n  pinged: [String]\n\n  \"\"\"URLs queued to be pinged.\"\"\"\n  toPing: [String]\n}\n\n\"\"\"The cardinality of the connection order\"\"\"\nenum OrderEnum {\n  ASC\n  DESC\n}\n\n\"\"\"The page type\"\"\"\ntype Page implements Node & ContentNode & UniformResourceIdentifiable & NodeWithTitle & NodeWithContentEditor & NodeWithAuthor & NodeWithFeaturedImage & NodeWithComments & NodeWithRevisions & NodeWithPageAttributes & HierarchicalContentNode {\n  \"\"\"\n  The author field will return a queryable User type matching the post&#039;s author.\n  \"\"\"\n  author: User\n\n  \"\"\"Connection between the page type and the page type\"\"\"\n  childPages(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: PageToPageConnectionWhereArgs\n  ): PageToPageConnection\n\n  \"\"\"\n  The number of comments. Even though WPGraphQL denotes this field as an\n  integer, in WordPress this field should be saved as a numeric string for compatibility.\n  \"\"\"\n  commentCount: Int\n\n  \"\"\"Whether the comments are open or closed for this particular post.\"\"\"\n  commentStatus: String\n\n  \"\"\"Connection between the page type and the Comment type\"\"\"\n  comments(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: PageToCommentConnectionWhereArgs\n  ): PageToCommentConnection\n\n  \"\"\"The content of the post.\"\"\"\n  content(\n    \"\"\"Format of the field output\"\"\"\n    format: PostObjectFieldFormatEnum\n  ): String\n\n  \"\"\"Connection between the page type and the ContentType type\"\"\"\n  contentType: PageToContentTypeConnection\n\n  \"\"\"The ID of the object in the database.\"\"\"\n  databaseId: Int!\n\n  \"\"\"Post publishing date.\"\"\"\n  date: String\n\n  \"\"\"The publishing date set in GMT.\"\"\"\n  dateGmt: String\n\n  \"\"\"The desired slug of the post\"\"\"\n  desiredSlug: String\n\n  \"\"\"The user that most recently edited the object\"\"\"\n  editLast: User\n\n  \"\"\"\n  If a user has edited the object within the past 15 seconds, this will return\n  the user and the time they last edited. Null if the edit lock doesn&#039;t\n  exist or is greater than 15 seconds\n  \"\"\"\n  editLock: EditLock\n\n  \"\"\"The RSS enclosure for the object\"\"\"\n  enclosure: String\n\n  \"\"\"The featured image for the object\"\"\"\n  featuredImage: MediaItem\n\n  \"\"\"\n  The global unique identifier for this post. This currently matches the value\n  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;\n  database table.\n  \"\"\"\n  guid: String\n\n  \"\"\"The globally unique identifier of the page object.\"\"\"\n  id: ID!\n\n  \"\"\"Whether this page is set to the static front page.\"\"\"\n  isFrontPage: Boolean!\n\n  \"\"\"Whether the object is restricted from the current viewer\"\"\"\n  isRestricted: Boolean\n\n  \"\"\"True if the node is a revision of another node\"\"\"\n  isRevision: Boolean\n\n  \"\"\"The permalink of the post\"\"\"\n  link: String\n\n  \"\"\"\n  A field used for ordering posts. This is typically used with nav menu items or\n  for special ordering of hierarchical content types.\n  \"\"\"\n  menuOrder: Int\n\n  \"\"\"\n  The local modified time for a post. If a post was recently updated the\n  modified field will change to match the corresponding time.\n  \"\"\"\n  modified: String\n\n  \"\"\"\n  The GMT modified time for a post. If a post was recently updated the modified\n  field will change to match the corresponding time in GMT.\n  \"\"\"\n  modifiedGmt: String\n\n  \"\"\"The id field matches the WP_Post-&gt;ID field.\"\"\"\n  pageId: Int! @deprecated(reason: \"Deprecated in favor of the databaseId field\")\n\n  \"\"\"The parent of the object. The parent object can be of various types\"\"\"\n  parent: PostObjectUnion\n\n  \"\"\"Database id of the parent object\"\"\"\n  parentDatabaseId: Int\n\n  \"\"\"The globally unique identifier of the parent object.\"\"\"\n  parentId: ID\n\n  \"\"\"\n  If the current node is a revision, this field exposes the node this is a\n  revision of. Returns null if the node is not a revision of another node.\n  \"\"\"\n  revisionOf: PostObjectUnion\n\n  \"\"\"Connection between the page type and the page type\"\"\"\n  revisions(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: PageToRevisionConnectionWhereArgs\n  ): PageToRevisionConnection\n\n  \"\"\"\n  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name\n  field and the post_name column in the database for the\n  &quot;post_objects&quot; table.\n  \"\"\"\n  slug: String\n\n  \"\"\"The current status of the object\"\"\"\n  status: String\n\n  \"\"\"The template assigned to the node\"\"\"\n  template: ContentTemplateUnion\n\n  \"\"\"\n  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.\n  \"\"\"\n  title(\n    \"\"\"Format of the field output\"\"\"\n    format: PostObjectFieldFormatEnum\n  ): String\n\n  \"\"\"URI path for the resource\"\"\"\n  uri: String!\n}\n\n\"\"\"The Type of Identifier used to fetch a single resource. Default is ID.\"\"\"\nenum PageIdType {\n  \"\"\"Identify a resource by the Database ID.\"\"\"\n  DATABASE_ID\n\n  \"\"\"Identify a resource by the (hashed) Global ID.\"\"\"\n  ID\n\n  \"\"\"Identify a resource by the URI.\"\"\"\n  URI\n}\n\n\"\"\"Connection between the page type and the Comment type\"\"\"\ntype PageToCommentConnection {\n  \"\"\"Edges for the PageToCommentConnection connection\"\"\"\n  edges: [PageToCommentConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Comment]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype PageToCommentConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Comment\n}\n\n\"\"\"Arguments for filtering the PageToCommentConnection connection\"\"\"\ninput PageToCommentConnectionWhereArgs {\n  \"\"\"Comment author email address.\"\"\"\n  authorEmail: String\n\n  \"\"\"Array of author IDs to include comments for.\"\"\"\n  authorIn: [ID]\n\n  \"\"\"Array of author IDs to exclude comments for.\"\"\"\n  authorNotIn: [ID]\n\n  \"\"\"Comment author URL.\"\"\"\n  authorUrl: String\n\n  \"\"\"Array of comment IDs to include.\"\"\"\n  commentIn: [ID]\n\n  \"\"\"\n  Array of IDs of users whose unapproved comments will be returned by the\n  \t\t\t\t\t\t\tquery regardless of status.\n  \"\"\"\n  commentNotIn: [ID]\n\n  \"\"\"Include comments of a given type.\"\"\"\n  commentType: String\n\n  \"\"\"Include comments from a given array of comment types.\"\"\"\n  commentTypeIn: [String]\n\n  \"\"\"Exclude comments from a given array of comment types.\"\"\"\n  commentTypeNotIn: String\n\n  \"\"\"Content object author ID to limit results by.\"\"\"\n  contentAuthor: [ID]\n\n  \"\"\"Array of author IDs to retrieve comments for.\"\"\"\n  contentAuthorIn: [ID]\n\n  \"\"\"Array of author IDs *not* to retrieve comments for.\"\"\"\n  contentAuthorNotIn: [ID]\n\n  \"\"\"\n  Limit results to those affiliated with a given content object\n  \t\t\t\t\t\t\tID.\n  \"\"\"\n  contentId: ID\n\n  \"\"\"\n  Array of content object IDs to include affiliated comments\n  \t\t\t\t\t\t\tfor.\n  \"\"\"\n  contentIdIn: [ID]\n\n  \"\"\"\n  Array of content object IDs to exclude affiliated comments\n  \t\t\t\t\t\t\tfor.\n  \"\"\"\n  contentIdNotIn: [ID]\n\n  \"\"\"Content object name to retrieve affiliated comments for.\"\"\"\n  contentName: String\n\n  \"\"\"Content Object parent ID to retrieve affiliated comments for.\"\"\"\n  contentParent: Int\n\n  \"\"\"\n  Array of content object statuses to retrieve affiliated comments for.\n  \t\t\t\t\t\t\tPass 'any' to match any value.\n  \"\"\"\n  contentStatus: [PostStatusEnum]\n\n  \"\"\"\n  Content object type or array of types to retrieve affiliated comments for. Pass 'any' to match any value.\n  \"\"\"\n  contentType: [ContentTypeEnum]\n\n  \"\"\"\n  Array of IDs or email addresses of users whose unapproved comments will be\n  returned by the query regardless of $status. Default empty\n  \"\"\"\n  includeUnapproved: [ID]\n\n  \"\"\"Karma score to retrieve matching comments for.\"\"\"\n  karma: Int\n\n  \"\"\"The cardinality of the order of the connection\"\"\"\n  order: OrderEnum\n\n  \"\"\"Field to order the comments by.\"\"\"\n  orderby: CommentsConnectionOrderbyEnum\n\n  \"\"\"Parent ID of comment to retrieve children of.\"\"\"\n  parent: Int\n\n  \"\"\"Array of parent IDs of comments to retrieve children for.\"\"\"\n  parentIn: [ID]\n\n  \"\"\"\n  Array of parent IDs of comments *not* to retrieve children\n  \t\t\t\t\t\t\tfor.\n  \"\"\"\n  parentNotIn: [ID]\n\n  \"\"\"Search term(s) to retrieve matching comments for.\"\"\"\n  search: String\n\n  \"\"\"Comment status to limit results by.\"\"\"\n  status: String\n\n  \"\"\"Include comments for a specific user ID.\"\"\"\n  userId: ID\n}\n\n\"\"\"Connection between the page type and the ContentType type\"\"\"\ntype PageToContentTypeConnection {\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  node: ContentType\n}\n\n\"\"\"Connection between the page type and the page type\"\"\"\ntype PageToPageConnection {\n  \"\"\"Edges for the PageToPageConnection connection\"\"\"\n  edges: [PageToPageConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Page]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype PageToPageConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Page\n}\n\n\"\"\"Arguments for filtering the PageToPageConnection connection\"\"\"\ninput PageToPageConnectionWhereArgs {\n  \"\"\"\n  The user that's connected as the author of the object. Use the userId for the author object.\n  \"\"\"\n  author: Int\n\n  \"\"\"Find objects connected to author(s) in the array of author's userIds\"\"\"\n  authorIn: [ID]\n\n  \"\"\"Find objects connected to the author by the author's nicename\"\"\"\n  authorName: String\n\n  \"\"\"\n  Find objects NOT connected to author(s) in the array of author's userIds\n  \"\"\"\n  authorNotIn: [ID]\n\n  \"\"\"Filter the connection based on dates\"\"\"\n  dateQuery: DateQueryInput\n\n  \"\"\"\n  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords\n  \"\"\"\n  hasPassword: Boolean\n\n  \"\"\"Specific ID of the object\"\"\"\n  id: Int\n\n  \"\"\"Array of IDs for the objects to retrieve\"\"\"\n  in: [ID]\n\n  \"\"\"Get objects with a specific mimeType property\"\"\"\n  mimeType: MimeTypeEnum\n\n  \"\"\"Slug / post_name of the object\"\"\"\n  name: String\n\n  \"\"\"Specify objects to retrieve. Use slugs\"\"\"\n  nameIn: [String]\n\n  \"\"\"\n  Specify IDs NOT to retrieve. If this is used in the same query as \"in\", it will be ignored\n  \"\"\"\n  notIn: [ID]\n\n  \"\"\"What paramater to use to order the objects by.\"\"\"\n  orderby: [PostObjectsConnectionOrderbyInput]\n\n  \"\"\"Use ID to return only children. Use 0 to return only top-level items\"\"\"\n  parent: String\n\n  \"\"\"Specify objects whose parent is in an array\"\"\"\n  parentIn: [ID]\n\n  \"\"\"Specify posts whose parent is not in an array\"\"\"\n  parentNotIn: [ID]\n\n  \"\"\"Show posts with a specific password.\"\"\"\n  password: String\n\n  \"\"\"Show Posts based on a keyword search\"\"\"\n  search: String\n  stati: [PostStatusEnum]\n  status: PostStatusEnum\n\n  \"\"\"Title of the object\"\"\"\n  title: String\n}\n\n\"\"\"Connection between the page type and the page type\"\"\"\ntype PageToRevisionConnection {\n  \"\"\"Edges for the pageToRevisionConnection connection\"\"\"\n  edges: [PageToRevisionConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Page]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype PageToRevisionConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Page\n}\n\n\"\"\"Arguments for filtering the pageToRevisionConnection connection\"\"\"\ninput PageToRevisionConnectionWhereArgs {\n  \"\"\"\n  The user that's connected as the author of the object. Use the userId for the author object.\n  \"\"\"\n  author: Int\n\n  \"\"\"Find objects connected to author(s) in the array of author's userIds\"\"\"\n  authorIn: [ID]\n\n  \"\"\"Find objects connected to the author by the author's nicename\"\"\"\n  authorName: String\n\n  \"\"\"\n  Find objects NOT connected to author(s) in the array of author's userIds\n  \"\"\"\n  authorNotIn: [ID]\n\n  \"\"\"Filter the connection based on dates\"\"\"\n  dateQuery: DateQueryInput\n\n  \"\"\"\n  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords\n  \"\"\"\n  hasPassword: Boolean\n\n  \"\"\"Specific ID of the object\"\"\"\n  id: Int\n\n  \"\"\"Array of IDs for the objects to retrieve\"\"\"\n  in: [ID]\n\n  \"\"\"Get objects with a specific mimeType property\"\"\"\n  mimeType: MimeTypeEnum\n\n  \"\"\"Slug / post_name of the object\"\"\"\n  name: String\n\n  \"\"\"Specify objects to retrieve. Use slugs\"\"\"\n  nameIn: [String]\n\n  \"\"\"\n  Specify IDs NOT to retrieve. If this is used in the same query as \"in\", it will be ignored\n  \"\"\"\n  notIn: [ID]\n\n  \"\"\"What paramater to use to order the objects by.\"\"\"\n  orderby: [PostObjectsConnectionOrderbyInput]\n\n  \"\"\"Use ID to return only children. Use 0 to return only top-level items\"\"\"\n  parent: String\n\n  \"\"\"Specify objects whose parent is in an array\"\"\"\n  parentIn: [ID]\n\n  \"\"\"Specify posts whose parent is not in an array\"\"\"\n  parentNotIn: [ID]\n\n  \"\"\"Show posts with a specific password.\"\"\"\n  password: String\n\n  \"\"\"Show Posts based on a keyword search\"\"\"\n  search: String\n  stati: [PostStatusEnum]\n  status: PostStatusEnum\n\n  \"\"\"Title of the object\"\"\"\n  title: String\n}\n\n\"\"\"An plugin object\"\"\"\ntype Plugin implements Node {\n  \"\"\"Name of the plugin author(s), may also be a company name.\"\"\"\n  author: String\n\n  \"\"\"URI for the related author(s)/company website.\"\"\"\n  authorUri: String\n\n  \"\"\"Description of the plugin.\"\"\"\n  description: String\n\n  \"\"\"The globally unique identifier of the plugin object.\"\"\"\n  id: ID!\n\n  \"\"\"Whether the object is restricted from the current viewer\"\"\"\n  isRestricted: Boolean\n\n  \"\"\"Display name of the plugin.\"\"\"\n  name: String\n\n  \"\"\"\n  URI for the plugin website. This is useful for directing users for support requests etc.\n  \"\"\"\n  pluginUri: String\n\n  \"\"\"Current version of the plugin.\"\"\"\n  version: String\n}\n\n\"\"\"The post type\"\"\"\ntype Post implements Node & ContentNode & UniformResourceIdentifiable & NodeWithTitle & NodeWithContentEditor & NodeWithAuthor & NodeWithFeaturedImage & NodeWithExcerpt & NodeWithComments & NodeWithTrackbacks & NodeWithRevisions {\n  \"\"\"\n  The author field will return a queryable User type matching the post&#039;s author.\n  \"\"\"\n  author: User\n\n  \"\"\"Connection between the post type and the category type\"\"\"\n  categories(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: PostToCategoryConnectionWhereArgs\n  ): PostToCategoryConnection\n\n  \"\"\"\n  The number of comments. Even though WPGraphQL denotes this field as an\n  integer, in WordPress this field should be saved as a numeric string for compatibility.\n  \"\"\"\n  commentCount: Int\n\n  \"\"\"Whether the comments are open or closed for this particular post.\"\"\"\n  commentStatus: String\n\n  \"\"\"Connection between the post type and the Comment type\"\"\"\n  comments(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: PostToCommentConnectionWhereArgs\n  ): PostToCommentConnection\n\n  \"\"\"The content of the post.\"\"\"\n  content(\n    \"\"\"Format of the field output\"\"\"\n    format: PostObjectFieldFormatEnum\n  ): String\n\n  \"\"\"Connection between the post type and the ContentType type\"\"\"\n  contentType: PostToContentTypeConnection\n\n  \"\"\"The ID of the object in the database.\"\"\"\n  databaseId: Int!\n\n  \"\"\"Post publishing date.\"\"\"\n  date: String\n\n  \"\"\"The publishing date set in GMT.\"\"\"\n  dateGmt: String\n\n  \"\"\"The desired slug of the post\"\"\"\n  desiredSlug: String\n\n  \"\"\"The user that most recently edited the object\"\"\"\n  editLast: User\n\n  \"\"\"\n  If a user has edited the object within the past 15 seconds, this will return\n  the user and the time they last edited. Null if the edit lock doesn&#039;t\n  exist or is greater than 15 seconds\n  \"\"\"\n  editLock: EditLock\n\n  \"\"\"The RSS enclosure for the object\"\"\"\n  enclosure: String\n\n  \"\"\"The excerpt of the post.\"\"\"\n  excerpt(\n    \"\"\"Format of the field output\"\"\"\n    format: PostObjectFieldFormatEnum\n  ): String\n\n  \"\"\"The featured image for the object\"\"\"\n  featuredImage: MediaItem\n\n  \"\"\"\n  The global unique identifier for this post. This currently matches the value\n  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;\n  database table.\n  \"\"\"\n  guid: String\n\n  \"\"\"The globally unique identifier of the post object.\"\"\"\n  id: ID!\n\n  \"\"\"Whether the object is restricted from the current viewer\"\"\"\n  isRestricted: Boolean\n\n  \"\"\"True if the node is a revision of another node\"\"\"\n  isRevision: Boolean\n\n  \"\"\"The permalink of the post\"\"\"\n  link: String\n\n  \"\"\"\n  The local modified time for a post. If a post was recently updated the\n  modified field will change to match the corresponding time.\n  \"\"\"\n  modified: String\n\n  \"\"\"\n  The GMT modified time for a post. If a post was recently updated the modified\n  field will change to match the corresponding time in GMT.\n  \"\"\"\n  modifiedGmt: String\n\n  \"\"\"Whether the pings are open or closed for this particular post.\"\"\"\n  pingStatus: String\n\n  \"\"\"URLs that have been pinged.\"\"\"\n  pinged: [String]\n\n  \"\"\"Connection between the post type and the postFormat type\"\"\"\n  postFormats(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: PostToPostFormatConnectionWhereArgs\n  ): PostToPostFormatConnection\n\n  \"\"\"The id field matches the WP_Post-&gt;ID field.\"\"\"\n  postId: Int! @deprecated(reason: \"Deprecated in favor of the databaseId field\")\n\n  \"\"\"\n  If the current node is a revision, this field exposes the node this is a\n  revision of. Returns null if the node is not a revision of another node.\n  \"\"\"\n  revisionOf: PostObjectUnion\n\n  \"\"\"Connection between the post type and the post type\"\"\"\n  revisions(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: PostToRevisionConnectionWhereArgs\n  ): PostToRevisionConnection\n\n  \"\"\"\n  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name\n  field and the post_name column in the database for the\n  &quot;post_objects&quot; table.\n  \"\"\"\n  slug: String\n\n  \"\"\"The current status of the object\"\"\"\n  status: String\n\n  \"\"\"Connection between the post type and the tag type\"\"\"\n  tags(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: PostToTagConnectionWhereArgs\n  ): PostToTagConnection\n\n  \"\"\"The template assigned to the node\"\"\"\n  template: ContentTemplateUnion\n\n  \"\"\"Terms connected to the object\"\"\"\n  termNames(\n    \"\"\"Select which taxonomies to limit the results to\"\"\"\n    taxonomies: [TaxonomyEnum]\n  ): [String]\n\n  \"\"\"Terms connected to the object\"\"\"\n  termSlugs(\n    \"\"\"Select which taxonomies to limit the results to\"\"\"\n    taxonomies: [TaxonomyEnum]\n  ): [String]\n\n  \"\"\"Terms connected to the object\"\"\"\n  terms(\n    \"\"\"Select which taxonomies to limit the results to\"\"\"\n    taxonomies: [TaxonomyEnum]\n  ): [TermObjectUnion]\n\n  \"\"\"\n  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.\n  \"\"\"\n  title(\n    \"\"\"Format of the field output\"\"\"\n    format: PostObjectFieldFormatEnum\n  ): String\n\n  \"\"\"URLs queued to be pinged.\"\"\"\n  toPing: [String]\n\n  \"\"\"URI path for the resource\"\"\"\n  uri: String!\n}\n\n\"\"\"Set relationships between the post to categories\"\"\"\ninput PostCategoriesInput {\n  \"\"\"\n  If true, this will append the category to existing related categories. If\n  false, this will replace existing relationships. Default true.\n  \"\"\"\n  append: Boolean\n  nodes: [PostCategoriesNodeInput]\n}\n\n\"\"\"\nList of categories to connect the post to. If an ID is set, it will be used to\ncreate the connection. If not, it will look for a slug. If neither are valid\nexisting terms, and the site is configured to allow terms to be created during\npost mutations, a term will be created using the Name if it exists in the input,\nthen fallback to the slug if it exists.\n\"\"\"\ninput PostCategoriesNodeInput {\n  \"\"\"\n  The description of the category. This field is used to set a description of\n  the category if a new one is created during the mutation.\n  \"\"\"\n  description: String\n\n  \"\"\"\n  The ID of the category. If present, this will be used to connect to the post.\n  If no existing category exists with this ID, no connection will be made.\n  \"\"\"\n  id: ID\n\n  \"\"\"\n  The name of the category. This field is used to create a new term, if term\n  creation is enabled in nested mutations, and if one does not already exist\n  with the provided slug or ID or if a slug or ID is not provided. If no name is\n  included and a term is created, the creation will fallback to the slug field.\n  \"\"\"\n  name: String\n\n  \"\"\"\n  The slug of the category. If no ID is present, this field will be used to make\n  a connection. If no existing term exists with this slug, this field will be\n  used as a fallback to the Name field when creating a new term to connect to,\n  if term creation is enabled as a nested mutation.\n  \"\"\"\n  slug: String\n}\n\n\"\"\"The postFormat type\"\"\"\ntype PostFormat implements Node & TermNode & UniformResourceIdentifiable {\n  \"\"\"The number of objects connected to the object\"\"\"\n  count: Int\n\n  \"\"\"Identifies the primary key from the database.\"\"\"\n  databaseId: Int!\n\n  \"\"\"The description of the object\"\"\"\n  description: String\n\n  \"\"\"The globally unique ID for the object\"\"\"\n  id: ID!\n\n  \"\"\"Whether the object is restricted from the current viewer\"\"\"\n  isRestricted: Boolean\n\n  \"\"\"The link to the term\"\"\"\n  link: String\n\n  \"\"\"The human friendly name of the object.\"\"\"\n  name: String\n\n  \"\"\"The id field matches the WP_Post-&gt;ID field.\"\"\"\n  postFormatId: Int @deprecated(reason: \"Deprecated in favor of databaseId\")\n\n  \"\"\"Connection between the postFormat type and the post type\"\"\"\n  posts(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: PostFormatToPostConnectionWhereArgs\n  ): PostFormatToPostConnection\n\n  \"\"\"An alphanumeric identifier for the object unique to its type.\"\"\"\n  slug: String\n\n  \"\"\"Connection between the postFormat type and the Taxonomy type\"\"\"\n  taxonomy: PostFormatToTaxonomyConnection\n\n  \"\"\"The ID of the term group that this term object belongs to\"\"\"\n  termGroupId: Int\n\n  \"\"\"The taxonomy ID that the object is associated with\"\"\"\n  termTaxonomyId: Int\n\n  \"\"\"The unique resource identifier path\"\"\"\n  uri: String!\n}\n\n\"\"\"The Type of Identifier used to fetch a single resource. Default is ID.\"\"\"\nenum PostFormatIdType {\n  \"\"\"The Database ID for the node\"\"\"\n  DATABASE_ID\n\n  \"\"\"The hashed Global ID\"\"\"\n  ID\n\n  \"\"\"The name of the node\"\"\"\n  NAME\n\n  \"\"\"Url friendly name of the node\"\"\"\n  SLUG\n\n  \"\"\"The URI for the node\"\"\"\n  URI\n}\n\n\"\"\"Connection between the postFormat type and the post type\"\"\"\ntype PostFormatToPostConnection {\n  \"\"\"Edges for the PostFormatToPostConnection connection\"\"\"\n  edges: [PostFormatToPostConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Post]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype PostFormatToPostConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Post\n}\n\n\"\"\"Arguments for filtering the PostFormatToPostConnection connection\"\"\"\ninput PostFormatToPostConnectionWhereArgs {\n  \"\"\"\n  The user that's connected as the author of the object. Use the userId for the author object.\n  \"\"\"\n  author: Int\n\n  \"\"\"Find objects connected to author(s) in the array of author's userIds\"\"\"\n  authorIn: [ID]\n\n  \"\"\"Find objects connected to the author by the author's nicename\"\"\"\n  authorName: String\n\n  \"\"\"\n  Find objects NOT connected to author(s) in the array of author's userIds\n  \"\"\"\n  authorNotIn: [ID]\n\n  \"\"\"Category ID\"\"\"\n  categoryId: Int\n\n  \"\"\"\n  Array of category IDs, used to display objects from one category OR another\n  \"\"\"\n  categoryIn: [ID]\n\n  \"\"\"Use Category Slug\"\"\"\n  categoryName: String\n\n  \"\"\"\n  Array of category IDs, used to display objects from one category OR another\n  \"\"\"\n  categoryNotIn: [ID]\n\n  \"\"\"Filter the connection based on dates\"\"\"\n  dateQuery: DateQueryInput\n\n  \"\"\"\n  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords\n  \"\"\"\n  hasPassword: Boolean\n\n  \"\"\"Specific ID of the object\"\"\"\n  id: Int\n\n  \"\"\"Array of IDs for the objects to retrieve\"\"\"\n  in: [ID]\n\n  \"\"\"Get objects with a specific mimeType property\"\"\"\n  mimeType: MimeTypeEnum\n\n  \"\"\"Slug / post_name of the object\"\"\"\n  name: String\n\n  \"\"\"Specify objects to retrieve. Use slugs\"\"\"\n  nameIn: [String]\n\n  \"\"\"\n  Specify IDs NOT to retrieve. If this is used in the same query as \"in\", it will be ignored\n  \"\"\"\n  notIn: [ID]\n\n  \"\"\"What paramater to use to order the objects by.\"\"\"\n  orderby: [PostObjectsConnectionOrderbyInput]\n\n  \"\"\"Use ID to return only children. Use 0 to return only top-level items\"\"\"\n  parent: String\n\n  \"\"\"Specify objects whose parent is in an array\"\"\"\n  parentIn: [ID]\n\n  \"\"\"Specify posts whose parent is not in an array\"\"\"\n  parentNotIn: [ID]\n\n  \"\"\"Show posts with a specific password.\"\"\"\n  password: String\n\n  \"\"\"Show Posts based on a keyword search\"\"\"\n  search: String\n  stati: [PostStatusEnum]\n  status: PostStatusEnum\n\n  \"\"\"Tag Slug\"\"\"\n  tag: String\n\n  \"\"\"Use Tag ID\"\"\"\n  tagId: String\n\n  \"\"\"Array of tag IDs, used to display objects from one tag OR another\"\"\"\n  tagIn: [ID]\n\n  \"\"\"Array of tag IDs, used to display objects from one tag OR another\"\"\"\n  tagNotIn: [ID]\n\n  \"\"\"Array of tag slugs, used to display objects from one tag OR another\"\"\"\n  tagSlugAnd: [String]\n\n  \"\"\"Array of tag slugs, used to exclude objects in specified tags\"\"\"\n  tagSlugIn: [String]\n\n  \"\"\"Title of the object\"\"\"\n  title: String\n}\n\n\"\"\"Connection between the postFormat type and the Taxonomy type\"\"\"\ntype PostFormatToTaxonomyConnection {\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  node: Taxonomy\n}\n\n\"\"\"The Type of Identifier used to fetch a single resource. Default is ID.\"\"\"\nenum PostIdType {\n  \"\"\"Identify a resource by the Database ID.\"\"\"\n  DATABASE_ID\n\n  \"\"\"Identify a resource by the (hashed) Global ID.\"\"\"\n  ID\n\n  \"\"\"Identify a resource by the URI.\"\"\"\n  URI\n\n  \"\"\"\n  Identify a resource by the slug. Available to non-hierarchcial Types where the slug is a unique identifier.\n  \"\"\"\n  SLUG\n}\n\n\"\"\"The format of post field data.\"\"\"\nenum PostObjectFieldFormatEnum {\n  \"\"\"Provide the field value directly from database\"\"\"\n  RAW\n\n  \"\"\"Apply the default WordPress rendering\"\"\"\n  RENDERED\n}\n\n\"\"\"The column to use when filtering by date\"\"\"\nenum PostObjectsConnectionDateColumnEnum {\n  DATE\n  MODIFIED\n}\n\n\"\"\"Field to order the connection by\"\"\"\nenum PostObjectsConnectionOrderbyEnum {\n  \"\"\"Order by author\"\"\"\n  AUTHOR\n\n  \"\"\"Order by publish date\"\"\"\n  DATE\n\n  \"\"\"Preserve the ID order given in the IN array\"\"\"\n  IN\n\n  \"\"\"Order by the menu order value\"\"\"\n  MENU_ORDER\n\n  \"\"\"Order by last modified date\"\"\"\n  MODIFIED\n\n  \"\"\"Preserve slug order given in the NAME_IN array\"\"\"\n  NAME_IN\n\n  \"\"\"Order by parent ID\"\"\"\n  PARENT\n\n  \"\"\"Order by slug\"\"\"\n  SLUG\n\n  \"\"\"Order by title\"\"\"\n  TITLE\n}\n\n\"\"\"Options for ordering the connection\"\"\"\ninput PostObjectsConnectionOrderbyInput {\n  \"\"\"The field to order the connection by\"\"\"\n  field: PostObjectsConnectionOrderbyEnum!\n\n  \"\"\"Possible directions in which to order a list of items\"\"\"\n  order: OrderEnum!\n}\n\nunion PostObjectUnion = Post | Page | MediaItem\n\n\"\"\"Set relationships between the post to postFormats\"\"\"\ninput PostPostFormatsInput {\n  \"\"\"\n  If true, this will append the postFormat to existing related postFormats. If\n  false, this will replace existing relationships. Default true.\n  \"\"\"\n  append: Boolean\n  nodes: [PostPostFormatsNodeInput]\n}\n\n\"\"\"\nList of postFormats to connect the post to. If an ID is set, it will be used to\ncreate the connection. If not, it will look for a slug. If neither are valid\nexisting terms, and the site is configured to allow terms to be created during\npost mutations, a term will be created using the Name if it exists in the input,\nthen fallback to the slug if it exists.\n\"\"\"\ninput PostPostFormatsNodeInput {\n  \"\"\"\n  The description of the postFormat. This field is used to set a description of\n  the postFormat if a new one is created during the mutation.\n  \"\"\"\n  description: String\n\n  \"\"\"\n  The ID of the postFormat. If present, this will be used to connect to the\n  post. If no existing postFormat exists with this ID, no connection will be made.\n  \"\"\"\n  id: ID\n\n  \"\"\"\n  The name of the postFormat. This field is used to create a new term, if term\n  creation is enabled in nested mutations, and if one does not already exist\n  with the provided slug or ID or if a slug or ID is not provided. If no name is\n  included and a term is created, the creation will fallback to the slug field.\n  \"\"\"\n  name: String\n\n  \"\"\"\n  The slug of the postFormat. If no ID is present, this field will be used to\n  make a connection. If no existing term exists with this slug, this field will\n  be used as a fallback to the Name field when creating a new term to connect\n  to, if term creation is enabled as a nested mutation.\n  \"\"\"\n  slug: String\n}\n\n\"\"\"The status of the object.\"\"\"\nenum PostStatusEnum {\n  \"\"\"Objects with the auto-draft status\"\"\"\n  AUTO_DRAFT\n\n  \"\"\"Objects with the draft status\"\"\"\n  DRAFT\n\n  \"\"\"Objects with the future status\"\"\"\n  FUTURE\n\n  \"\"\"Objects with the inherit status\"\"\"\n  INHERIT\n\n  \"\"\"Objects with the pending status\"\"\"\n  PENDING\n\n  \"\"\"Objects with the private status\"\"\"\n  PRIVATE\n\n  \"\"\"Objects with the publish status\"\"\"\n  PUBLISH\n\n  \"\"\"Objects with the request-completed status\"\"\"\n  REQUEST_COMPLETED\n\n  \"\"\"Objects with the request-confirmed status\"\"\"\n  REQUEST_CONFIRMED\n\n  \"\"\"Objects with the request-failed status\"\"\"\n  REQUEST_FAILED\n\n  \"\"\"Objects with the request-pending status\"\"\"\n  REQUEST_PENDING\n\n  \"\"\"Objects with the trash status\"\"\"\n  TRASH\n}\n\n\"\"\"Set relationships between the post to tags\"\"\"\ninput PostTagsInput {\n  \"\"\"\n  If true, this will append the tag to existing related tags. If false, this\n  will replace existing relationships. Default true.\n  \"\"\"\n  append: Boolean\n  nodes: [PostTagsNodeInput]\n}\n\n\"\"\"\nList of tags to connect the post to. If an ID is set, it will be used to create\nthe connection. If not, it will look for a slug. If neither are valid existing\nterms, and the site is configured to allow terms to be created during post\nmutations, a term will be created using the Name if it exists in the input, then\nfallback to the slug if it exists.\n\"\"\"\ninput PostTagsNodeInput {\n  \"\"\"\n  The description of the tag. This field is used to set a description of the tag\n  if a new one is created during the mutation.\n  \"\"\"\n  description: String\n\n  \"\"\"\n  The ID of the tag. If present, this will be used to connect to the post. If no\n  existing tag exists with this ID, no connection will be made.\n  \"\"\"\n  id: ID\n\n  \"\"\"\n  The name of the tag. This field is used to create a new term, if term creation\n  is enabled in nested mutations, and if one does not already exist with the\n  provided slug or ID or if a slug or ID is not provided. If no name is included\n  and a term is created, the creation will fallback to the slug field.\n  \"\"\"\n  name: String\n\n  \"\"\"\n  The slug of the tag. If no ID is present, this field will be used to make a\n  connection. If no existing term exists with this slug, this field will be used\n  as a fallback to the Name field when creating a new term to connect to, if\n  term creation is enabled as a nested mutation.\n  \"\"\"\n  slug: String\n}\n\n\"\"\"Connection between the post type and the category type\"\"\"\ntype PostToCategoryConnection {\n  \"\"\"Edges for the PostToCategoryConnection connection\"\"\"\n  edges: [PostToCategoryConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Category]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype PostToCategoryConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Category\n}\n\n\"\"\"Arguments for filtering the PostToCategoryConnection connection\"\"\"\ninput PostToCategoryConnectionWhereArgs {\n  \"\"\"\n  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.\n  \"\"\"\n  cacheDomain: String\n\n  \"\"\"\n  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.\n  \"\"\"\n  childOf: Int\n\n  \"\"\"\n  True to limit results to terms that have no children. This parameter has no\n  effect on non-hierarchical taxonomies. Default false.\n  \"\"\"\n  childless: Boolean\n\n  \"\"\"\n  Retrieve terms where the description is LIKE the input value. Default empty.\n  \"\"\"\n  descriptionLike: String\n\n  \"\"\"\n  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.\n  \"\"\"\n  exclude: [ID]\n\n  \"\"\"\n  Array of term ids to exclude along with all of their descendant terms. If\n  $include is non-empty, $exclude_tree is ignored. Default empty array.\n  \"\"\"\n  excludeTree: [ID]\n\n  \"\"\"\n  Whether to hide terms not assigned to any posts. Accepts true or false. Default false\n  \"\"\"\n  hideEmpty: Boolean\n\n  \"\"\"\n  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.\n  \"\"\"\n  hierarchical: Boolean\n\n  \"\"\"Array of term ids to include. Default empty array.\"\"\"\n  include: [ID]\n\n  \"\"\"Array of names to return term(s) for. Default empty.\"\"\"\n  name: [String]\n\n  \"\"\"Retrieve terms where the name is LIKE the input value. Default empty.\"\"\"\n  nameLike: String\n\n  \"\"\"\n  Array of object IDs. Results will be limited to terms associated with these objects.\n  \"\"\"\n  objectIds: [ID]\n\n  \"\"\"Field(s) to order terms by. Defaults to 'name'.\"\"\"\n  orderby: TermObjectsConnectionOrderbyEnum\n\n  \"\"\"\n  Whether to pad the quantity of a term's children in the quantity of each term's \"count\" object variable. Default false.\n  \"\"\"\n  padCounts: Boolean\n\n  \"\"\"Parent term ID to retrieve direct-child terms of. Default empty.\"\"\"\n  parent: Int\n\n  \"\"\"\n  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.\n  \"\"\"\n  search: String\n\n  \"\"\"\n  Default false. If true, only the items connected to the source item will be\n  returned. If false, all items will be returned regardless of connection to the source\n  \"\"\"\n  shouldOnlyIncludeConnectedItems: Boolean\n\n  \"\"\"\n  Default false. If true, the connection will be output in a flat list instead\n  of the hierarchical list. So child terms will be output in the same level as\n  the parent terms\n  \"\"\"\n  shouldOutputInFlatList: Boolean\n\n  \"\"\"Array of slugs to return term(s) for. Default empty.\"\"\"\n  slug: [String]\n\n  \"\"\"Array of term taxonomy IDs, to match when querying terms.\"\"\"\n  termTaxonomId: [ID]\n\n  \"\"\"Whether to prime meta caches for matched terms. Default true.\"\"\"\n  updateTermMetaCache: Boolean\n}\n\n\"\"\"Connection between the post type and the Comment type\"\"\"\ntype PostToCommentConnection {\n  \"\"\"Edges for the PostToCommentConnection connection\"\"\"\n  edges: [PostToCommentConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Comment]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype PostToCommentConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Comment\n}\n\n\"\"\"Arguments for filtering the PostToCommentConnection connection\"\"\"\ninput PostToCommentConnectionWhereArgs {\n  \"\"\"Comment author email address.\"\"\"\n  authorEmail: String\n\n  \"\"\"Array of author IDs to include comments for.\"\"\"\n  authorIn: [ID]\n\n  \"\"\"Array of author IDs to exclude comments for.\"\"\"\n  authorNotIn: [ID]\n\n  \"\"\"Comment author URL.\"\"\"\n  authorUrl: String\n\n  \"\"\"Array of comment IDs to include.\"\"\"\n  commentIn: [ID]\n\n  \"\"\"\n  Array of IDs of users whose unapproved comments will be returned by the\n  \t\t\t\t\t\t\tquery regardless of status.\n  \"\"\"\n  commentNotIn: [ID]\n\n  \"\"\"Include comments of a given type.\"\"\"\n  commentType: String\n\n  \"\"\"Include comments from a given array of comment types.\"\"\"\n  commentTypeIn: [String]\n\n  \"\"\"Exclude comments from a given array of comment types.\"\"\"\n  commentTypeNotIn: String\n\n  \"\"\"Content object author ID to limit results by.\"\"\"\n  contentAuthor: [ID]\n\n  \"\"\"Array of author IDs to retrieve comments for.\"\"\"\n  contentAuthorIn: [ID]\n\n  \"\"\"Array of author IDs *not* to retrieve comments for.\"\"\"\n  contentAuthorNotIn: [ID]\n\n  \"\"\"\n  Limit results to those affiliated with a given content object\n  \t\t\t\t\t\t\tID.\n  \"\"\"\n  contentId: ID\n\n  \"\"\"\n  Array of content object IDs to include affiliated comments\n  \t\t\t\t\t\t\tfor.\n  \"\"\"\n  contentIdIn: [ID]\n\n  \"\"\"\n  Array of content object IDs to exclude affiliated comments\n  \t\t\t\t\t\t\tfor.\n  \"\"\"\n  contentIdNotIn: [ID]\n\n  \"\"\"Content object name to retrieve affiliated comments for.\"\"\"\n  contentName: String\n\n  \"\"\"Content Object parent ID to retrieve affiliated comments for.\"\"\"\n  contentParent: Int\n\n  \"\"\"\n  Array of content object statuses to retrieve affiliated comments for.\n  \t\t\t\t\t\t\tPass 'any' to match any value.\n  \"\"\"\n  contentStatus: [PostStatusEnum]\n\n  \"\"\"\n  Content object type or array of types to retrieve affiliated comments for. Pass 'any' to match any value.\n  \"\"\"\n  contentType: [ContentTypeEnum]\n\n  \"\"\"\n  Array of IDs or email addresses of users whose unapproved comments will be\n  returned by the query regardless of $status. Default empty\n  \"\"\"\n  includeUnapproved: [ID]\n\n  \"\"\"Karma score to retrieve matching comments for.\"\"\"\n  karma: Int\n\n  \"\"\"The cardinality of the order of the connection\"\"\"\n  order: OrderEnum\n\n  \"\"\"Field to order the comments by.\"\"\"\n  orderby: CommentsConnectionOrderbyEnum\n\n  \"\"\"Parent ID of comment to retrieve children of.\"\"\"\n  parent: Int\n\n  \"\"\"Array of parent IDs of comments to retrieve children for.\"\"\"\n  parentIn: [ID]\n\n  \"\"\"\n  Array of parent IDs of comments *not* to retrieve children\n  \t\t\t\t\t\t\tfor.\n  \"\"\"\n  parentNotIn: [ID]\n\n  \"\"\"Search term(s) to retrieve matching comments for.\"\"\"\n  search: String\n\n  \"\"\"Comment status to limit results by.\"\"\"\n  status: String\n\n  \"\"\"Include comments for a specific user ID.\"\"\"\n  userId: ID\n}\n\n\"\"\"Connection between the post type and the ContentType type\"\"\"\ntype PostToContentTypeConnection {\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  node: ContentType\n}\n\n\"\"\"Connection between the post type and the postFormat type\"\"\"\ntype PostToPostFormatConnection {\n  \"\"\"Edges for the PostToPostFormatConnection connection\"\"\"\n  edges: [PostToPostFormatConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [PostFormat]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype PostToPostFormatConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: PostFormat\n}\n\n\"\"\"Arguments for filtering the PostToPostFormatConnection connection\"\"\"\ninput PostToPostFormatConnectionWhereArgs {\n  \"\"\"\n  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.\n  \"\"\"\n  cacheDomain: String\n\n  \"\"\"\n  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.\n  \"\"\"\n  childOf: Int\n\n  \"\"\"\n  True to limit results to terms that have no children. This parameter has no\n  effect on non-hierarchical taxonomies. Default false.\n  \"\"\"\n  childless: Boolean\n\n  \"\"\"\n  Retrieve terms where the description is LIKE the input value. Default empty.\n  \"\"\"\n  descriptionLike: String\n\n  \"\"\"\n  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.\n  \"\"\"\n  exclude: [ID]\n\n  \"\"\"\n  Array of term ids to exclude along with all of their descendant terms. If\n  $include is non-empty, $exclude_tree is ignored. Default empty array.\n  \"\"\"\n  excludeTree: [ID]\n\n  \"\"\"\n  Whether to hide terms not assigned to any posts. Accepts true or false. Default false\n  \"\"\"\n  hideEmpty: Boolean\n\n  \"\"\"\n  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.\n  \"\"\"\n  hierarchical: Boolean\n\n  \"\"\"Array of term ids to include. Default empty array.\"\"\"\n  include: [ID]\n\n  \"\"\"Array of names to return term(s) for. Default empty.\"\"\"\n  name: [String]\n\n  \"\"\"Retrieve terms where the name is LIKE the input value. Default empty.\"\"\"\n  nameLike: String\n\n  \"\"\"\n  Array of object IDs. Results will be limited to terms associated with these objects.\n  \"\"\"\n  objectIds: [ID]\n\n  \"\"\"Field(s) to order terms by. Defaults to 'name'.\"\"\"\n  orderby: TermObjectsConnectionOrderbyEnum\n\n  \"\"\"\n  Whether to pad the quantity of a term's children in the quantity of each term's \"count\" object variable. Default false.\n  \"\"\"\n  padCounts: Boolean\n\n  \"\"\"Parent term ID to retrieve direct-child terms of. Default empty.\"\"\"\n  parent: Int\n\n  \"\"\"\n  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.\n  \"\"\"\n  search: String\n\n  \"\"\"\n  Default false. If true, only the items connected to the source item will be\n  returned. If false, all items will be returned regardless of connection to the source\n  \"\"\"\n  shouldOnlyIncludeConnectedItems: Boolean\n\n  \"\"\"\n  Default false. If true, the connection will be output in a flat list instead\n  of the hierarchical list. So child terms will be output in the same level as\n  the parent terms\n  \"\"\"\n  shouldOutputInFlatList: Boolean\n\n  \"\"\"Array of slugs to return term(s) for. Default empty.\"\"\"\n  slug: [String]\n\n  \"\"\"Array of term taxonomy IDs, to match when querying terms.\"\"\"\n  termTaxonomId: [ID]\n\n  \"\"\"Whether to prime meta caches for matched terms. Default true.\"\"\"\n  updateTermMetaCache: Boolean\n}\n\n\"\"\"Connection between the post type and the post type\"\"\"\ntype PostToRevisionConnection {\n  \"\"\"Edges for the postToRevisionConnection connection\"\"\"\n  edges: [PostToRevisionConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Post]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype PostToRevisionConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Post\n}\n\n\"\"\"Arguments for filtering the postToRevisionConnection connection\"\"\"\ninput PostToRevisionConnectionWhereArgs {\n  \"\"\"\n  The user that's connected as the author of the object. Use the userId for the author object.\n  \"\"\"\n  author: Int\n\n  \"\"\"Find objects connected to author(s) in the array of author's userIds\"\"\"\n  authorIn: [ID]\n\n  \"\"\"Find objects connected to the author by the author's nicename\"\"\"\n  authorName: String\n\n  \"\"\"\n  Find objects NOT connected to author(s) in the array of author's userIds\n  \"\"\"\n  authorNotIn: [ID]\n\n  \"\"\"Category ID\"\"\"\n  categoryId: Int\n\n  \"\"\"\n  Array of category IDs, used to display objects from one category OR another\n  \"\"\"\n  categoryIn: [ID]\n\n  \"\"\"Use Category Slug\"\"\"\n  categoryName: String\n\n  \"\"\"\n  Array of category IDs, used to display objects from one category OR another\n  \"\"\"\n  categoryNotIn: [ID]\n\n  \"\"\"Filter the connection based on dates\"\"\"\n  dateQuery: DateQueryInput\n\n  \"\"\"\n  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords\n  \"\"\"\n  hasPassword: Boolean\n\n  \"\"\"Specific ID of the object\"\"\"\n  id: Int\n\n  \"\"\"Array of IDs for the objects to retrieve\"\"\"\n  in: [ID]\n\n  \"\"\"Get objects with a specific mimeType property\"\"\"\n  mimeType: MimeTypeEnum\n\n  \"\"\"Slug / post_name of the object\"\"\"\n  name: String\n\n  \"\"\"Specify objects to retrieve. Use slugs\"\"\"\n  nameIn: [String]\n\n  \"\"\"\n  Specify IDs NOT to retrieve. If this is used in the same query as \"in\", it will be ignored\n  \"\"\"\n  notIn: [ID]\n\n  \"\"\"What paramater to use to order the objects by.\"\"\"\n  orderby: [PostObjectsConnectionOrderbyInput]\n\n  \"\"\"Use ID to return only children. Use 0 to return only top-level items\"\"\"\n  parent: String\n\n  \"\"\"Specify objects whose parent is in an array\"\"\"\n  parentIn: [ID]\n\n  \"\"\"Specify posts whose parent is not in an array\"\"\"\n  parentNotIn: [ID]\n\n  \"\"\"Show posts with a specific password.\"\"\"\n  password: String\n\n  \"\"\"Show Posts based on a keyword search\"\"\"\n  search: String\n  stati: [PostStatusEnum]\n  status: PostStatusEnum\n\n  \"\"\"Tag Slug\"\"\"\n  tag: String\n\n  \"\"\"Use Tag ID\"\"\"\n  tagId: String\n\n  \"\"\"Array of tag IDs, used to display objects from one tag OR another\"\"\"\n  tagIn: [ID]\n\n  \"\"\"Array of tag IDs, used to display objects from one tag OR another\"\"\"\n  tagNotIn: [ID]\n\n  \"\"\"Array of tag slugs, used to display objects from one tag OR another\"\"\"\n  tagSlugAnd: [String]\n\n  \"\"\"Array of tag slugs, used to exclude objects in specified tags\"\"\"\n  tagSlugIn: [String]\n\n  \"\"\"Title of the object\"\"\"\n  title: String\n}\n\n\"\"\"Connection between the post type and the tag type\"\"\"\ntype PostToTagConnection {\n  \"\"\"Edges for the PostToTagConnection connection\"\"\"\n  edges: [PostToTagConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Tag]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype PostToTagConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Tag\n}\n\n\"\"\"Arguments for filtering the PostToTagConnection connection\"\"\"\ninput PostToTagConnectionWhereArgs {\n  \"\"\"\n  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.\n  \"\"\"\n  cacheDomain: String\n\n  \"\"\"\n  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.\n  \"\"\"\n  childOf: Int\n\n  \"\"\"\n  True to limit results to terms that have no children. This parameter has no\n  effect on non-hierarchical taxonomies. Default false.\n  \"\"\"\n  childless: Boolean\n\n  \"\"\"\n  Retrieve terms where the description is LIKE the input value. Default empty.\n  \"\"\"\n  descriptionLike: String\n\n  \"\"\"\n  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.\n  \"\"\"\n  exclude: [ID]\n\n  \"\"\"\n  Array of term ids to exclude along with all of their descendant terms. If\n  $include is non-empty, $exclude_tree is ignored. Default empty array.\n  \"\"\"\n  excludeTree: [ID]\n\n  \"\"\"\n  Whether to hide terms not assigned to any posts. Accepts true or false. Default false\n  \"\"\"\n  hideEmpty: Boolean\n\n  \"\"\"\n  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.\n  \"\"\"\n  hierarchical: Boolean\n\n  \"\"\"Array of term ids to include. Default empty array.\"\"\"\n  include: [ID]\n\n  \"\"\"Array of names to return term(s) for. Default empty.\"\"\"\n  name: [String]\n\n  \"\"\"Retrieve terms where the name is LIKE the input value. Default empty.\"\"\"\n  nameLike: String\n\n  \"\"\"\n  Array of object IDs. Results will be limited to terms associated with these objects.\n  \"\"\"\n  objectIds: [ID]\n\n  \"\"\"Field(s) to order terms by. Defaults to 'name'.\"\"\"\n  orderby: TermObjectsConnectionOrderbyEnum\n\n  \"\"\"\n  Whether to pad the quantity of a term's children in the quantity of each term's \"count\" object variable. Default false.\n  \"\"\"\n  padCounts: Boolean\n\n  \"\"\"Parent term ID to retrieve direct-child terms of. Default empty.\"\"\"\n  parent: Int\n\n  \"\"\"\n  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.\n  \"\"\"\n  search: String\n\n  \"\"\"\n  Default false. If true, only the items connected to the source item will be\n  returned. If false, all items will be returned regardless of connection to the source\n  \"\"\"\n  shouldOnlyIncludeConnectedItems: Boolean\n\n  \"\"\"\n  Default false. If true, the connection will be output in a flat list instead\n  of the hierarchical list. So child terms will be output in the same level as\n  the parent terms\n  \"\"\"\n  shouldOutputInFlatList: Boolean\n\n  \"\"\"Array of slugs to return term(s) for. Default empty.\"\"\"\n  slug: [String]\n\n  \"\"\"Array of term taxonomy IDs, to match when querying terms.\"\"\"\n  termTaxonomId: [ID]\n\n  \"\"\"Whether to prime meta caches for matched terms. Default true.\"\"\"\n  updateTermMetaCache: Boolean\n}\n\n\"\"\"Details for labels of the PostType\"\"\"\ntype PostTypeLabelDetails {\n  \"\"\"Default is ‘Add New’ for both hierarchical and non-hierarchical types.\"\"\"\n  addNew: String\n\n  \"\"\"Label for adding a new singular item.\"\"\"\n  addNewItem: String\n\n  \"\"\"Label to signify all items in a submenu link.\"\"\"\n  allItems: String\n\n  \"\"\"Label for archives in nav menus\"\"\"\n  archives: String\n\n  \"\"\"Label for the attributes meta box.\"\"\"\n  attributes: String\n\n  \"\"\"Label for editing a singular item.\"\"\"\n  editItem: String\n\n  \"\"\"Label for the Featured Image meta box title.\"\"\"\n  featuredImage: String\n\n  \"\"\"Label for the table views hidden heading.\"\"\"\n  filterItemsList: String\n\n  \"\"\"Label for the media frame button.\"\"\"\n  insertIntoItem: String\n\n  \"\"\"Label for the table hidden heading.\"\"\"\n  itemsList: String\n\n  \"\"\"Label for the table pagination hidden heading.\"\"\"\n  itemsListNavigation: String\n\n  \"\"\"Label for the menu name.\"\"\"\n  menuName: String\n\n  \"\"\"General name for the post type, usually plural.\"\"\"\n  name: String\n\n  \"\"\"Label for the new item page title.\"\"\"\n  newItem: String\n\n  \"\"\"Label used when no items are found.\"\"\"\n  notFound: String\n\n  \"\"\"Label used when no items are in the trash.\"\"\"\n  notFoundInTrash: String\n\n  \"\"\"Label used to prefix parents of hierarchical items.\"\"\"\n  parentItemColon: String\n\n  \"\"\"Label for removing the featured image.\"\"\"\n  removeFeaturedImage: String\n\n  \"\"\"Label for searching plural items.\"\"\"\n  searchItems: String\n\n  \"\"\"Label for setting the featured image.\"\"\"\n  setFeaturedImage: String\n\n  \"\"\"Name for one object of this post type.\"\"\"\n  singularName: String\n\n  \"\"\"Label for the media frame filter.\"\"\"\n  uploadedToThisItem: String\n\n  \"\"\"Label in the media frame for using a featured image.\"\"\"\n  useFeaturedImage: String\n\n  \"\"\"Label for viewing a singular item.\"\"\"\n  viewItem: String\n\n  \"\"\"Label for viewing post type archives.\"\"\"\n  viewItems: String\n}\n\n\"\"\"The reading setting type\"\"\"\ntype ReadingSettings {\n  \"\"\"Blog pages show at most.\"\"\"\n  postsPerPage: Int\n}\n\n\"\"\"Input for the registerUser mutation\"\"\"\ninput RegisterUserInput {\n  \"\"\"User's AOL IM account.\"\"\"\n  aim: String\n  clientMutationId: String!\n\n  \"\"\"A string containing content about the user.\"\"\"\n  description: String\n\n  \"\"\"\n  A string that will be shown on the site. Defaults to user's username. It is\n  likely that you will want to change this, for both appearance and security\n  through obscurity (that is if you dont use and delete the default admin user).\n  \"\"\"\n  displayName: String\n\n  \"\"\"A string containing the user's email address.\"\"\"\n  email: String\n\n  \"\"\"\tThe user's first name.\"\"\"\n  firstName: String\n\n  \"\"\"User's Jabber account.\"\"\"\n  jabber: String\n\n  \"\"\"The user's last name.\"\"\"\n  lastName: String\n\n  \"\"\"User's locale.\"\"\"\n  locale: String\n\n  \"\"\"\n  A string that contains a URL-friendly name for the user. The default is the user's username.\n  \"\"\"\n  nicename: String\n\n  \"\"\"The user's nickname, defaults to the user's username.\"\"\"\n  nickname: String\n\n  \"\"\"A string that contains the plain text password for the user.\"\"\"\n  password: String\n\n  \"\"\"The date the user registered. Format is Y-m-d H:i:s.\"\"\"\n  registered: String\n\n  \"\"\"\n  A string for whether to enable the rich editor or not. False if not empty.\n  \"\"\"\n  richEditing: String\n\n  \"\"\"A string that contains the user's username.\"\"\"\n  username: String!\n\n  \"\"\"A string containing the user's URL for the user's web site.\"\"\"\n  websiteUrl: String\n\n  \"\"\"User's Yahoo IM account.\"\"\"\n  yim: String\n}\n\n\"\"\"The payload for the registerUser mutation\"\"\"\ntype RegisterUserPayload {\n  clientMutationId: String!\n  user: User\n}\n\n\"\"\"\nThe logical relation between each item in the array when there are more than one.\n\"\"\"\nenum RelationEnum {\n  AND\n  OR\n}\n\n\"\"\"Input for the resetUserPassword mutation\"\"\"\ninput ResetUserPasswordInput {\n  clientMutationId: String!\n\n  \"\"\"Password reset key\"\"\"\n  key: String\n\n  \"\"\"The user's login (username).\"\"\"\n  login: String\n\n  \"\"\"The new password.\"\"\"\n  password: String\n}\n\n\"\"\"The payload for the resetUserPassword mutation\"\"\"\ntype ResetUserPasswordPayload {\n  clientMutationId: String!\n  user: User\n}\n\n\"\"\"Input for the restoreComment mutation\"\"\"\ninput RestoreCommentInput {\n  clientMutationId: String!\n\n  \"\"\"The ID of the comment to be restored\"\"\"\n  id: ID!\n}\n\n\"\"\"The payload for the restoreComment mutation\"\"\"\ntype RestoreCommentPayload {\n  clientMutationId: String!\n\n  \"\"\"The restored comment object\"\"\"\n  comment: Comment\n\n  \"\"\"The ID of the restored comment\"\"\"\n  restoredId: ID\n}\n\n\"\"\"The root mutation\"\"\"\ntype RootMutation {\n  \"\"\"The payload for the UpdateCategory mutation\"\"\"\n  updateCategory(\n    \"\"\"Input for the UpdateCategory mutation\"\"\"\n    input: UpdateCategoryInput!\n  ): UpdateCategoryPayload\n\n  \"\"\"The payload for the UpdatePostFormat mutation\"\"\"\n  updatePostFormat(\n    \"\"\"Input for the UpdatePostFormat mutation\"\"\"\n    input: UpdatePostFormatInput!\n  ): UpdatePostFormatPayload\n\n  \"\"\"The payload for the UpdateTag mutation\"\"\"\n  updateTag(\n    \"\"\"Input for the UpdateTag mutation\"\"\"\n    input: UpdateTagInput!\n  ): UpdateTagPayload\n\n  \"\"\"The payload for the createCategory mutation\"\"\"\n  createCategory(\n    \"\"\"Input for the createCategory mutation\"\"\"\n    input: CreateCategoryInput!\n  ): CreateCategoryPayload\n\n  \"\"\"The payload for the createComment mutation\"\"\"\n  createComment(\n    \"\"\"Input for the createComment mutation\"\"\"\n    input: CreateCommentInput!\n  ): CreateCommentPayload\n\n  \"\"\"The payload for the createMediaItem mutation\"\"\"\n  createMediaItem(\n    \"\"\"Input for the createMediaItem mutation\"\"\"\n    input: CreateMediaItemInput!\n  ): CreateMediaItemPayload\n\n  \"\"\"The payload for the createPage mutation\"\"\"\n  createPage(\n    \"\"\"Input for the createPage mutation\"\"\"\n    input: CreatePageInput!\n  ): CreatePagePayload\n\n  \"\"\"The payload for the createPost mutation\"\"\"\n  createPost(\n    \"\"\"Input for the createPost mutation\"\"\"\n    input: CreatePostInput!\n  ): CreatePostPayload\n\n  \"\"\"The payload for the createPostFormat mutation\"\"\"\n  createPostFormat(\n    \"\"\"Input for the createPostFormat mutation\"\"\"\n    input: CreatePostFormatInput!\n  ): CreatePostFormatPayload\n\n  \"\"\"The payload for the createTag mutation\"\"\"\n  createTag(\n    \"\"\"Input for the createTag mutation\"\"\"\n    input: CreateTagInput!\n  ): CreateTagPayload\n\n  \"\"\"The payload for the createUser mutation\"\"\"\n  createUser(\n    \"\"\"Input for the createUser mutation\"\"\"\n    input: CreateUserInput!\n  ): CreateUserPayload\n\n  \"\"\"The payload for the deleteCategory mutation\"\"\"\n  deleteCategory(\n    \"\"\"Input for the deleteCategory mutation\"\"\"\n    input: DeleteCategoryInput!\n  ): DeleteCategoryPayload\n\n  \"\"\"The payload for the deleteComment mutation\"\"\"\n  deleteComment(\n    \"\"\"Input for the deleteComment mutation\"\"\"\n    input: DeleteCommentInput!\n  ): DeleteCommentPayload\n\n  \"\"\"The payload for the deleteMediaItem mutation\"\"\"\n  deleteMediaItem(\n    \"\"\"Input for the deleteMediaItem mutation\"\"\"\n    input: DeleteMediaItemInput!\n  ): DeleteMediaItemPayload\n\n  \"\"\"The payload for the deletePage mutation\"\"\"\n  deletePage(\n    \"\"\"Input for the deletePage mutation\"\"\"\n    input: DeletePageInput!\n  ): DeletePagePayload\n\n  \"\"\"The payload for the deletePost mutation\"\"\"\n  deletePost(\n    \"\"\"Input for the deletePost mutation\"\"\"\n    input: DeletePostInput!\n  ): DeletePostPayload\n\n  \"\"\"The payload for the deletePostFormat mutation\"\"\"\n  deletePostFormat(\n    \"\"\"Input for the deletePostFormat mutation\"\"\"\n    input: DeletePostFormatInput!\n  ): DeletePostFormatPayload\n\n  \"\"\"The payload for the deleteTag mutation\"\"\"\n  deleteTag(\n    \"\"\"Input for the deleteTag mutation\"\"\"\n    input: DeleteTagInput!\n  ): DeleteTagPayload\n\n  \"\"\"The payload for the deleteUser mutation\"\"\"\n  deleteUser(\n    \"\"\"Input for the deleteUser mutation\"\"\"\n    input: DeleteUserInput!\n  ): DeleteUserPayload\n  increaseCount(\n    \"\"\"The count to increase\"\"\"\n    count: Int\n  ): Int\n\n  \"\"\"The payload for the registerUser mutation\"\"\"\n  registerUser(\n    \"\"\"Input for the registerUser mutation\"\"\"\n    input: RegisterUserInput!\n  ): RegisterUserPayload\n\n  \"\"\"The payload for the resetUserPassword mutation\"\"\"\n  resetUserPassword(\n    \"\"\"Input for the resetUserPassword mutation\"\"\"\n    input: ResetUserPasswordInput!\n  ): ResetUserPasswordPayload\n\n  \"\"\"The payload for the restoreComment mutation\"\"\"\n  restoreComment(\n    \"\"\"Input for the restoreComment mutation\"\"\"\n    input: RestoreCommentInput!\n  ): RestoreCommentPayload\n\n  \"\"\"The payload for the sendPasswordResetEmail mutation\"\"\"\n  sendPasswordResetEmail(\n    \"\"\"Input for the sendPasswordResetEmail mutation\"\"\"\n    input: SendPasswordResetEmailInput!\n  ): SendPasswordResetEmailPayload\n\n  \"\"\"The payload for the updateComment mutation\"\"\"\n  updateComment(\n    \"\"\"Input for the updateComment mutation\"\"\"\n    input: UpdateCommentInput!\n  ): UpdateCommentPayload\n\n  \"\"\"The payload for the updateMediaItem mutation\"\"\"\n  updateMediaItem(\n    \"\"\"Input for the updateMediaItem mutation\"\"\"\n    input: UpdateMediaItemInput!\n  ): UpdateMediaItemPayload\n\n  \"\"\"The payload for the updatePage mutation\"\"\"\n  updatePage(\n    \"\"\"Input for the updatePage mutation\"\"\"\n    input: UpdatePageInput!\n  ): UpdatePagePayload\n\n  \"\"\"The payload for the updatePost mutation\"\"\"\n  updatePost(\n    \"\"\"Input for the updatePost mutation\"\"\"\n    input: UpdatePostInput!\n  ): UpdatePostPayload\n\n  \"\"\"The payload for the updateSettings mutation\"\"\"\n  updateSettings(\n    \"\"\"Input for the updateSettings mutation\"\"\"\n    input: UpdateSettingsInput!\n  ): UpdateSettingsPayload\n\n  \"\"\"The payload for the updateUser mutation\"\"\"\n  updateUser(\n    \"\"\"Input for the updateUser mutation\"\"\"\n    input: UpdateUserInput!\n  ): UpdateUserPayload\n}\n\n\"\"\"The root entry point into the Graph\"\"\"\ntype RootQuery {\n  \"\"\"Entry point to get all settings for the site\"\"\"\n  allSettings: Settings\n\n  \"\"\"Connection between the RootQuery type and the category type\"\"\"\n  categories(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: RootQueryToCategoryConnectionWhereArgs\n  ): RootQueryToCategoryConnection\n\n  \"\"\"A 0bject\"\"\"\n  category(id: ID!, idType: CategoryIdType): Category\n\n  \"\"\"Returns a Comment\"\"\"\n  comment(id: ID!): Comment\n\n  \"\"\"Connection between the RootQuery type and the Comment type\"\"\"\n  comments(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: RootQueryToCommentConnectionWhereArgs\n  ): RootQueryToCommentConnection\n\n  \"\"\"A node used to manage content\"\"\"\n  contentNode(\n    id: ID!\n\n    \"\"\"\n    Type of unique identifier to fetch a content node by. Default is Global ID\n    \"\"\"\n    idType: ContentNodeIdTypeEnum\n\n    \"\"\"\n    The content type the node is used for. Required when idType is set to \"name\" or \"slug\"\n    \"\"\"\n    contentType: ContentTypeEnum\n  ): ContentNode\n\n  \"\"\"Connection between the RootQuery type and the ContentNode type\"\"\"\n  contentNodes(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: RootQueryToContentNodeConnectionWhereArgs\n  ): RootQueryToContentNodeConnection\n\n  \"\"\"Fetch a Content Type node by unique Identifier\"\"\"\n  contentType(\n    \"\"\"Unique Identifier for the Content Type node\"\"\"\n    id: ID!\n\n    \"\"\"The type of Identifier used in the ID field\"\"\"\n    idType: ContentTypeIdTypeEnum\n  ): ContentType\n\n  \"\"\"Connection between the RootQuery type and the ContentType type\"\"\"\n  contentTypes(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n  ): RootQueryToContentTypeConnection\n  discussionSettings: DiscussionSettings\n  generalSettings: GeneralSettings\n\n  \"\"\"An object of the mediaItem Type. \"\"\"\n  mediaItem(id: ID!, idType: MediaItemIdType): MediaItem\n\n  \"\"\"A mediaItem object\"\"\"\n  mediaItemBy(\n    \"\"\"Get the object by its global ID\"\"\"\n    id: ID\n\n    \"\"\"Get the mediaItem by its database ID\"\"\"\n    mediaItemId: Int\n\n    \"\"\"Get the mediaItem by its uri\"\"\"\n    uri: String\n\n    \"\"\"\n    Get the mediaItem by its slug (only available for non-hierarchical types)\n    \"\"\"\n    slug: String\n  ): MediaItem @deprecated(reason: \"Deprecated in favor of using the single entry point for this type with ID and IDType fields. For example, instead of postBy( id: &quot;&quot; ), use post(id: &quot;&quot; idType: &quot;&quot;)\")\n\n  \"\"\"Connection between the RootQuery type and the mediaItem type\"\"\"\n  mediaItems(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: RootQueryToMediaItemConnectionWhereArgs\n  ): RootQueryToMediaItemConnection\n\n  \"\"\"A WordPress navigation menu\"\"\"\n  menu(id: ID!): Menu\n\n  \"\"\"A WordPress navigation menu item\"\"\"\n  menuItem(id: ID!): MenuItem\n\n  \"\"\"Connection between the RootQuery type and the MenuItem type\"\"\"\n  menuItems(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: RootQueryToMenuItemConnectionWhereArgs\n  ): RootQueryToMenuItemConnection\n\n  \"\"\"Connection between the RootQuery type and the Menu type\"\"\"\n  menus(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: RootQueryToMenuConnectionWhereArgs\n  ): RootQueryToMenuConnection\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The unique identifier of the node\"\"\"\n    id: ID\n  ): Node\n  nodeByUri(\n    \"\"\"\n    Unique Resource Identifier in the form of a path or permalink for a node. Ex: \"/hello-world\"\n    \"\"\"\n    uri: String!\n  ): UniformResourceIdentifiable\n\n  \"\"\"An object of the page Type. \"\"\"\n  page(id: ID!, idType: PageIdType): Page\n\n  \"\"\"A page object\"\"\"\n  pageBy(\n    \"\"\"Get the object by its global ID\"\"\"\n    id: ID\n\n    \"\"\"Get the page by its database ID\"\"\"\n    pageId: Int\n\n    \"\"\"Get the page by its uri\"\"\"\n    uri: String\n  ): Page @deprecated(reason: \"Deprecated in favor of using the single entry point for this type with ID and IDType fields. For example, instead of postBy( id: &quot;&quot; ), use post(id: &quot;&quot; idType: &quot;&quot;)\")\n\n  \"\"\"Connection between the RootQuery type and the page type\"\"\"\n  pages(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: RootQueryToPageConnectionWhereArgs\n  ): RootQueryToPageConnection\n\n  \"\"\"A WordPress plugin\"\"\"\n  plugin(id: ID!): Plugin\n\n  \"\"\"Connection between the RootQuery type and the Plugin type\"\"\"\n  plugins(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n  ): RootQueryToPluginConnection\n\n  \"\"\"An object of the post Type. \"\"\"\n  post(id: ID!, idType: PostIdType): Post\n\n  \"\"\"A post object\"\"\"\n  postBy(\n    \"\"\"Get the object by its global ID\"\"\"\n    id: ID\n\n    \"\"\"Get the post by its database ID\"\"\"\n    postId: Int\n\n    \"\"\"Get the post by its uri\"\"\"\n    uri: String\n\n    \"\"\"Get the post by its slug (only available for non-hierarchical types)\"\"\"\n    slug: String\n  ): Post @deprecated(reason: \"Deprecated in favor of using the single entry point for this type with ID and IDType fields. For example, instead of postBy( id: &quot;&quot; ), use post(id: &quot;&quot; idType: &quot;&quot;)\")\n\n  \"\"\"A 0bject\"\"\"\n  postFormat(id: ID!, idType: PostFormatIdType): PostFormat\n\n  \"\"\"Connection between the RootQuery type and the postFormat type\"\"\"\n  postFormats(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: RootQueryToPostFormatConnectionWhereArgs\n  ): RootQueryToPostFormatConnection\n\n  \"\"\"Connection between the RootQuery type and the post type\"\"\"\n  posts(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: RootQueryToPostConnectionWhereArgs\n  ): RootQueryToPostConnection\n  readingSettings: ReadingSettings\n\n  \"\"\"\n  Connection between the RootQuery type and the ContentRevisionUnion type\n  \"\"\"\n  revisions(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: RootQueryToContentRevisionUnionConnectionWhereArgs\n  ): RootQueryToContentRevisionUnionConnection\n\n  \"\"\"A 0bject\"\"\"\n  tag(id: ID!, idType: TagIdType): Tag\n\n  \"\"\"Connection between the RootQuery type and the tag type\"\"\"\n  tags(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: RootQueryToTagConnectionWhereArgs\n  ): RootQueryToTagConnection\n\n  \"\"\"Connection between the RootQuery type and the Taxonomy type\"\"\"\n  taxonomies(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n  ): RootQueryToTaxonomyConnection\n\n  \"\"\"Fetch a Taxonomy node by unique Identifier\"\"\"\n  taxonomy(\n    \"\"\"Unique Identifier for the Taxonomy node\"\"\"\n    id: ID!\n\n    \"\"\"The type of Identifier used in the ID field\"\"\"\n    idType: TaxonomyIdTypeEnum\n  ): Taxonomy\n\n  \"\"\"A node in a taxonomy used to group and relate content nodes\"\"\"\n  termNode(\n    id: ID!\n\n    \"\"\"\n    Type of unique identifier to fetch a term node by. Default is Global ID\n    \"\"\"\n    idType: TermNodeIdTypeEnum\n\n    \"\"\"\n    The taxonomy of the tern node. Required when idType is set to \"name\" or \"slug\"\n    \"\"\"\n    taxonomy: TaxonomyEnum\n  ): TermNode\n\n  \"\"\"Connection between the RootQuery type and the TermNode type\"\"\"\n  terms(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: RootQueryToTermNodeConnectionWhereArgs\n  ): RootQueryToTermNodeConnection\n\n  \"\"\"A Theme object\"\"\"\n  theme(id: ID!): Theme\n\n  \"\"\"Connection between the RootQuery type and the Theme type\"\"\"\n  themes(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n  ): RootQueryToThemeConnection\n\n  \"\"\"Returns a user\"\"\"\n  user(id: ID!, idType: UserNodeIdTypeEnum): User\n\n  \"\"\"Returns a user role\"\"\"\n  userRole(id: ID!): UserRole\n\n  \"\"\"Connection between the RootQuery type and the UserRole type\"\"\"\n  userRoles(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n  ): RootQueryToUserRoleConnection\n\n  \"\"\"Connection between the RootQuery type and the User type\"\"\"\n  users(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: RootQueryToUserConnectionWhereArgs\n  ): RootQueryToUserConnection\n\n  \"\"\"Returns the current user\"\"\"\n  viewer: User\n  writingSettings: WritingSettings\n}\n\n\"\"\"Connection between the RootQuery type and the category type\"\"\"\ntype RootQueryToCategoryConnection {\n  \"\"\"Edges for the RootQueryToCategoryConnection connection\"\"\"\n  edges: [RootQueryToCategoryConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Category]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype RootQueryToCategoryConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Category\n}\n\n\"\"\"Arguments for filtering the RootQueryToCategoryConnection connection\"\"\"\ninput RootQueryToCategoryConnectionWhereArgs {\n  \"\"\"\n  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.\n  \"\"\"\n  cacheDomain: String\n\n  \"\"\"\n  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.\n  \"\"\"\n  childOf: Int\n\n  \"\"\"\n  True to limit results to terms that have no children. This parameter has no\n  effect on non-hierarchical taxonomies. Default false.\n  \"\"\"\n  childless: Boolean\n\n  \"\"\"\n  Retrieve terms where the description is LIKE the input value. Default empty.\n  \"\"\"\n  descriptionLike: String\n\n  \"\"\"\n  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.\n  \"\"\"\n  exclude: [ID]\n\n  \"\"\"\n  Array of term ids to exclude along with all of their descendant terms. If\n  $include is non-empty, $exclude_tree is ignored. Default empty array.\n  \"\"\"\n  excludeTree: [ID]\n\n  \"\"\"\n  Whether to hide terms not assigned to any posts. Accepts true or false. Default false\n  \"\"\"\n  hideEmpty: Boolean\n\n  \"\"\"\n  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.\n  \"\"\"\n  hierarchical: Boolean\n\n  \"\"\"Array of term ids to include. Default empty array.\"\"\"\n  include: [ID]\n\n  \"\"\"Array of names to return term(s) for. Default empty.\"\"\"\n  name: [String]\n\n  \"\"\"Retrieve terms where the name is LIKE the input value. Default empty.\"\"\"\n  nameLike: String\n\n  \"\"\"\n  Array of object IDs. Results will be limited to terms associated with these objects.\n  \"\"\"\n  objectIds: [ID]\n\n  \"\"\"Field(s) to order terms by. Defaults to 'name'.\"\"\"\n  orderby: TermObjectsConnectionOrderbyEnum\n\n  \"\"\"\n  Whether to pad the quantity of a term's children in the quantity of each term's \"count\" object variable. Default false.\n  \"\"\"\n  padCounts: Boolean\n\n  \"\"\"Parent term ID to retrieve direct-child terms of. Default empty.\"\"\"\n  parent: Int\n\n  \"\"\"\n  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.\n  \"\"\"\n  search: String\n\n  \"\"\"\n  Default false. If true, only the items connected to the source item will be\n  returned. If false, all items will be returned regardless of connection to the source\n  \"\"\"\n  shouldOnlyIncludeConnectedItems: Boolean\n\n  \"\"\"\n  Default false. If true, the connection will be output in a flat list instead\n  of the hierarchical list. So child terms will be output in the same level as\n  the parent terms\n  \"\"\"\n  shouldOutputInFlatList: Boolean\n\n  \"\"\"Array of slugs to return term(s) for. Default empty.\"\"\"\n  slug: [String]\n\n  \"\"\"Array of term taxonomy IDs, to match when querying terms.\"\"\"\n  termTaxonomId: [ID]\n\n  \"\"\"Whether to prime meta caches for matched terms. Default true.\"\"\"\n  updateTermMetaCache: Boolean\n}\n\n\"\"\"Connection between the RootQuery type and the Comment type\"\"\"\ntype RootQueryToCommentConnection {\n  \"\"\"Edges for the RootQueryToCommentConnection connection\"\"\"\n  edges: [RootQueryToCommentConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Comment]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype RootQueryToCommentConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Comment\n}\n\n\"\"\"Arguments for filtering the RootQueryToCommentConnection connection\"\"\"\ninput RootQueryToCommentConnectionWhereArgs {\n  \"\"\"Comment author email address.\"\"\"\n  authorEmail: String\n\n  \"\"\"Array of author IDs to include comments for.\"\"\"\n  authorIn: [ID]\n\n  \"\"\"Array of author IDs to exclude comments for.\"\"\"\n  authorNotIn: [ID]\n\n  \"\"\"Comment author URL.\"\"\"\n  authorUrl: String\n\n  \"\"\"Array of comment IDs to include.\"\"\"\n  commentIn: [ID]\n\n  \"\"\"\n  Array of IDs of users whose unapproved comments will be returned by the\n  \t\t\t\t\t\t\tquery regardless of status.\n  \"\"\"\n  commentNotIn: [ID]\n\n  \"\"\"Include comments of a given type.\"\"\"\n  commentType: String\n\n  \"\"\"Include comments from a given array of comment types.\"\"\"\n  commentTypeIn: [String]\n\n  \"\"\"Exclude comments from a given array of comment types.\"\"\"\n  commentTypeNotIn: String\n\n  \"\"\"Content object author ID to limit results by.\"\"\"\n  contentAuthor: [ID]\n\n  \"\"\"Array of author IDs to retrieve comments for.\"\"\"\n  contentAuthorIn: [ID]\n\n  \"\"\"Array of author IDs *not* to retrieve comments for.\"\"\"\n  contentAuthorNotIn: [ID]\n\n  \"\"\"\n  Limit results to those affiliated with a given content object\n  \t\t\t\t\t\t\tID.\n  \"\"\"\n  contentId: ID\n\n  \"\"\"\n  Array of content object IDs to include affiliated comments\n  \t\t\t\t\t\t\tfor.\n  \"\"\"\n  contentIdIn: [ID]\n\n  \"\"\"\n  Array of content object IDs to exclude affiliated comments\n  \t\t\t\t\t\t\tfor.\n  \"\"\"\n  contentIdNotIn: [ID]\n\n  \"\"\"Content object name to retrieve affiliated comments for.\"\"\"\n  contentName: String\n\n  \"\"\"Content Object parent ID to retrieve affiliated comments for.\"\"\"\n  contentParent: Int\n\n  \"\"\"\n  Array of content object statuses to retrieve affiliated comments for.\n  \t\t\t\t\t\t\tPass 'any' to match any value.\n  \"\"\"\n  contentStatus: [PostStatusEnum]\n\n  \"\"\"\n  Content object type or array of types to retrieve affiliated comments for. Pass 'any' to match any value.\n  \"\"\"\n  contentType: [ContentTypeEnum]\n\n  \"\"\"\n  Array of IDs or email addresses of users whose unapproved comments will be\n  returned by the query regardless of $status. Default empty\n  \"\"\"\n  includeUnapproved: [ID]\n\n  \"\"\"Karma score to retrieve matching comments for.\"\"\"\n  karma: Int\n\n  \"\"\"The cardinality of the order of the connection\"\"\"\n  order: OrderEnum\n\n  \"\"\"Field to order the comments by.\"\"\"\n  orderby: CommentsConnectionOrderbyEnum\n\n  \"\"\"Parent ID of comment to retrieve children of.\"\"\"\n  parent: Int\n\n  \"\"\"Array of parent IDs of comments to retrieve children for.\"\"\"\n  parentIn: [ID]\n\n  \"\"\"\n  Array of parent IDs of comments *not* to retrieve children\n  \t\t\t\t\t\t\tfor.\n  \"\"\"\n  parentNotIn: [ID]\n\n  \"\"\"Search term(s) to retrieve matching comments for.\"\"\"\n  search: String\n\n  \"\"\"Comment status to limit results by.\"\"\"\n  status: String\n\n  \"\"\"Include comments for a specific user ID.\"\"\"\n  userId: ID\n}\n\n\"\"\"Connection between the RootQuery type and the ContentNode type\"\"\"\ntype RootQueryToContentNodeConnection {\n  \"\"\"Edges for the RootQueryToContentNodeConnection connection\"\"\"\n  edges: [RootQueryToContentNodeConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [ContentNode]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype RootQueryToContentNodeConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: ContentNode\n}\n\n\"\"\"\nArguments for filtering the RootQueryToContentNodeConnection connection\n\"\"\"\ninput RootQueryToContentNodeConnectionWhereArgs {\n  \"\"\"The Types of content to filter\"\"\"\n  contentTypes: [ContentTypeEnum]\n\n  \"\"\"Filter the connection based on dates\"\"\"\n  dateQuery: DateQueryInput\n\n  \"\"\"\n  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords\n  \"\"\"\n  hasPassword: Boolean\n\n  \"\"\"Specific ID of the object\"\"\"\n  id: Int\n\n  \"\"\"Array of IDs for the objects to retrieve\"\"\"\n  in: [ID]\n\n  \"\"\"Get objects with a specific mimeType property\"\"\"\n  mimeType: MimeTypeEnum\n\n  \"\"\"Slug / post_name of the object\"\"\"\n  name: String\n\n  \"\"\"Specify objects to retrieve. Use slugs\"\"\"\n  nameIn: [String]\n\n  \"\"\"\n  Specify IDs NOT to retrieve. If this is used in the same query as \"in\", it will be ignored\n  \"\"\"\n  notIn: [ID]\n\n  \"\"\"What paramater to use to order the objects by.\"\"\"\n  orderby: [PostObjectsConnectionOrderbyInput]\n\n  \"\"\"Use ID to return only children. Use 0 to return only top-level items\"\"\"\n  parent: String\n\n  \"\"\"Specify objects whose parent is in an array\"\"\"\n  parentIn: [ID]\n\n  \"\"\"Specify posts whose parent is not in an array\"\"\"\n  parentNotIn: [ID]\n\n  \"\"\"Show posts with a specific password.\"\"\"\n  password: String\n\n  \"\"\"Show Posts based on a keyword search\"\"\"\n  search: String\n  stati: [PostStatusEnum]\n  status: PostStatusEnum\n\n  \"\"\"Title of the object\"\"\"\n  title: String\n}\n\n\"\"\"\nConnection between the RootQuery type and the ContentRevisionUnion type\n\"\"\"\ntype RootQueryToContentRevisionUnionConnection {\n  \"\"\"Edges for the RootQueryToContentRevisionUnionConnection connection\"\"\"\n  edges: [RootQueryToContentRevisionUnionConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [ContentRevisionUnion]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype RootQueryToContentRevisionUnionConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: ContentRevisionUnion\n}\n\n\"\"\"\nArguments for filtering the RootQueryToContentRevisionUnionConnection connection\n\"\"\"\ninput RootQueryToContentRevisionUnionConnectionWhereArgs {\n  \"\"\"Filter the connection based on dates\"\"\"\n  dateQuery: DateQueryInput\n\n  \"\"\"\n  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords\n  \"\"\"\n  hasPassword: Boolean\n\n  \"\"\"Specific ID of the object\"\"\"\n  id: Int\n\n  \"\"\"Array of IDs for the objects to retrieve\"\"\"\n  in: [ID]\n\n  \"\"\"Get objects with a specific mimeType property\"\"\"\n  mimeType: MimeTypeEnum\n\n  \"\"\"Slug / post_name of the object\"\"\"\n  name: String\n\n  \"\"\"Specify objects to retrieve. Use slugs\"\"\"\n  nameIn: [String]\n\n  \"\"\"\n  Specify IDs NOT to retrieve. If this is used in the same query as \"in\", it will be ignored\n  \"\"\"\n  notIn: [ID]\n\n  \"\"\"What paramater to use to order the objects by.\"\"\"\n  orderby: [PostObjectsConnectionOrderbyInput]\n\n  \"\"\"Use ID to return only children. Use 0 to return only top-level items\"\"\"\n  parent: String\n\n  \"\"\"Specify objects whose parent is in an array\"\"\"\n  parentIn: [ID]\n\n  \"\"\"Specify posts whose parent is not in an array\"\"\"\n  parentNotIn: [ID]\n\n  \"\"\"Show posts with a specific password.\"\"\"\n  password: String\n\n  \"\"\"Show Posts based on a keyword search\"\"\"\n  search: String\n  stati: [PostStatusEnum]\n  status: PostStatusEnum\n\n  \"\"\"Title of the object\"\"\"\n  title: String\n}\n\n\"\"\"Connection between the RootQuery type and the ContentType type\"\"\"\ntype RootQueryToContentTypeConnection {\n  \"\"\"Edges for the RootQueryToContentTypeConnection connection\"\"\"\n  edges: [RootQueryToContentTypeConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [ContentType]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype RootQueryToContentTypeConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: ContentType\n}\n\n\"\"\"Connection between the RootQuery type and the mediaItem type\"\"\"\ntype RootQueryToMediaItemConnection {\n  \"\"\"Edges for the RootQueryToMediaItemConnection connection\"\"\"\n  edges: [RootQueryToMediaItemConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [MediaItem]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype RootQueryToMediaItemConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: MediaItem\n}\n\n\"\"\"Arguments for filtering the RootQueryToMediaItemConnection connection\"\"\"\ninput RootQueryToMediaItemConnectionWhereArgs {\n  \"\"\"\n  The user that's connected as the author of the object. Use the userId for the author object.\n  \"\"\"\n  author: Int\n\n  \"\"\"Find objects connected to author(s) in the array of author's userIds\"\"\"\n  authorIn: [ID]\n\n  \"\"\"Find objects connected to the author by the author's nicename\"\"\"\n  authorName: String\n\n  \"\"\"\n  Find objects NOT connected to author(s) in the array of author's userIds\n  \"\"\"\n  authorNotIn: [ID]\n\n  \"\"\"Filter the connection based on dates\"\"\"\n  dateQuery: DateQueryInput\n\n  \"\"\"\n  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords\n  \"\"\"\n  hasPassword: Boolean\n\n  \"\"\"Specific ID of the object\"\"\"\n  id: Int\n\n  \"\"\"Array of IDs for the objects to retrieve\"\"\"\n  in: [ID]\n\n  \"\"\"Get objects with a specific mimeType property\"\"\"\n  mimeType: MimeTypeEnum\n\n  \"\"\"Slug / post_name of the object\"\"\"\n  name: String\n\n  \"\"\"Specify objects to retrieve. Use slugs\"\"\"\n  nameIn: [String]\n\n  \"\"\"\n  Specify IDs NOT to retrieve. If this is used in the same query as \"in\", it will be ignored\n  \"\"\"\n  notIn: [ID]\n\n  \"\"\"What paramater to use to order the objects by.\"\"\"\n  orderby: [PostObjectsConnectionOrderbyInput]\n\n  \"\"\"Use ID to return only children. Use 0 to return only top-level items\"\"\"\n  parent: String\n\n  \"\"\"Specify objects whose parent is in an array\"\"\"\n  parentIn: [ID]\n\n  \"\"\"Specify posts whose parent is not in an array\"\"\"\n  parentNotIn: [ID]\n\n  \"\"\"Show posts with a specific password.\"\"\"\n  password: String\n\n  \"\"\"Show Posts based on a keyword search\"\"\"\n  search: String\n  stati: [PostStatusEnum]\n  status: PostStatusEnum\n\n  \"\"\"Title of the object\"\"\"\n  title: String\n}\n\n\"\"\"Connection between the RootQuery type and the Menu type\"\"\"\ntype RootQueryToMenuConnection {\n  \"\"\"Edges for the RootQueryToMenuConnection connection\"\"\"\n  edges: [RootQueryToMenuConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Menu]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype RootQueryToMenuConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Menu\n}\n\n\"\"\"Arguments for filtering the RootQueryToMenuConnection connection\"\"\"\ninput RootQueryToMenuConnectionWhereArgs {\n  \"\"\"The ID of the object\"\"\"\n  id: Int\n\n  \"\"\"The menu location for the menu being queried\"\"\"\n  location: MenuLocationEnum\n\n  \"\"\"The slug of the menu to query items for\"\"\"\n  slug: String\n}\n\n\"\"\"Connection between the RootQuery type and the MenuItem type\"\"\"\ntype RootQueryToMenuItemConnection {\n  \"\"\"Edges for the RootQueryToMenuItemConnection connection\"\"\"\n  edges: [RootQueryToMenuItemConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [MenuItem]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype RootQueryToMenuItemConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: MenuItem\n}\n\n\"\"\"Arguments for filtering the RootQueryToMenuItemConnection connection\"\"\"\ninput RootQueryToMenuItemConnectionWhereArgs {\n  \"\"\"The ID of the object\"\"\"\n  id: Int\n\n  \"\"\"The menu location for the menu being queried\"\"\"\n  location: MenuLocationEnum\n}\n\n\"\"\"Connection between the RootQuery type and the page type\"\"\"\ntype RootQueryToPageConnection {\n  \"\"\"Edges for the RootQueryToPageConnection connection\"\"\"\n  edges: [RootQueryToPageConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Page]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype RootQueryToPageConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Page\n}\n\n\"\"\"Arguments for filtering the RootQueryToPageConnection connection\"\"\"\ninput RootQueryToPageConnectionWhereArgs {\n  \"\"\"\n  The user that's connected as the author of the object. Use the userId for the author object.\n  \"\"\"\n  author: Int\n\n  \"\"\"Find objects connected to author(s) in the array of author's userIds\"\"\"\n  authorIn: [ID]\n\n  \"\"\"Find objects connected to the author by the author's nicename\"\"\"\n  authorName: String\n\n  \"\"\"\n  Find objects NOT connected to author(s) in the array of author's userIds\n  \"\"\"\n  authorNotIn: [ID]\n\n  \"\"\"Filter the connection based on dates\"\"\"\n  dateQuery: DateQueryInput\n\n  \"\"\"\n  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords\n  \"\"\"\n  hasPassword: Boolean\n\n  \"\"\"Specific ID of the object\"\"\"\n  id: Int\n\n  \"\"\"Array of IDs for the objects to retrieve\"\"\"\n  in: [ID]\n\n  \"\"\"Get objects with a specific mimeType property\"\"\"\n  mimeType: MimeTypeEnum\n\n  \"\"\"Slug / post_name of the object\"\"\"\n  name: String\n\n  \"\"\"Specify objects to retrieve. Use slugs\"\"\"\n  nameIn: [String]\n\n  \"\"\"\n  Specify IDs NOT to retrieve. If this is used in the same query as \"in\", it will be ignored\n  \"\"\"\n  notIn: [ID]\n\n  \"\"\"What paramater to use to order the objects by.\"\"\"\n  orderby: [PostObjectsConnectionOrderbyInput]\n\n  \"\"\"Use ID to return only children. Use 0 to return only top-level items\"\"\"\n  parent: String\n\n  \"\"\"Specify objects whose parent is in an array\"\"\"\n  parentIn: [ID]\n\n  \"\"\"Specify posts whose parent is not in an array\"\"\"\n  parentNotIn: [ID]\n\n  \"\"\"Show posts with a specific password.\"\"\"\n  password: String\n\n  \"\"\"Show Posts based on a keyword search\"\"\"\n  search: String\n  stati: [PostStatusEnum]\n  status: PostStatusEnum\n\n  \"\"\"Title of the object\"\"\"\n  title: String\n}\n\n\"\"\"Connection between the RootQuery type and the Plugin type\"\"\"\ntype RootQueryToPluginConnection {\n  \"\"\"Edges for the RootQueryToPluginConnection connection\"\"\"\n  edges: [RootQueryToPluginConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Plugin]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype RootQueryToPluginConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Plugin\n}\n\n\"\"\"Connection between the RootQuery type and the post type\"\"\"\ntype RootQueryToPostConnection {\n  \"\"\"Edges for the RootQueryToPostConnection connection\"\"\"\n  edges: [RootQueryToPostConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Post]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype RootQueryToPostConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Post\n}\n\n\"\"\"Arguments for filtering the RootQueryToPostConnection connection\"\"\"\ninput RootQueryToPostConnectionWhereArgs {\n  \"\"\"\n  The user that's connected as the author of the object. Use the userId for the author object.\n  \"\"\"\n  author: Int\n\n  \"\"\"Find objects connected to author(s) in the array of author's userIds\"\"\"\n  authorIn: [ID]\n\n  \"\"\"Find objects connected to the author by the author's nicename\"\"\"\n  authorName: String\n\n  \"\"\"\n  Find objects NOT connected to author(s) in the array of author's userIds\n  \"\"\"\n  authorNotIn: [ID]\n\n  \"\"\"Category ID\"\"\"\n  categoryId: Int\n\n  \"\"\"\n  Array of category IDs, used to display objects from one category OR another\n  \"\"\"\n  categoryIn: [ID]\n\n  \"\"\"Use Category Slug\"\"\"\n  categoryName: String\n\n  \"\"\"\n  Array of category IDs, used to display objects from one category OR another\n  \"\"\"\n  categoryNotIn: [ID]\n\n  \"\"\"Filter the connection based on dates\"\"\"\n  dateQuery: DateQueryInput\n\n  \"\"\"\n  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords\n  \"\"\"\n  hasPassword: Boolean\n\n  \"\"\"Specific ID of the object\"\"\"\n  id: Int\n\n  \"\"\"Array of IDs for the objects to retrieve\"\"\"\n  in: [ID]\n\n  \"\"\"Get objects with a specific mimeType property\"\"\"\n  mimeType: MimeTypeEnum\n\n  \"\"\"Slug / post_name of the object\"\"\"\n  name: String\n\n  \"\"\"Specify objects to retrieve. Use slugs\"\"\"\n  nameIn: [String]\n\n  \"\"\"\n  Specify IDs NOT to retrieve. If this is used in the same query as \"in\", it will be ignored\n  \"\"\"\n  notIn: [ID]\n\n  \"\"\"What paramater to use to order the objects by.\"\"\"\n  orderby: [PostObjectsConnectionOrderbyInput]\n\n  \"\"\"Use ID to return only children. Use 0 to return only top-level items\"\"\"\n  parent: String\n\n  \"\"\"Specify objects whose parent is in an array\"\"\"\n  parentIn: [ID]\n\n  \"\"\"Specify posts whose parent is not in an array\"\"\"\n  parentNotIn: [ID]\n\n  \"\"\"Show posts with a specific password.\"\"\"\n  password: String\n\n  \"\"\"Show Posts based on a keyword search\"\"\"\n  search: String\n  stati: [PostStatusEnum]\n  status: PostStatusEnum\n\n  \"\"\"Tag Slug\"\"\"\n  tag: String\n\n  \"\"\"Use Tag ID\"\"\"\n  tagId: String\n\n  \"\"\"Array of tag IDs, used to display objects from one tag OR another\"\"\"\n  tagIn: [ID]\n\n  \"\"\"Array of tag IDs, used to display objects from one tag OR another\"\"\"\n  tagNotIn: [ID]\n\n  \"\"\"Array of tag slugs, used to display objects from one tag OR another\"\"\"\n  tagSlugAnd: [String]\n\n  \"\"\"Array of tag slugs, used to exclude objects in specified tags\"\"\"\n  tagSlugIn: [String]\n\n  \"\"\"Title of the object\"\"\"\n  title: String\n}\n\n\"\"\"Connection between the RootQuery type and the postFormat type\"\"\"\ntype RootQueryToPostFormatConnection {\n  \"\"\"Edges for the RootQueryToPostFormatConnection connection\"\"\"\n  edges: [RootQueryToPostFormatConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [PostFormat]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype RootQueryToPostFormatConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: PostFormat\n}\n\n\"\"\"Arguments for filtering the RootQueryToPostFormatConnection connection\"\"\"\ninput RootQueryToPostFormatConnectionWhereArgs {\n  \"\"\"\n  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.\n  \"\"\"\n  cacheDomain: String\n\n  \"\"\"\n  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.\n  \"\"\"\n  childOf: Int\n\n  \"\"\"\n  True to limit results to terms that have no children. This parameter has no\n  effect on non-hierarchical taxonomies. Default false.\n  \"\"\"\n  childless: Boolean\n\n  \"\"\"\n  Retrieve terms where the description is LIKE the input value. Default empty.\n  \"\"\"\n  descriptionLike: String\n\n  \"\"\"\n  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.\n  \"\"\"\n  exclude: [ID]\n\n  \"\"\"\n  Array of term ids to exclude along with all of their descendant terms. If\n  $include is non-empty, $exclude_tree is ignored. Default empty array.\n  \"\"\"\n  excludeTree: [ID]\n\n  \"\"\"\n  Whether to hide terms not assigned to any posts. Accepts true or false. Default false\n  \"\"\"\n  hideEmpty: Boolean\n\n  \"\"\"\n  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.\n  \"\"\"\n  hierarchical: Boolean\n\n  \"\"\"Array of term ids to include. Default empty array.\"\"\"\n  include: [ID]\n\n  \"\"\"Array of names to return term(s) for. Default empty.\"\"\"\n  name: [String]\n\n  \"\"\"Retrieve terms where the name is LIKE the input value. Default empty.\"\"\"\n  nameLike: String\n\n  \"\"\"\n  Array of object IDs. Results will be limited to terms associated with these objects.\n  \"\"\"\n  objectIds: [ID]\n\n  \"\"\"Field(s) to order terms by. Defaults to 'name'.\"\"\"\n  orderby: TermObjectsConnectionOrderbyEnum\n\n  \"\"\"\n  Whether to pad the quantity of a term's children in the quantity of each term's \"count\" object variable. Default false.\n  \"\"\"\n  padCounts: Boolean\n\n  \"\"\"Parent term ID to retrieve direct-child terms of. Default empty.\"\"\"\n  parent: Int\n\n  \"\"\"\n  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.\n  \"\"\"\n  search: String\n\n  \"\"\"\n  Default false. If true, only the items connected to the source item will be\n  returned. If false, all items will be returned regardless of connection to the source\n  \"\"\"\n  shouldOnlyIncludeConnectedItems: Boolean\n\n  \"\"\"\n  Default false. If true, the connection will be output in a flat list instead\n  of the hierarchical list. So child terms will be output in the same level as\n  the parent terms\n  \"\"\"\n  shouldOutputInFlatList: Boolean\n\n  \"\"\"Array of slugs to return term(s) for. Default empty.\"\"\"\n  slug: [String]\n\n  \"\"\"Array of term taxonomy IDs, to match when querying terms.\"\"\"\n  termTaxonomId: [ID]\n\n  \"\"\"Whether to prime meta caches for matched terms. Default true.\"\"\"\n  updateTermMetaCache: Boolean\n}\n\n\"\"\"Connection between the RootQuery type and the tag type\"\"\"\ntype RootQueryToTagConnection {\n  \"\"\"Edges for the RootQueryToTagConnection connection\"\"\"\n  edges: [RootQueryToTagConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Tag]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype RootQueryToTagConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Tag\n}\n\n\"\"\"Arguments for filtering the RootQueryToTagConnection connection\"\"\"\ninput RootQueryToTagConnectionWhereArgs {\n  \"\"\"\n  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.\n  \"\"\"\n  cacheDomain: String\n\n  \"\"\"\n  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.\n  \"\"\"\n  childOf: Int\n\n  \"\"\"\n  True to limit results to terms that have no children. This parameter has no\n  effect on non-hierarchical taxonomies. Default false.\n  \"\"\"\n  childless: Boolean\n\n  \"\"\"\n  Retrieve terms where the description is LIKE the input value. Default empty.\n  \"\"\"\n  descriptionLike: String\n\n  \"\"\"\n  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.\n  \"\"\"\n  exclude: [ID]\n\n  \"\"\"\n  Array of term ids to exclude along with all of their descendant terms. If\n  $include is non-empty, $exclude_tree is ignored. Default empty array.\n  \"\"\"\n  excludeTree: [ID]\n\n  \"\"\"\n  Whether to hide terms not assigned to any posts. Accepts true or false. Default false\n  \"\"\"\n  hideEmpty: Boolean\n\n  \"\"\"\n  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.\n  \"\"\"\n  hierarchical: Boolean\n\n  \"\"\"Array of term ids to include. Default empty array.\"\"\"\n  include: [ID]\n\n  \"\"\"Array of names to return term(s) for. Default empty.\"\"\"\n  name: [String]\n\n  \"\"\"Retrieve terms where the name is LIKE the input value. Default empty.\"\"\"\n  nameLike: String\n\n  \"\"\"\n  Array of object IDs. Results will be limited to terms associated with these objects.\n  \"\"\"\n  objectIds: [ID]\n\n  \"\"\"Field(s) to order terms by. Defaults to 'name'.\"\"\"\n  orderby: TermObjectsConnectionOrderbyEnum\n\n  \"\"\"\n  Whether to pad the quantity of a term's children in the quantity of each term's \"count\" object variable. Default false.\n  \"\"\"\n  padCounts: Boolean\n\n  \"\"\"Parent term ID to retrieve direct-child terms of. Default empty.\"\"\"\n  parent: Int\n\n  \"\"\"\n  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.\n  \"\"\"\n  search: String\n\n  \"\"\"\n  Default false. If true, only the items connected to the source item will be\n  returned. If false, all items will be returned regardless of connection to the source\n  \"\"\"\n  shouldOnlyIncludeConnectedItems: Boolean\n\n  \"\"\"\n  Default false. If true, the connection will be output in a flat list instead\n  of the hierarchical list. So child terms will be output in the same level as\n  the parent terms\n  \"\"\"\n  shouldOutputInFlatList: Boolean\n\n  \"\"\"Array of slugs to return term(s) for. Default empty.\"\"\"\n  slug: [String]\n\n  \"\"\"Array of term taxonomy IDs, to match when querying terms.\"\"\"\n  termTaxonomId: [ID]\n\n  \"\"\"Whether to prime meta caches for matched terms. Default true.\"\"\"\n  updateTermMetaCache: Boolean\n}\n\n\"\"\"Connection between the RootQuery type and the Taxonomy type\"\"\"\ntype RootQueryToTaxonomyConnection {\n  \"\"\"Edges for the RootQueryToTaxonomyConnection connection\"\"\"\n  edges: [RootQueryToTaxonomyConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Taxonomy]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype RootQueryToTaxonomyConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Taxonomy\n}\n\n\"\"\"Connection between the RootQuery type and the TermNode type\"\"\"\ntype RootQueryToTermNodeConnection {\n  \"\"\"Edges for the RootQueryToTermNodeConnection connection\"\"\"\n  edges: [RootQueryToTermNodeConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [TermNode]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype RootQueryToTermNodeConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: TermNode\n}\n\n\"\"\"Arguments for filtering the RootQueryToTermNodeConnection connection\"\"\"\ninput RootQueryToTermNodeConnectionWhereArgs {\n  \"\"\"\n  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.\n  \"\"\"\n  cacheDomain: String\n\n  \"\"\"\n  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.\n  \"\"\"\n  childOf: Int\n\n  \"\"\"\n  True to limit results to terms that have no children. This parameter has no\n  effect on non-hierarchical taxonomies. Default false.\n  \"\"\"\n  childless: Boolean\n\n  \"\"\"\n  Retrieve terms where the description is LIKE the input value. Default empty.\n  \"\"\"\n  descriptionLike: String\n\n  \"\"\"\n  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.\n  \"\"\"\n  exclude: [ID]\n\n  \"\"\"\n  Array of term ids to exclude along with all of their descendant terms. If\n  $include is non-empty, $exclude_tree is ignored. Default empty array.\n  \"\"\"\n  excludeTree: [ID]\n\n  \"\"\"\n  Whether to hide terms not assigned to any posts. Accepts true or false. Default false\n  \"\"\"\n  hideEmpty: Boolean\n\n  \"\"\"\n  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.\n  \"\"\"\n  hierarchical: Boolean\n\n  \"\"\"Array of term ids to include. Default empty array.\"\"\"\n  include: [ID]\n\n  \"\"\"Array of names to return term(s) for. Default empty.\"\"\"\n  name: [String]\n\n  \"\"\"Retrieve terms where the name is LIKE the input value. Default empty.\"\"\"\n  nameLike: String\n\n  \"\"\"\n  Array of object IDs. Results will be limited to terms associated with these objects.\n  \"\"\"\n  objectIds: [ID]\n\n  \"\"\"Field(s) to order terms by. Defaults to 'name'.\"\"\"\n  orderby: TermObjectsConnectionOrderbyEnum\n\n  \"\"\"\n  Whether to pad the quantity of a term's children in the quantity of each term's \"count\" object variable. Default false.\n  \"\"\"\n  padCounts: Boolean\n\n  \"\"\"Parent term ID to retrieve direct-child terms of. Default empty.\"\"\"\n  parent: Int\n\n  \"\"\"\n  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.\n  \"\"\"\n  search: String\n\n  \"\"\"\n  Default false. If true, only the items connected to the source item will be\n  returned. If false, all items will be returned regardless of connection to the source\n  \"\"\"\n  shouldOnlyIncludeConnectedItems: Boolean\n\n  \"\"\"\n  Default false. If true, the connection will be output in a flat list instead\n  of the hierarchical list. So child terms will be output in the same level as\n  the parent terms\n  \"\"\"\n  shouldOutputInFlatList: Boolean\n\n  \"\"\"Array of slugs to return term(s) for. Default empty.\"\"\"\n  slug: [String]\n\n  \"\"\"The Taxonomy to filter terms by\"\"\"\n  taxonomies: [TaxonomyEnum]\n\n  \"\"\"Array of term taxonomy IDs, to match when querying terms.\"\"\"\n  termTaxonomId: [ID]\n\n  \"\"\"Whether to prime meta caches for matched terms. Default true.\"\"\"\n  updateTermMetaCache: Boolean\n}\n\n\"\"\"Connection between the RootQuery type and the Theme type\"\"\"\ntype RootQueryToThemeConnection {\n  \"\"\"Edges for the RootQueryToThemeConnection connection\"\"\"\n  edges: [RootQueryToThemeConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Theme]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype RootQueryToThemeConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Theme\n}\n\n\"\"\"Connection between the RootQuery type and the User type\"\"\"\ntype RootQueryToUserConnection {\n  \"\"\"Edges for the RootQueryToUserConnection connection\"\"\"\n  edges: [RootQueryToUserConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [User]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype RootQueryToUserConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: User\n}\n\n\"\"\"Arguments for filtering the RootQueryToUserConnection connection\"\"\"\ninput RootQueryToUserConnectionWhereArgs {\n  \"\"\"Array of userIds to exclude.\"\"\"\n  exclude: [Int]\n\n  \"\"\"\n  Pass an array of post types to filter results to users who have published posts in those post types.\n  \"\"\"\n  hasPublishedPosts: [ContentTypeEnum]\n\n  \"\"\"Array of userIds to include.\"\"\"\n  include: [Int]\n\n  \"\"\"The user login.\"\"\"\n  login: String\n\n  \"\"\"\n  An array of logins to include. Users matching one of these logins will be included in results.\n  \"\"\"\n  loginIn: Int\n\n  \"\"\"\n  An array of logins to exclude. Users matching one of these logins will not be included in results.\n  \"\"\"\n  loginNotIn: Int\n\n  \"\"\"The user nicename.\"\"\"\n  nicename: String\n\n  \"\"\"\n  An array of nicenames to include. Users matching one of these nicenames will be included in results.\n  \"\"\"\n  nicenameIn: [String]\n\n  \"\"\"\n  An array of nicenames to exclude. Users matching one of these nicenames will not be included in results.\n  \"\"\"\n  nicenameNotIn: [String]\n\n  \"\"\"What paramater to use to order the objects by.\"\"\"\n  orderby: [UsersConnectionOrderbyInput]\n\n  \"\"\"\n  An array of role names that users must match to be included in results. Note\n  that this is an inclusive list: users must match *each* role.\n  \"\"\"\n  role: UserRoleEnum\n\n  \"\"\"\n  An array of role names. Matched users must have at least one of these roles.\n  \"\"\"\n  roleIn: [UserRoleEnum]\n\n  \"\"\"\n  An array of role names to exclude. Users matching one or more of these roles will not be included in results.\n  \"\"\"\n  roleNotIn: [UserRoleEnum]\n\n  \"\"\"\n  Search keyword. Searches for possible string matches on columns. When\n  \"searchColumns\" is left empty, it tries to determine which column to search in\n  based on search string.\n  \"\"\"\n  search: String\n\n  \"\"\"\n  Array of column names to be searched. Accepts 'ID', 'login', 'nicename', 'email', 'url'.\n  \"\"\"\n  searchColumns: [String]\n}\n\n\"\"\"Connection between the RootQuery type and the UserRole type\"\"\"\ntype RootQueryToUserRoleConnection {\n  \"\"\"Edges for the RootQueryToUserRoleConnection connection\"\"\"\n  edges: [RootQueryToUserRoleConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [UserRole]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype RootQueryToUserRoleConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: UserRole\n}\n\n\"\"\"Input for the sendPasswordResetEmail mutation\"\"\"\ninput SendPasswordResetEmailInput {\n  clientMutationId: String!\n\n  \"\"\"A string that contains the user's username or email address.\"\"\"\n  username: String!\n}\n\n\"\"\"The payload for the sendPasswordResetEmail mutation\"\"\"\ntype SendPasswordResetEmailPayload {\n  clientMutationId: String!\n\n  \"\"\"The user that the password reset email was sent to\"\"\"\n  user: User\n}\n\n\"\"\"All of the registered settings\"\"\"\ntype Settings {\n  \"\"\"Allow people to submit comments on new posts.\"\"\"\n  discussionSettingsDefaultCommentStatus: String\n\n  \"\"\"\n  Allow link notifications from other blogs (pingbacks and trackbacks) on new articles.\n  \"\"\"\n  discussionSettingsDefaultPingStatus: String\n\n  \"\"\"A date format for all date strings.\"\"\"\n  generalSettingsDateFormat: String\n\n  \"\"\"Site tagline.\"\"\"\n  generalSettingsDescription: String\n\n  \"\"\"This address is used for admin purposes, like new user notification.\"\"\"\n  generalSettingsEmail: String\n\n  \"\"\"WordPress locale code.\"\"\"\n  generalSettingsLanguage: String\n\n  \"\"\"A day number of the week that the week should start on.\"\"\"\n  generalSettingsStartOfWeek: Int\n\n  \"\"\"A time format for all time strings.\"\"\"\n  generalSettingsTimeFormat: String\n\n  \"\"\"A city in the same timezone as you.\"\"\"\n  generalSettingsTimezone: String\n\n  \"\"\"Site title.\"\"\"\n  generalSettingsTitle: String\n\n  \"\"\"Site URL.\"\"\"\n  generalSettingsUrl: String\n\n  \"\"\"Blog pages show at most.\"\"\"\n  readingSettingsPostsPerPage: Int\n\n  \"\"\"Default post category.\"\"\"\n  writingSettingsDefaultCategory: Int\n\n  \"\"\"Default post format.\"\"\"\n  writingSettingsDefaultPostFormat: String\n\n  \"\"\"Convert emoticons like :-) and :-P to graphics on display.\"\"\"\n  writingSettingsUseSmilies: Boolean\n}\n\n\"\"\"The tag type\"\"\"\ntype Tag implements Node & TermNode & UniformResourceIdentifiable {\n  \"\"\"The number of objects connected to the object\"\"\"\n  count: Int\n\n  \"\"\"Identifies the primary key from the database.\"\"\"\n  databaseId: Int!\n\n  \"\"\"The description of the object\"\"\"\n  description: String\n\n  \"\"\"The globally unique ID for the object\"\"\"\n  id: ID!\n\n  \"\"\"Whether the object is restricted from the current viewer\"\"\"\n  isRestricted: Boolean\n\n  \"\"\"The link to the term\"\"\"\n  link: String\n\n  \"\"\"The human friendly name of the object.\"\"\"\n  name: String\n\n  \"\"\"Connection between the tag type and the post type\"\"\"\n  posts(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: TagToPostConnectionWhereArgs\n  ): TagToPostConnection\n\n  \"\"\"An alphanumeric identifier for the object unique to its type.\"\"\"\n  slug: String\n\n  \"\"\"The id field matches the WP_Post-&gt;ID field.\"\"\"\n  tagId: Int @deprecated(reason: \"Deprecated in favor of databaseId\")\n\n  \"\"\"Connection between the tag type and the Taxonomy type\"\"\"\n  taxonomy: TagToTaxonomyConnection\n\n  \"\"\"The ID of the term group that this term object belongs to\"\"\"\n  termGroupId: Int\n\n  \"\"\"The taxonomy ID that the object is associated with\"\"\"\n  termTaxonomyId: Int\n\n  \"\"\"The unique resource identifier path\"\"\"\n  uri: String!\n}\n\n\"\"\"The Type of Identifier used to fetch a single resource. Default is ID.\"\"\"\nenum TagIdType {\n  \"\"\"The Database ID for the node\"\"\"\n  DATABASE_ID\n\n  \"\"\"The hashed Global ID\"\"\"\n  ID\n\n  \"\"\"The name of the node\"\"\"\n  NAME\n\n  \"\"\"Url friendly name of the node\"\"\"\n  SLUG\n\n  \"\"\"The URI for the node\"\"\"\n  URI\n}\n\n\"\"\"Connection between the tag type and the post type\"\"\"\ntype TagToPostConnection {\n  \"\"\"Edges for the TagToPostConnection connection\"\"\"\n  edges: [TagToPostConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Post]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype TagToPostConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Post\n}\n\n\"\"\"Arguments for filtering the TagToPostConnection connection\"\"\"\ninput TagToPostConnectionWhereArgs {\n  \"\"\"\n  The user that's connected as the author of the object. Use the userId for the author object.\n  \"\"\"\n  author: Int\n\n  \"\"\"Find objects connected to author(s) in the array of author's userIds\"\"\"\n  authorIn: [ID]\n\n  \"\"\"Find objects connected to the author by the author's nicename\"\"\"\n  authorName: String\n\n  \"\"\"\n  Find objects NOT connected to author(s) in the array of author's userIds\n  \"\"\"\n  authorNotIn: [ID]\n\n  \"\"\"Category ID\"\"\"\n  categoryId: Int\n\n  \"\"\"\n  Array of category IDs, used to display objects from one category OR another\n  \"\"\"\n  categoryIn: [ID]\n\n  \"\"\"Use Category Slug\"\"\"\n  categoryName: String\n\n  \"\"\"\n  Array of category IDs, used to display objects from one category OR another\n  \"\"\"\n  categoryNotIn: [ID]\n\n  \"\"\"Filter the connection based on dates\"\"\"\n  dateQuery: DateQueryInput\n\n  \"\"\"\n  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords\n  \"\"\"\n  hasPassword: Boolean\n\n  \"\"\"Specific ID of the object\"\"\"\n  id: Int\n\n  \"\"\"Array of IDs for the objects to retrieve\"\"\"\n  in: [ID]\n\n  \"\"\"Get objects with a specific mimeType property\"\"\"\n  mimeType: MimeTypeEnum\n\n  \"\"\"Slug / post_name of the object\"\"\"\n  name: String\n\n  \"\"\"Specify objects to retrieve. Use slugs\"\"\"\n  nameIn: [String]\n\n  \"\"\"\n  Specify IDs NOT to retrieve. If this is used in the same query as \"in\", it will be ignored\n  \"\"\"\n  notIn: [ID]\n\n  \"\"\"What paramater to use to order the objects by.\"\"\"\n  orderby: [PostObjectsConnectionOrderbyInput]\n\n  \"\"\"Use ID to return only children. Use 0 to return only top-level items\"\"\"\n  parent: String\n\n  \"\"\"Specify objects whose parent is in an array\"\"\"\n  parentIn: [ID]\n\n  \"\"\"Specify posts whose parent is not in an array\"\"\"\n  parentNotIn: [ID]\n\n  \"\"\"Show posts with a specific password.\"\"\"\n  password: String\n\n  \"\"\"Show Posts based on a keyword search\"\"\"\n  search: String\n  stati: [PostStatusEnum]\n  status: PostStatusEnum\n\n  \"\"\"Tag Slug\"\"\"\n  tag: String\n\n  \"\"\"Use Tag ID\"\"\"\n  tagId: String\n\n  \"\"\"Array of tag IDs, used to display objects from one tag OR another\"\"\"\n  tagIn: [ID]\n\n  \"\"\"Array of tag IDs, used to display objects from one tag OR another\"\"\"\n  tagNotIn: [ID]\n\n  \"\"\"Array of tag slugs, used to display objects from one tag OR another\"\"\"\n  tagSlugAnd: [String]\n\n  \"\"\"Array of tag slugs, used to exclude objects in specified tags\"\"\"\n  tagSlugIn: [String]\n\n  \"\"\"Title of the object\"\"\"\n  title: String\n}\n\n\"\"\"Connection between the tag type and the Taxonomy type\"\"\"\ntype TagToTaxonomyConnection {\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  node: Taxonomy\n}\n\n\"\"\"A taxonomy object\"\"\"\ntype Taxonomy implements Node {\n  \"\"\"A list of Post Types associated with the taxonomy\"\"\"\n  connectedPostTypeNames(\n    \"\"\"Select which post types to limit the results to\"\"\"\n    types: [ContentTypeEnum]\n  ): [String]\n\n  \"\"\"List of Post Types connected to the Taxonomy\"\"\"\n  connectedPostTypes(\n    \"\"\"Select which post types to limit the results to\"\"\"\n    types: [ContentTypeEnum]\n  ): [ContentType]\n\n  \"\"\"\n  Description of the taxonomy. This field is equivalent to WP_Taxonomy-&gt;description\n  \"\"\"\n  description: String\n\n  \"\"\"The plural name of the post type within the GraphQL Schema.\"\"\"\n  graphqlPluralName: String\n\n  \"\"\"The singular name of the post type within the GraphQL Schema.\"\"\"\n  graphqlSingleName: String\n\n  \"\"\"Whether the taxonomy is hierarchical\"\"\"\n  hierarchical: Boolean\n\n  \"\"\"The globally unique identifier of the taxonomy object.\"\"\"\n  id: ID!\n\n  \"\"\"Whether the object is restricted from the current viewer\"\"\"\n  isRestricted: Boolean\n\n  \"\"\"Name of the taxonomy shown in the menu. Usually plural.\"\"\"\n  label: String\n\n  \"\"\"\n  The display name of the taxonomy. This field is equivalent to WP_Taxonomy-&gt;label\n  \"\"\"\n  name: String\n\n  \"\"\"Whether the taxonomy is publicly queryable\"\"\"\n  public: Boolean\n\n  \"\"\"\n  Name of content type to diplay in REST API &quot;wp/v2&quot; namespace.\n  \"\"\"\n  restBase: String\n\n  \"\"\"The REST Controller class assigned to handling this content type.\"\"\"\n  restControllerClass: String\n\n  \"\"\"\n  Whether to show the taxonomy as part of a tag cloud widget. This field is equivalent to WP_Taxonomy-&gt;show_tagcloud\n  \"\"\"\n  showCloud: Boolean\n\n  \"\"\"\n  Whether to display a column for the taxonomy on its post type listing screens.\n  \"\"\"\n  showInAdminColumn: Boolean\n\n  \"\"\"Whether to add the post type to the GraphQL Schema.\"\"\"\n  showInGraphql: Boolean\n\n  \"\"\"Whether to show the taxonomy in the admin menu\"\"\"\n  showInMenu: Boolean\n\n  \"\"\"Whether the taxonomy is available for selection in navigation menus.\"\"\"\n  showInNavMenus: Boolean\n\n  \"\"\"Whether to show the taxonomy in the quick/bulk edit panel.\"\"\"\n  showInQuickEdit: Boolean\n\n  \"\"\"\n  Whether to add the post type route in the REST API &quot;wp/v2&quot; namespace.\n  \"\"\"\n  showInRest: Boolean\n\n  \"\"\"\n  Whether to generate and allow a UI for managing terms in this taxonomy in the admin\n  \"\"\"\n  showUi: Boolean\n}\n\n\"\"\"Allowed taxonomies\"\"\"\nenum TaxonomyEnum {\n  CATEGORY\n  POSTFORMAT\n  TAG\n}\n\n\"\"\"\nThe Type of Identifier used to fetch a single Taxonomy node. To be used along with the \"id\" field. Default is \"ID\".\n\"\"\"\nenum TaxonomyIdTypeEnum {\n  \"\"\"The globally unique ID\"\"\"\n  ID\n\n  \"\"\"The name of the taxonomy\"\"\"\n  NAME\n}\n\n\"\"\"\nTerms are nodes within a Taxonomy, used to group and relate other nodes.\n\"\"\"\ninterface TermNode {\n  \"\"\"The number of objects connected to the object\"\"\"\n  count: Int\n\n  \"\"\"Identifies the primary key from the database.\"\"\"\n  databaseId: Int!\n\n  \"\"\"The description of the object\"\"\"\n  description: String\n\n  \"\"\"Unique identifier for the term\"\"\"\n  id: ID!\n\n  \"\"\"Whether the object is restricted from the current viewer\"\"\"\n  isRestricted: Boolean\n\n  \"\"\"The link to the term\"\"\"\n  link: String\n\n  \"\"\"The human friendly name of the object.\"\"\"\n  name: String\n\n  \"\"\"An alphanumeric identifier for the object unique to its type.\"\"\"\n  slug: String\n\n  \"\"\"The ID of the term group that this term object belongs to\"\"\"\n  termGroupId: Int\n\n  \"\"\"The taxonomy ID that the object is associated with\"\"\"\n  termTaxonomyId: Int\n\n  \"\"\"The unique resource identifier path\"\"\"\n  uri: String!\n}\n\n\"\"\"\nThe Type of Identifier used to fetch a single resource. Default is \"ID\". To be used along with the \"id\" field.\n\"\"\"\nenum TermNodeIdTypeEnum {\n  \"\"\"The Database ID for the node\"\"\"\n  DATABASE_ID\n\n  \"\"\"The hashed Global ID\"\"\"\n  ID\n\n  \"\"\"The name of the node\"\"\"\n  NAME\n\n  \"\"\"Url friendly name of the node\"\"\"\n  SLUG\n\n  \"\"\"The URI for the node\"\"\"\n  URI\n}\n\n\"\"\"Options for ordering the connection by\"\"\"\nenum TermObjectsConnectionOrderbyEnum {\n  COUNT\n  DESCRIPTION\n  NAME\n  SLUG\n  TERM_GROUP\n  TERM_ID\n  TERM_ORDER\n}\n\nunion TermObjectUnion = Category | Tag | PostFormat\n\n\"\"\"A theme object\"\"\"\ntype Theme implements Node {\n  \"\"\"\n  Name of the theme author(s), could also be a company name. This field is\n  equivalent to WP_Theme-&gt;get( &quot;Author&quot; ).\n  \"\"\"\n  author: String\n\n  \"\"\"\n  URI for the author/company website. This field is equivalent to WP_Theme-&gt;get( &quot;AuthorURI&quot; ).\n  \"\"\"\n  authorUri: String\n\n  \"\"\"\n  The description of the theme. This field is equivalent to WP_Theme-&gt;get( &quot;Description&quot; ).\n  \"\"\"\n  description: String\n\n  \"\"\"The globally unique identifier of the theme object.\"\"\"\n  id: ID!\n\n  \"\"\"Whether the object is restricted from the current viewer\"\"\"\n  isRestricted: Boolean\n\n  \"\"\"\n  Display name of the theme. This field is equivalent to WP_Theme-&gt;get( &quot;Name&quot; ).\n  \"\"\"\n  name: String\n\n  \"\"\"\n  The URL of the screenshot for the theme. The screenshot is intended to give an\n  overview of what the theme looks like. This field is equivalent to\n  WP_Theme-&gt;get_screenshot().\n  \"\"\"\n  screenshot: String\n\n  \"\"\"\n  The theme slug is used to internally match themes. Theme slugs can have\n  subdirectories like: my-theme/sub-theme. This field is equivalent to\n  WP_Theme-&gt;get_stylesheet().\n  \"\"\"\n  slug: String\n\n  \"\"\"\n  URI for the author/company website. This field is equivalent to WP_Theme-&gt;get( &quot;Tags&quot; ).\n  \"\"\"\n  tags: [String]\n\n  \"\"\"\n  A URI if the theme has a website associated with it. The Theme URI is handy\n  for directing users to a theme site for support etc. This field is equivalent\n  to WP_Theme-&gt;get( &quot;ThemeURI&quot; ).\n  \"\"\"\n  themeUri: String\n\n  \"\"\"\n  The current version of the theme. This field is equivalent to WP_Theme-&gt;get( &quot;Version&quot; ).\n  \"\"\"\n  version: Float\n}\n\n\"\"\"Any node that has a URI\"\"\"\ninterface UniformResourceIdentifiable {\n  \"\"\"The unique resource identifier path\"\"\"\n  databaseId: Int!\n\n  \"\"\"The unique resource identifier path\"\"\"\n  id: ID!\n\n  \"\"\"The unique resource identifier path\"\"\"\n  uri: String!\n}\n\n\"\"\"Input for the UpdateCategory mutation\"\"\"\ninput UpdateCategoryInput {\n  \"\"\"The slug that the category will be an alias of\"\"\"\n  aliasOf: String\n  clientMutationId: String!\n\n  \"\"\"The description of the category object\"\"\"\n  description: String\n\n  \"\"\"The ID of the category object to update\"\"\"\n  id: ID!\n\n  \"\"\"The name of the category object to mutate\"\"\"\n  name: String\n\n  \"\"\"The ID of the category that should be set as the parent\"\"\"\n  parentId: ID\n\n  \"\"\"\n  If this argument exists then the slug will be checked to see if it is not an\n  existing valid term. If that check succeeds (it is not a valid term), then it\n  is added and the term id is given. If it fails, then a check is made to\n  whether the taxonomy is hierarchical and the parent argument is not empty. If\n  the second check succeeds, the term will be inserted and the term id will be\n  given. If the slug argument is empty, then it will be calculated from the term name.\n  \"\"\"\n  slug: String\n}\n\n\"\"\"The payload for the UpdateCategory mutation\"\"\"\ntype UpdateCategoryPayload {\n  \"\"\"The created category\"\"\"\n  category: Category\n  clientMutationId: String!\n}\n\n\"\"\"Input for the updateComment mutation\"\"\"\ninput UpdateCommentInput {\n  \"\"\"User agent used to post the comment.\"\"\"\n  agent: String\n\n  \"\"\"The approval status of the comment.\"\"\"\n  approved: String\n\n  \"\"\"The name of the comment's author.\"\"\"\n  author: String\n\n  \"\"\"The email of the comment's author.\"\"\"\n  authorEmail: String\n\n  \"\"\"IP address for the comment's author.\"\"\"\n  authorIp: String\n\n  \"\"\"The url of the comment's author.\"\"\"\n  authorUrl: String\n  clientMutationId: String!\n\n  \"\"\"The ID of the post object the comment belongs to.\"\"\"\n  commentOn: Int\n\n  \"\"\"Content of the comment.\"\"\"\n  content: String\n\n  \"\"\"\n  The date of the object. Preferable to enter as year/month/day ( e.g.\n  01/31/2017 ) as it will rearrange date as fit if it is not specified.\n  Incomplete dates may have unintended results for example, \"2017\" as the input\n  will use current date with timestamp 20:17 \n  \"\"\"\n  date: String\n\n  \"\"\"The ID of the comment being updated.\"\"\"\n  id: ID!\n\n  \"\"\"Parent comment of current comment.\"\"\"\n  parent: ID\n\n  \"\"\"Type of comment.\"\"\"\n  type: String\n\n  \"\"\"The userID of the comment's author.\"\"\"\n  userId: Int\n}\n\n\"\"\"The payload for the updateComment mutation\"\"\"\ntype UpdateCommentPayload {\n  clientMutationId: String!\n\n  \"\"\"The comment that was created\"\"\"\n  comment: Comment\n\n  \"\"\"\n  Whether the mutation succeeded. If the comment is not approved, the server\n  will not return the comment to a non authenticated user, but a success message\n  can be returned if the create succeeded, and the client can optimistically add\n  the comment to the client cache\n  \"\"\"\n  success: Boolean\n}\n\n\"\"\"Input for the updateMediaItem mutation\"\"\"\ninput UpdateMediaItemInput {\n  \"\"\"Alternative text to display when mediaItem is not displayed\"\"\"\n  altText: String\n\n  \"\"\"The userId to assign as the author of the mediaItem\"\"\"\n  authorId: ID\n\n  \"\"\"The caption for the mediaItem\"\"\"\n  caption: String\n  clientMutationId: String!\n\n  \"\"\"The comment status for the mediaItem\"\"\"\n  commentStatus: String\n\n  \"\"\"The date of the mediaItem\"\"\"\n  date: String\n\n  \"\"\"The date (in GMT zone) of the mediaItem\"\"\"\n  dateGmt: String\n\n  \"\"\"Description of the mediaItem\"\"\"\n  description: String\n\n  \"\"\"The file name of the mediaItem\"\"\"\n  filePath: String\n\n  \"\"\"The file type of the mediaItem\"\"\"\n  fileType: MimeTypeEnum\n\n  \"\"\"The ID of the mediaItem object\"\"\"\n  id: ID!\n\n  \"\"\"The WordPress post ID or the graphQL postId of the parent object\"\"\"\n  parentId: ID\n\n  \"\"\"The ping status for the mediaItem\"\"\"\n  pingStatus: String\n\n  \"\"\"The slug of the mediaItem\"\"\"\n  slug: String\n\n  \"\"\"The status of the mediaItem\"\"\"\n  status: MediaItemStatusEnum\n\n  \"\"\"The title of the mediaItem\"\"\"\n  title: String\n}\n\n\"\"\"The payload for the updateMediaItem mutation\"\"\"\ntype UpdateMediaItemPayload {\n  clientMutationId: String!\n  mediaItem: MediaItem\n}\n\n\"\"\"Input for the updatePage mutation\"\"\"\ninput UpdatePageInput {\n  \"\"\"The userId to assign as the author of the object\"\"\"\n  authorId: ID\n  clientMutationId: String!\n\n  \"\"\"The comment status for the object\"\"\"\n  commentStatus: String\n\n  \"\"\"The content of the object\"\"\"\n  content: String\n\n  \"\"\"\n  The date of the object. Preferable to enter as year/month/day (e.g.\n  01/31/2017) as it will rearrange date as fit if it is not specified.\n  Incomplete dates may have unintended results for example, \"2017\" as the input\n  will use current date with timestamp 20:17 \n  \"\"\"\n  date: String\n\n  \"\"\"The ID of the page object\"\"\"\n  id: ID!\n\n  \"\"\"\n  A field used for ordering posts. This is typically used with nav menu items or\n  for special ordering of hierarchical content types.\n  \"\"\"\n  menuOrder: Int\n\n  \"\"\"The ID of the parent object\"\"\"\n  parentId: ID\n\n  \"\"\"The password used to protect the content of the object\"\"\"\n  password: String\n\n  \"\"\"The slug of the object\"\"\"\n  slug: String\n\n  \"\"\"The status of the object\"\"\"\n  status: PostStatusEnum\n\n  \"\"\"The title of the object\"\"\"\n  title: String\n}\n\n\"\"\"The payload for the updatePage mutation\"\"\"\ntype UpdatePagePayload {\n  clientMutationId: String!\n  page: Page\n}\n\n\"\"\"Input for the UpdatePostFormat mutation\"\"\"\ninput UpdatePostFormatInput {\n  \"\"\"The slug that the post_format will be an alias of\"\"\"\n  aliasOf: String\n  clientMutationId: String!\n\n  \"\"\"The description of the post_format object\"\"\"\n  description: String\n\n  \"\"\"The ID of the postFormat object to update\"\"\"\n  id: ID!\n\n  \"\"\"The name of the post_format object to mutate\"\"\"\n  name: String\n\n  \"\"\"\n  If this argument exists then the slug will be checked to see if it is not an\n  existing valid term. If that check succeeds (it is not a valid term), then it\n  is added and the term id is given. If it fails, then a check is made to\n  whether the taxonomy is hierarchical and the parent argument is not empty. If\n  the second check succeeds, the term will be inserted and the term id will be\n  given. If the slug argument is empty, then it will be calculated from the term name.\n  \"\"\"\n  slug: String\n}\n\n\"\"\"The payload for the UpdatePostFormat mutation\"\"\"\ntype UpdatePostFormatPayload {\n  clientMutationId: String!\n\n  \"\"\"The created post_format\"\"\"\n  postFormat: PostFormat\n}\n\n\"\"\"Input for the updatePost mutation\"\"\"\ninput UpdatePostInput {\n  \"\"\"The userId to assign as the author of the object\"\"\"\n  authorId: ID\n\n  \"\"\"Set connections between the post and categories\"\"\"\n  categories: PostCategoriesInput\n  clientMutationId: String!\n\n  \"\"\"The comment status for the object\"\"\"\n  commentStatus: String\n\n  \"\"\"The content of the object\"\"\"\n  content: String\n\n  \"\"\"\n  The date of the object. Preferable to enter as year/month/day (e.g.\n  01/31/2017) as it will rearrange date as fit if it is not specified.\n  Incomplete dates may have unintended results for example, \"2017\" as the input\n  will use current date with timestamp 20:17 \n  \"\"\"\n  date: String\n\n  \"\"\"The excerpt of the object\"\"\"\n  excerpt: String\n\n  \"\"\"The ID of the post object\"\"\"\n  id: ID!\n\n  \"\"\"\n  A field used for ordering posts. This is typically used with nav menu items or\n  for special ordering of hierarchical content types.\n  \"\"\"\n  menuOrder: Int\n\n  \"\"\"The password used to protect the content of the object\"\"\"\n  password: String\n\n  \"\"\"The ping status for the object\"\"\"\n  pingStatus: String\n\n  \"\"\"URLs that have been pinged.\"\"\"\n  pinged: [String]\n\n  \"\"\"Set connections between the post and postFormats\"\"\"\n  postFormats: PostPostFormatsInput\n\n  \"\"\"The slug of the object\"\"\"\n  slug: String\n\n  \"\"\"The status of the object\"\"\"\n  status: PostStatusEnum\n\n  \"\"\"Set connections between the post and tags\"\"\"\n  tags: PostTagsInput\n\n  \"\"\"The title of the object\"\"\"\n  title: String\n\n  \"\"\"URLs queued to be pinged.\"\"\"\n  toPing: [String]\n}\n\n\"\"\"The payload for the updatePost mutation\"\"\"\ntype UpdatePostPayload {\n  clientMutationId: String!\n  post: Post\n}\n\n\"\"\"Input for the updateSettings mutation\"\"\"\ninput UpdateSettingsInput {\n  clientMutationId: String!\n\n  \"\"\"Allow people to submit comments on new posts.\"\"\"\n  discussionSettingsDefaultCommentStatus: String\n\n  \"\"\"\n  Allow link notifications from other blogs (pingbacks and trackbacks) on new articles.\n  \"\"\"\n  discussionSettingsDefaultPingStatus: String\n\n  \"\"\"A date format for all date strings.\"\"\"\n  generalSettingsDateFormat: String\n\n  \"\"\"Site tagline.\"\"\"\n  generalSettingsDescription: String\n\n  \"\"\"This address is used for admin purposes, like new user notification.\"\"\"\n  generalSettingsEmail: String\n\n  \"\"\"WordPress locale code.\"\"\"\n  generalSettingsLanguage: String\n\n  \"\"\"A day number of the week that the week should start on.\"\"\"\n  generalSettingsStartOfWeek: Int\n\n  \"\"\"A time format for all time strings.\"\"\"\n  generalSettingsTimeFormat: String\n\n  \"\"\"A city in the same timezone as you.\"\"\"\n  generalSettingsTimezone: String\n\n  \"\"\"Site title.\"\"\"\n  generalSettingsTitle: String\n\n  \"\"\"Site URL.\"\"\"\n  generalSettingsUrl: String\n\n  \"\"\"Blog pages show at most.\"\"\"\n  readingSettingsPostsPerPage: Int\n\n  \"\"\"Default post category.\"\"\"\n  writingSettingsDefaultCategory: Int\n\n  \"\"\"Default post format.\"\"\"\n  writingSettingsDefaultPostFormat: String\n\n  \"\"\"Convert emoticons like :-) and :-P to graphics on display.\"\"\"\n  writingSettingsUseSmilies: Boolean\n}\n\n\"\"\"The payload for the updateSettings mutation\"\"\"\ntype UpdateSettingsPayload {\n  allSettings: Settings\n  clientMutationId: String!\n  discussionSettings: DiscussionSettings\n  generalSettings: GeneralSettings\n  readingSettings: ReadingSettings\n  writingSettings: WritingSettings\n}\n\n\"\"\"Input for the UpdateTag mutation\"\"\"\ninput UpdateTagInput {\n  \"\"\"The slug that the post_tag will be an alias of\"\"\"\n  aliasOf: String\n  clientMutationId: String!\n\n  \"\"\"The description of the post_tag object\"\"\"\n  description: String\n\n  \"\"\"The ID of the tag object to update\"\"\"\n  id: ID!\n\n  \"\"\"The name of the post_tag object to mutate\"\"\"\n  name: String\n\n  \"\"\"\n  If this argument exists then the slug will be checked to see if it is not an\n  existing valid term. If that check succeeds (it is not a valid term), then it\n  is added and the term id is given. If it fails, then a check is made to\n  whether the taxonomy is hierarchical and the parent argument is not empty. If\n  the second check succeeds, the term will be inserted and the term id will be\n  given. If the slug argument is empty, then it will be calculated from the term name.\n  \"\"\"\n  slug: String\n}\n\n\"\"\"The payload for the UpdateTag mutation\"\"\"\ntype UpdateTagPayload {\n  clientMutationId: String!\n\n  \"\"\"The created post_tag\"\"\"\n  tag: Tag\n}\n\n\"\"\"Input for the updateUser mutation\"\"\"\ninput UpdateUserInput {\n  \"\"\"User's AOL IM account.\"\"\"\n  aim: String\n  clientMutationId: String!\n\n  \"\"\"A string containing content about the user.\"\"\"\n  description: String\n\n  \"\"\"\n  A string that will be shown on the site. Defaults to user's username. It is\n  likely that you will want to change this, for both appearance and security\n  through obscurity (that is if you dont use and delete the default admin user).\n  \"\"\"\n  displayName: String\n\n  \"\"\"A string containing the user's email address.\"\"\"\n  email: String\n\n  \"\"\"\tThe user's first name.\"\"\"\n  firstName: String\n\n  \"\"\"The ID of the user\"\"\"\n  id: ID!\n\n  \"\"\"User's Jabber account.\"\"\"\n  jabber: String\n\n  \"\"\"The user's last name.\"\"\"\n  lastName: String\n\n  \"\"\"User's locale.\"\"\"\n  locale: String\n\n  \"\"\"\n  A string that contains a URL-friendly name for the user. The default is the user's username.\n  \"\"\"\n  nicename: String\n\n  \"\"\"The user's nickname, defaults to the user's username.\"\"\"\n  nickname: String\n\n  \"\"\"A string that contains the plain text password for the user.\"\"\"\n  password: String\n\n  \"\"\"The date the user registered. Format is Y-m-d H:i:s.\"\"\"\n  registered: String\n\n  \"\"\"\n  A string for whether to enable the rich editor or not. False if not empty.\n  \"\"\"\n  richEditing: String\n\n  \"\"\"An array of roles to be assigned to the user.\"\"\"\n  roles: [String]\n\n  \"\"\"A string containing the user's URL for the user's web site.\"\"\"\n  websiteUrl: String\n\n  \"\"\"User's Yahoo IM account.\"\"\"\n  yim: String\n}\n\n\"\"\"The payload for the updateUser mutation\"\"\"\ntype UpdateUserPayload {\n  clientMutationId: String!\n  user: User\n}\n\n\"\"\"A User object\"\"\"\ntype User implements Node & UniformResourceIdentifiable {\n  \"\"\"\n  Avatar object for user. The avatar object can be retrieved in different sizes by specifying the size argument.\n  \"\"\"\n  avatar(\n    \"\"\"\n    The size attribute of the avatar field can be used to fetch avatars of\n    different sizes. The value corresponds to the dimension in pixels to fetch.\n    The default is 96 pixels.\n    \"\"\"\n    size: Int = 96\n\n    \"\"\"\n    Whether to always show the default image, never the Gravatar. Default false\n    \"\"\"\n    forceDefault: Boolean\n    rating: AvatarRatingEnum\n  ): Avatar\n\n  \"\"\"\n  User metadata option name. Usually it will be &quot;wp_capabilities&quot;.\n  \"\"\"\n  capKey: String\n\n  \"\"\"A list of capabilities (permissions) granted to the user\"\"\"\n  capabilities: [String]\n\n  \"\"\"Connection between the User type and the Comment type\"\"\"\n  comments(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: UserToCommentConnectionWhereArgs\n  ): UserToCommentConnection\n\n  \"\"\"Identifies the primary key from the database.\"\"\"\n  databaseId: Int!\n\n  \"\"\"Description of the user.\"\"\"\n  description: String\n\n  \"\"\"\n  Email address of the user. This is equivalent to the WP_User-&gt;user_email property.\n  \"\"\"\n  email: String\n\n  \"\"\"\n  A complete list of capabilities including capabilities inherited from a role.\n  This is equivalent to the array keys of WP_User-&gt;allcaps.\n  \"\"\"\n  extraCapabilities: [String]\n\n  \"\"\"\n  First name of the user. This is equivalent to the WP_User-&gt;user_first_name property.\n  \"\"\"\n  firstName: String\n\n  \"\"\"The globally unique identifier for the user object.\"\"\"\n  id: ID!\n\n  \"\"\"Whether the object is restricted from the current viewer\"\"\"\n  isRestricted: Boolean\n\n  \"\"\"\n  Last name of the user. This is equivalent to the WP_User-&gt;user_last_name property.\n  \"\"\"\n  lastName: String\n\n  \"\"\"\n  The preferred language locale set for the user. Value derived from get_user_locale().\n  \"\"\"\n  locale: String\n\n  \"\"\"Connection between the User type and the mediaItem type\"\"\"\n  mediaItems(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: UserToMediaItemConnectionWhereArgs\n  ): UserToMediaItemConnection\n\n  \"\"\"\n  Display name of the user. This is equivalent to the WP_User-&gt;dispaly_name property.\n  \"\"\"\n  name: String\n\n  \"\"\"\n  The nicename for the user. This field is equivalent to WP_User-&gt;user_nicename\n  \"\"\"\n  nicename: String\n\n  \"\"\"Nickname of the user.\"\"\"\n  nickname: String\n\n  \"\"\"Connection between the User type and the page type\"\"\"\n  pages(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: UserToPageConnectionWhereArgs\n  ): UserToPageConnection\n\n  \"\"\"Connection between the User type and the post type\"\"\"\n  posts(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: UserToPostConnectionWhereArgs\n  ): UserToPostConnection\n\n  \"\"\"\n  The date the user registered or was created. The field follows a full ISO8601 date string format.\n  \"\"\"\n  registeredDate: String\n\n  \"\"\"Connection between the User and Revisions authored by the user\"\"\"\n  revisions(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n\n    \"\"\"Arguments for filtering the connection\"\"\"\n    where: UserToContentRevisionUnionConnectionWhereArgs\n  ): UserToContentRevisionUnionConnection\n\n  \"\"\"Connection between the User type and the UserRole type\"\"\"\n  roles(\n    \"\"\"The number of items to return after the referenced \"after\" cursor\"\"\"\n    first: Int\n    last: Int\n\n    \"\"\"\n    Cursor used along with the \"first\" argument to reference where in the dataset to get data\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Cursor used along with the \"last\" argument to reference where in the dataset to get data\n    \"\"\"\n    before: String\n  ): UserToUserRoleConnection\n\n  \"\"\"\n  The slug for the user. This field is equivalent to WP_User-&gt;user_nicename\n  \"\"\"\n  slug: String\n\n  \"\"\"The unique resource identifier path\"\"\"\n  uri: String!\n\n  \"\"\"A website url that is associated with the user.\"\"\"\n  url: String\n\n  \"\"\"The Id of the user. Equivalent to WP_User-&gt;ID\"\"\"\n  userId: Int\n\n  \"\"\"\n  Username for the user. This field is equivalent to WP_User-&gt;user_login.\n  \"\"\"\n  username: String\n}\n\n\"\"\"\nThe Type of Identifier used to fetch a single User node. To be used along with the \"id\" field. Default is \"ID\".\n\"\"\"\nenum UserNodeIdTypeEnum {\n  \"\"\"The Database ID for the node\"\"\"\n  DATABASE_ID\n\n  \"\"\"The Email of the User\"\"\"\n  EMAIL\n\n  \"\"\"The hashed Global ID\"\"\"\n  ID\n\n  \"\"\"The slug of the User\"\"\"\n  SLUG\n\n  \"\"\"The URI for the node\"\"\"\n  URI\n\n  \"\"\"The username the User uses to login with\"\"\"\n  USERNAME\n}\n\n\"\"\"A user role object\"\"\"\ntype UserRole implements Node {\n  \"\"\"The capabilities that belong to this role\"\"\"\n  capabilities: [String]\n\n  \"\"\"The display name of the role\"\"\"\n  displayName: String\n\n  \"\"\"The globally unique identifier for the user role object.\"\"\"\n  id: ID!\n\n  \"\"\"Whether the object is restricted from the current viewer\"\"\"\n  isRestricted: Boolean\n\n  \"\"\"The registered name of the role\"\"\"\n  name: String\n}\n\n\"\"\"Names of available user roles\"\"\"\nenum UserRoleEnum {\n  ADMINISTRATOR\n  AUTHOR\n  CONTRIBUTOR\n  EDITOR\n  SUBSCRIBER\n}\n\n\"\"\"Field to order the connection by\"\"\"\nenum UsersConnectionOrderbyEnum {\n  \"\"\"Order by display name\"\"\"\n  DISPLAY_NAME\n\n  \"\"\"Order by email address\"\"\"\n  EMAIL\n\n  \"\"\"Order by login\"\"\"\n  LOGIN\n\n  \"\"\"Preserve the login order given in the LOGIN_IN array\"\"\"\n  LOGIN_IN\n\n  \"\"\"Order by nice name\"\"\"\n  NICE_NAME\n\n  \"\"\"Preserve the nice name order given in the NICE_NAME_IN array\"\"\"\n  NICE_NAME_IN\n\n  \"\"\"Order by registration date\"\"\"\n  REGISTERED\n\n  \"\"\"Order by URL\"\"\"\n  URL\n}\n\n\"\"\"Options for ordering the connection\"\"\"\ninput UsersConnectionOrderbyInput {\n  field: UsersConnectionOrderbyEnum!\n  order: OrderEnum\n}\n\n\"\"\"Connection between the User type and the Comment type\"\"\"\ntype UserToCommentConnection {\n  \"\"\"Edges for the UserToCommentConnection connection\"\"\"\n  edges: [UserToCommentConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Comment]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype UserToCommentConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Comment\n}\n\n\"\"\"Arguments for filtering the UserToCommentConnection connection\"\"\"\ninput UserToCommentConnectionWhereArgs {\n  \"\"\"Comment author email address.\"\"\"\n  authorEmail: String\n\n  \"\"\"Array of author IDs to include comments for.\"\"\"\n  authorIn: [ID]\n\n  \"\"\"Array of author IDs to exclude comments for.\"\"\"\n  authorNotIn: [ID]\n\n  \"\"\"Comment author URL.\"\"\"\n  authorUrl: String\n\n  \"\"\"Array of comment IDs to include.\"\"\"\n  commentIn: [ID]\n\n  \"\"\"\n  Array of IDs of users whose unapproved comments will be returned by the\n  \t\t\t\t\t\t\tquery regardless of status.\n  \"\"\"\n  commentNotIn: [ID]\n\n  \"\"\"Include comments of a given type.\"\"\"\n  commentType: String\n\n  \"\"\"Include comments from a given array of comment types.\"\"\"\n  commentTypeIn: [String]\n\n  \"\"\"Exclude comments from a given array of comment types.\"\"\"\n  commentTypeNotIn: String\n\n  \"\"\"Content object author ID to limit results by.\"\"\"\n  contentAuthor: [ID]\n\n  \"\"\"Array of author IDs to retrieve comments for.\"\"\"\n  contentAuthorIn: [ID]\n\n  \"\"\"Array of author IDs *not* to retrieve comments for.\"\"\"\n  contentAuthorNotIn: [ID]\n\n  \"\"\"\n  Limit results to those affiliated with a given content object\n  \t\t\t\t\t\t\tID.\n  \"\"\"\n  contentId: ID\n\n  \"\"\"\n  Array of content object IDs to include affiliated comments\n  \t\t\t\t\t\t\tfor.\n  \"\"\"\n  contentIdIn: [ID]\n\n  \"\"\"\n  Array of content object IDs to exclude affiliated comments\n  \t\t\t\t\t\t\tfor.\n  \"\"\"\n  contentIdNotIn: [ID]\n\n  \"\"\"Content object name to retrieve affiliated comments for.\"\"\"\n  contentName: String\n\n  \"\"\"Content Object parent ID to retrieve affiliated comments for.\"\"\"\n  contentParent: Int\n\n  \"\"\"\n  Array of content object statuses to retrieve affiliated comments for.\n  \t\t\t\t\t\t\tPass 'any' to match any value.\n  \"\"\"\n  contentStatus: [PostStatusEnum]\n\n  \"\"\"\n  Content object type or array of types to retrieve affiliated comments for. Pass 'any' to match any value.\n  \"\"\"\n  contentType: [ContentTypeEnum]\n\n  \"\"\"\n  Array of IDs or email addresses of users whose unapproved comments will be\n  returned by the query regardless of $status. Default empty\n  \"\"\"\n  includeUnapproved: [ID]\n\n  \"\"\"Karma score to retrieve matching comments for.\"\"\"\n  karma: Int\n\n  \"\"\"The cardinality of the order of the connection\"\"\"\n  order: OrderEnum\n\n  \"\"\"Field to order the comments by.\"\"\"\n  orderby: CommentsConnectionOrderbyEnum\n\n  \"\"\"Parent ID of comment to retrieve children of.\"\"\"\n  parent: Int\n\n  \"\"\"Array of parent IDs of comments to retrieve children for.\"\"\"\n  parentIn: [ID]\n\n  \"\"\"\n  Array of parent IDs of comments *not* to retrieve children\n  \t\t\t\t\t\t\tfor.\n  \"\"\"\n  parentNotIn: [ID]\n\n  \"\"\"Search term(s) to retrieve matching comments for.\"\"\"\n  search: String\n\n  \"\"\"Comment status to limit results by.\"\"\"\n  status: String\n\n  \"\"\"Include comments for a specific user ID.\"\"\"\n  userId: ID\n}\n\n\"\"\"Connection between the User type and the ContentRevisionUnion type\"\"\"\ntype UserToContentRevisionUnionConnection {\n  \"\"\"Edges for the UserToContentRevisionUnionConnection connection\"\"\"\n  edges: [UserToContentRevisionUnionConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [ContentRevisionUnion]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype UserToContentRevisionUnionConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: ContentRevisionUnion\n}\n\n\"\"\"\nArguments for filtering the UserToContentRevisionUnionConnection connection\n\"\"\"\ninput UserToContentRevisionUnionConnectionWhereArgs {\n  \"\"\"Filter the connection based on dates\"\"\"\n  dateQuery: DateQueryInput\n\n  \"\"\"\n  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords\n  \"\"\"\n  hasPassword: Boolean\n\n  \"\"\"Specific ID of the object\"\"\"\n  id: Int\n\n  \"\"\"Array of IDs for the objects to retrieve\"\"\"\n  in: [ID]\n\n  \"\"\"Get objects with a specific mimeType property\"\"\"\n  mimeType: MimeTypeEnum\n\n  \"\"\"Slug / post_name of the object\"\"\"\n  name: String\n\n  \"\"\"Specify objects to retrieve. Use slugs\"\"\"\n  nameIn: [String]\n\n  \"\"\"\n  Specify IDs NOT to retrieve. If this is used in the same query as \"in\", it will be ignored\n  \"\"\"\n  notIn: [ID]\n\n  \"\"\"What paramater to use to order the objects by.\"\"\"\n  orderby: [PostObjectsConnectionOrderbyInput]\n\n  \"\"\"Use ID to return only children. Use 0 to return only top-level items\"\"\"\n  parent: String\n\n  \"\"\"Specify objects whose parent is in an array\"\"\"\n  parentIn: [ID]\n\n  \"\"\"Specify posts whose parent is not in an array\"\"\"\n  parentNotIn: [ID]\n\n  \"\"\"Show posts with a specific password.\"\"\"\n  password: String\n\n  \"\"\"Show Posts based on a keyword search\"\"\"\n  search: String\n  stati: [PostStatusEnum]\n  status: PostStatusEnum\n\n  \"\"\"Title of the object\"\"\"\n  title: String\n}\n\n\"\"\"Connection between the User type and the mediaItem type\"\"\"\ntype UserToMediaItemConnection {\n  \"\"\"Edges for the UserToMediaItemConnection connection\"\"\"\n  edges: [UserToMediaItemConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [MediaItem]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype UserToMediaItemConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: MediaItem\n}\n\n\"\"\"Arguments for filtering the UserToMediaItemConnection connection\"\"\"\ninput UserToMediaItemConnectionWhereArgs {\n  \"\"\"\n  The user that's connected as the author of the object. Use the userId for the author object.\n  \"\"\"\n  author: Int\n\n  \"\"\"Find objects connected to author(s) in the array of author's userIds\"\"\"\n  authorIn: [ID]\n\n  \"\"\"Find objects connected to the author by the author's nicename\"\"\"\n  authorName: String\n\n  \"\"\"\n  Find objects NOT connected to author(s) in the array of author's userIds\n  \"\"\"\n  authorNotIn: [ID]\n\n  \"\"\"Filter the connection based on dates\"\"\"\n  dateQuery: DateQueryInput\n\n  \"\"\"\n  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords\n  \"\"\"\n  hasPassword: Boolean\n\n  \"\"\"Specific ID of the object\"\"\"\n  id: Int\n\n  \"\"\"Array of IDs for the objects to retrieve\"\"\"\n  in: [ID]\n\n  \"\"\"Get objects with a specific mimeType property\"\"\"\n  mimeType: MimeTypeEnum\n\n  \"\"\"Slug / post_name of the object\"\"\"\n  name: String\n\n  \"\"\"Specify objects to retrieve. Use slugs\"\"\"\n  nameIn: [String]\n\n  \"\"\"\n  Specify IDs NOT to retrieve. If this is used in the same query as \"in\", it will be ignored\n  \"\"\"\n  notIn: [ID]\n\n  \"\"\"What paramater to use to order the objects by.\"\"\"\n  orderby: [PostObjectsConnectionOrderbyInput]\n\n  \"\"\"Use ID to return only children. Use 0 to return only top-level items\"\"\"\n  parent: String\n\n  \"\"\"Specify objects whose parent is in an array\"\"\"\n  parentIn: [ID]\n\n  \"\"\"Specify posts whose parent is not in an array\"\"\"\n  parentNotIn: [ID]\n\n  \"\"\"Show posts with a specific password.\"\"\"\n  password: String\n\n  \"\"\"Show Posts based on a keyword search\"\"\"\n  search: String\n  stati: [PostStatusEnum]\n  status: PostStatusEnum\n\n  \"\"\"Title of the object\"\"\"\n  title: String\n}\n\n\"\"\"Connection between the User type and the page type\"\"\"\ntype UserToPageConnection {\n  \"\"\"Edges for the UserToPageConnection connection\"\"\"\n  edges: [UserToPageConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Page]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype UserToPageConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Page\n}\n\n\"\"\"Arguments for filtering the UserToPageConnection connection\"\"\"\ninput UserToPageConnectionWhereArgs {\n  \"\"\"\n  The user that's connected as the author of the object. Use the userId for the author object.\n  \"\"\"\n  author: Int\n\n  \"\"\"Find objects connected to author(s) in the array of author's userIds\"\"\"\n  authorIn: [ID]\n\n  \"\"\"Find objects connected to the author by the author's nicename\"\"\"\n  authorName: String\n\n  \"\"\"\n  Find objects NOT connected to author(s) in the array of author's userIds\n  \"\"\"\n  authorNotIn: [ID]\n\n  \"\"\"Filter the connection based on dates\"\"\"\n  dateQuery: DateQueryInput\n\n  \"\"\"\n  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords\n  \"\"\"\n  hasPassword: Boolean\n\n  \"\"\"Specific ID of the object\"\"\"\n  id: Int\n\n  \"\"\"Array of IDs for the objects to retrieve\"\"\"\n  in: [ID]\n\n  \"\"\"Get objects with a specific mimeType property\"\"\"\n  mimeType: MimeTypeEnum\n\n  \"\"\"Slug / post_name of the object\"\"\"\n  name: String\n\n  \"\"\"Specify objects to retrieve. Use slugs\"\"\"\n  nameIn: [String]\n\n  \"\"\"\n  Specify IDs NOT to retrieve. If this is used in the same query as \"in\", it will be ignored\n  \"\"\"\n  notIn: [ID]\n\n  \"\"\"What paramater to use to order the objects by.\"\"\"\n  orderby: [PostObjectsConnectionOrderbyInput]\n\n  \"\"\"Use ID to return only children. Use 0 to return only top-level items\"\"\"\n  parent: String\n\n  \"\"\"Specify objects whose parent is in an array\"\"\"\n  parentIn: [ID]\n\n  \"\"\"Specify posts whose parent is not in an array\"\"\"\n  parentNotIn: [ID]\n\n  \"\"\"Show posts with a specific password.\"\"\"\n  password: String\n\n  \"\"\"Show Posts based on a keyword search\"\"\"\n  search: String\n  stati: [PostStatusEnum]\n  status: PostStatusEnum\n\n  \"\"\"Title of the object\"\"\"\n  title: String\n}\n\n\"\"\"Connection between the User type and the post type\"\"\"\ntype UserToPostConnection {\n  \"\"\"Edges for the UserToPostConnection connection\"\"\"\n  edges: [UserToPostConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [Post]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype UserToPostConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Post\n}\n\n\"\"\"Arguments for filtering the UserToPostConnection connection\"\"\"\ninput UserToPostConnectionWhereArgs {\n  \"\"\"\n  The user that's connected as the author of the object. Use the userId for the author object.\n  \"\"\"\n  author: Int\n\n  \"\"\"Find objects connected to author(s) in the array of author's userIds\"\"\"\n  authorIn: [ID]\n\n  \"\"\"Find objects connected to the author by the author's nicename\"\"\"\n  authorName: String\n\n  \"\"\"\n  Find objects NOT connected to author(s) in the array of author's userIds\n  \"\"\"\n  authorNotIn: [ID]\n\n  \"\"\"Category ID\"\"\"\n  categoryId: Int\n\n  \"\"\"\n  Array of category IDs, used to display objects from one category OR another\n  \"\"\"\n  categoryIn: [ID]\n\n  \"\"\"Use Category Slug\"\"\"\n  categoryName: String\n\n  \"\"\"\n  Array of category IDs, used to display objects from one category OR another\n  \"\"\"\n  categoryNotIn: [ID]\n\n  \"\"\"Filter the connection based on dates\"\"\"\n  dateQuery: DateQueryInput\n\n  \"\"\"\n  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords\n  \"\"\"\n  hasPassword: Boolean\n\n  \"\"\"Specific ID of the object\"\"\"\n  id: Int\n\n  \"\"\"Array of IDs for the objects to retrieve\"\"\"\n  in: [ID]\n\n  \"\"\"Get objects with a specific mimeType property\"\"\"\n  mimeType: MimeTypeEnum\n\n  \"\"\"Slug / post_name of the object\"\"\"\n  name: String\n\n  \"\"\"Specify objects to retrieve. Use slugs\"\"\"\n  nameIn: [String]\n\n  \"\"\"\n  Specify IDs NOT to retrieve. If this is used in the same query as \"in\", it will be ignored\n  \"\"\"\n  notIn: [ID]\n\n  \"\"\"What paramater to use to order the objects by.\"\"\"\n  orderby: [PostObjectsConnectionOrderbyInput]\n\n  \"\"\"Use ID to return only children. Use 0 to return only top-level items\"\"\"\n  parent: String\n\n  \"\"\"Specify objects whose parent is in an array\"\"\"\n  parentIn: [ID]\n\n  \"\"\"Specify posts whose parent is not in an array\"\"\"\n  parentNotIn: [ID]\n\n  \"\"\"Show posts with a specific password.\"\"\"\n  password: String\n\n  \"\"\"Show Posts based on a keyword search\"\"\"\n  search: String\n  stati: [PostStatusEnum]\n  status: PostStatusEnum\n\n  \"\"\"Tag Slug\"\"\"\n  tag: String\n\n  \"\"\"Use Tag ID\"\"\"\n  tagId: String\n\n  \"\"\"Array of tag IDs, used to display objects from one tag OR another\"\"\"\n  tagIn: [ID]\n\n  \"\"\"Array of tag IDs, used to display objects from one tag OR another\"\"\"\n  tagNotIn: [ID]\n\n  \"\"\"Array of tag slugs, used to display objects from one tag OR another\"\"\"\n  tagSlugAnd: [String]\n\n  \"\"\"Array of tag slugs, used to exclude objects in specified tags\"\"\"\n  tagSlugIn: [String]\n\n  \"\"\"Title of the object\"\"\"\n  title: String\n}\n\n\"\"\"Connection between the User type and the UserRole type\"\"\"\ntype UserToUserRoleConnection {\n  \"\"\"Edges for the UserToUserRoleConnection connection\"\"\"\n  edges: [UserToUserRoleConnectionEdge]\n\n  \"\"\"The nodes of the connection, without the edges\"\"\"\n  nodes: [UserRole]\n\n  \"\"\"Information about pagination in a connection.\"\"\"\n  pageInfo: WPPageInfo\n}\n\n\"\"\"An edge in a connection\"\"\"\ntype UserToUserRoleConnectionEdge {\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String\n\n  \"\"\"The item at the end of the edge\"\"\"\n  node: UserRole\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype WPPageInfo {\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n}\n\n\"\"\"The writing setting type\"\"\"\ntype WritingSettings {\n  \"\"\"Default post category.\"\"\"\n  defaultCategory: Int\n\n  \"\"\"Default post format.\"\"\"\n  defaultPostFormat: String\n\n  \"\"\"Convert emoticons like :-) and :-P to graphics on display.\"\"\"\n  useSmilies: Boolean\n}\n"}